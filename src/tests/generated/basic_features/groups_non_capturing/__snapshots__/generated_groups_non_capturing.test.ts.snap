// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic_features/groups_non_capturing template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
          },
          "posLine1": "a)(b)c/",
          "posLine2": "^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 6,
              "idx": 0,
            },
          },
          "posLine1": "(b)c/",
          "posLine2": "^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 98,
                "type": "equal",
              },
              "type": "lastComparison",
            },
          },
          "posLine1": "b)c/",
          "posLine2": "^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 6,
              "idx": 0,
            },
          },
          "posLine1": "(b)c/",
          "posLine2": "^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 99,
                "type": "equal",
              },
              "type": "lastComparison",
            },
          },
          "posLine1": "c/",
          "posLine2": "^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 6,
            "idx": 0,
          },
        ],
      },
    },
  ],
  "groups": Array [
    Object {
      "astStart": 6,
      "idx": 0,
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 97,
              "type": "equal",
            },
            "type": "lastComparison",
          },
        },
        "posLine1": "a)(b)c/",
        "posLine2": "^",
        "type": "charOrSet",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 6,
            "idx": 0,
          },
        },
        "posLine1": "(b)c/",
        "posLine2": "^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 98,
              "type": "equal",
            },
            "type": "lastComparison",
          },
        },
        "posLine1": "b)c/",
        "posLine2": "^",
        "type": "charOrSet",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 6,
            "idx": 0,
          },
        },
        "posLine1": "(b)c/",
        "posLine2": "^^^",
        "type": "groupEndMarker",
      },
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 99,
              "type": "equal",
            },
            "type": "lastComparison",
          },
        },
        "posLine1": "c/",
        "posLine2": "^",
        "type": "charOrSet",
      },
    ],
    "followUp": null,
    "functionName": "fiber0001",
    "hasCallback": false,
    "lastAtomReturns": false,
    "meta": Object {
      "groups": Array [
        Object {
          "astStart": 6,
          "idx": 0,
        },
      ],
    },
  },
  "regexStr": "/(?:a)(b)c/",
}
`;
