// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/alphanumeric_without_space template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {},
          "posLine1": "...-9]*$/",
          "posLine2": "       ^",
          "type": "endAnchor",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 90,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 57,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 65,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "[a-zA-Z0-9]*$/",
          "posLine2": "^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "functionName": "callback",
      },
      "functionName": "fiber0002",
      "hasCallback": true,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {},
          "posLine1": "^[a-zA-Z0-9...",
          "posLine2": "^",
          "type": "startAnchor",
        },
        Object {
          "data": Object {
            "followUp": Object {
              "atoms": Array [
                Object {
                  "data": Object {},
                  "posLine1": "...-9]*$/",
                  "posLine2": "       ^",
                  "type": "endAnchor",
                },
              ],
              "followUp": null,
              "functionName": "fiber0001",
              "hasCallback": false,
              "lastAtomReturns": false,
              "meta": Object {
                "groups": Array [],
              },
            },
            "maxOrMinCount": false,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 90,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 122,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 97,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 57,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 65,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 48,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "[a-zA-Z0-9]*$/",
                  "posLine2": "^^^^^^^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": Object {
                "functionName": "callback",
              },
              "functionName": "fiber0002",
              "hasCallback": true,
              "lastAtomReturns": false,
              "meta": Object {
                "groups": Array [],
              },
            },
          },
          "posLine1": "[a-zA-Z0-9]*$/",
          "posLine2": "^^^^^^^^^^^^",
          "type": "greedyQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0003",
      "hasCallback": false,
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [],
      },
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {},
        "posLine1": "^[a-zA-Z0-9...",
        "posLine2": "^",
        "type": "startAnchor",
      },
      Object {
        "data": Object {
          "followUp": Object {
            "atoms": Array [
              Object {
                "data": Object {},
                "posLine1": "...-9]*$/",
                "posLine2": "       ^",
                "type": "endAnchor",
              },
            ],
            "followUp": null,
            "functionName": "fiber0001",
            "hasCallback": false,
            "lastAtomReturns": false,
            "meta": Object {
              "groups": Array [],
            },
          },
          "maxOrMinCount": false,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 90,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 122,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 97,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 65,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "type": "comparison",
                  },
                  "unicode": false,
                },
                "posLine1": "[a-zA-Z0-9]*$/",
                "posLine2": "^^^^^^^^^^^",
                "type": "charOrSet",
              },
            ],
            "followUp": Object {
              "functionName": "callback",
            },
            "functionName": "fiber0002",
            "hasCallback": true,
            "lastAtomReturns": false,
            "meta": Object {
              "groups": Array [],
            },
          },
        },
        "posLine1": "[a-zA-Z0-9]*$/",
        "posLine2": "^^^^^^^^^^^^",
        "type": "greedyQuantifier",
      },
    ],
    "followUp": null,
    "functionName": "fiber0003",
    "hasCallback": false,
    "lastAtomReturns": true,
    "meta": Object {
      "groups": Array [],
    },
  },
  "regexStr": "/^[a-zA-Z0-9]*$/",
}
`;
