// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`etherpad/ep_ops template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 44,
              "idx": 3,
            },
          },
          "posLine1": "...))?([-+=])([0-9a-z]+)|\\\\?/",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 44,
            "idx": 3,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...)?([-+=])([0-9a-z]+)|\\\\?/",
          "posLine2": "             ^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 44,
                  "idx": 3,
                },
              },
              "posLine1": "...))?([-+=])([0-9a-z]+)|\\\\?/",
              "posLine2": "             ^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
          ],
          "followUp": null,
          "functionName": "fiber0002",
          "lastAtomReturns": false,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 44,
                "idx": 3,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0004",
        "maxOrMinCount": true,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 44,
              "idx": 3,
            },
          ],
        },
        "minCount": 1,
        "posLine1": "...)?([-+=])([0-9a-z]+)|\\\\?/",
        "posLine2": "             ^^^^^^^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0003",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 37,
              "idx": 2,
            },
          },
          "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
          "posLine2": "             ^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 45,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 61,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 43,
                  "comparisonValue2": 45,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...9a-z]+))?([-+=])([0-9a-z]...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 37,
              "idx": 2,
            },
          },
          "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
          "posLine2": "             ^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 44,
              "idx": 3,
            },
          },
          "posLine1": "...))?([-+=])([0-9a-z]+)|\\\\?/",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0004",
            "maxOrMinCount": true,
          },
          "posLine1": "...)?([-+=])([0-9a-z]+)|\\\\?/",
          "posLine2": "             ^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            43,
            45,
            61,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            43,
            45,
            61,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 37,
            "idx": 2,
          },
          Object {
            "astStart": 44,
            "idx": 3,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 24,
              "idx": 1,
            },
          },
          "posLine1": "...]+)*)(?:\\\\|([0-9a-z]+))?([-+=])(...",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 37,
                  "idx": 2,
                },
              },
              "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
              "posLine2": "             ^^^^^^^",
              "type": "groupStartMarker",
            },
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 45,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 61,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue1": 43,
                      "comparisonValue2": 45,
                      "type": "equalOneOfTwo",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "...9a-z]+))?([-+=])([0-9a-z]...",
              "posLine2": "             ^^^^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 37,
                  "idx": 2,
                },
              },
              "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
              "posLine2": "             ^^^^^^^",
              "type": "groupEndMarker",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 44,
                  "idx": 3,
                },
              },
              "posLine1": "...))?([-+=])([0-9a-z]+)|\\\\?/",
              "posLine2": "             ^^^^^^^^^^^",
              "type": "groupStartMarker",
            },
            Object {
              "data": Object {
                "functionName": "greedyQuantifier0004",
                "maxOrMinCount": true,
              },
              "posLine1": "...)?([-+=])([0-9a-z]+)|\\\\?/",
              "posLine2": "             ^^^^^^^^^",
              "type": "quantifierStarter",
            },
          ],
          "followUp": null,
          "functionName": "fiber0005",
          "lastAtomReturns": true,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [
                43,
                45,
                61,
              ],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [
                43,
                45,
                61,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 37,
                "idx": 2,
              },
              Object {
                "astStart": 44,
                "idx": 3,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0007",
        "maxCount": 1,
        "maxOrMinCount": true,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 24,
              "idx": 1,
            },
            Object {
              "astStart": 37,
              "idx": 2,
            },
            Object {
              "astStart": 44,
              "idx": 3,
            },
          ],
        },
        "posLine1": "...-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0...",
        "posLine2": "             ^^^^^^^^^^^^^^^^^^",
        "wrappedHandler": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 124,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "...-z]+)*)(?:\\\\|([0-9a-z]+...",
              "posLine2": "             ^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 24,
                  "idx": 1,
                },
              },
              "posLine1": "...]+)*)(?:\\\\|([0-9a-z]+))?([-+=])(...",
              "posLine2": "             ^^^^^^^^^^^",
              "type": "groupStartMarker",
            },
            Object {
              "data": Object {
                "functionName": "greedyQuantifier0009",
                "maxOrMinCount": true,
              },
              "posLine1": "...+)*)(?:\\\\|([0-9a-z]+))?([-+=])...",
              "posLine2": "             ^^^^^^^^^",
              "type": "quantifierStarter",
            },
          ],
          "followUp": null,
          "functionName": "fiber0010",
          "lastAtomReturns": true,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [
                124,
              ],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [
                124,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 24,
                "idx": 1,
              },
            ],
          },
        },
      },
      "functionName": "fiber0006",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 24,
            "idx": 1,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...+)*)(?:\\\\|([0-9a-z]+))?([-+=]...",
          "posLine2": "             ^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 24,
                  "idx": 1,
                },
              },
              "posLine1": "...]+)*)(?:\\\\|([0-9a-z]+))?([-+=])(...",
              "posLine2": "             ^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
          ],
          "followUp": Object {
            "followUp": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 37,
                      "idx": 2,
                    },
                  },
                  "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
                  "posLine2": "             ^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 45,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 61,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue1": 43,
                          "comparisonValue2": 45,
                          "type": "equalOneOfTwo",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...9a-z]+))?([-+=])([0-9a-z]...",
                  "posLine2": "             ^^^^^",
                  "type": "charOrSet",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 37,
                      "idx": 2,
                    },
                  },
                  "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
                  "posLine2": "             ^^^^^^^",
                  "type": "groupEndMarker",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 44,
                      "idx": 3,
                    },
                  },
                  "posLine1": "...))?([-+=])([0-9a-z]+)|\\\\?/",
                  "posLine2": "             ^^^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0004",
                    "maxOrMinCount": true,
                  },
                  "posLine1": "...)?([-+=])([0-9a-z]+)|\\\\?/",
                  "posLine2": "             ^^^^^^^^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0005",
              "lastAtomReturns": true,
              "meta": Object {
                "combinedCharRange": Object {
                  "chars": Array [
                    43,
                    45,
                    61,
                  ],
                  "negate": false,
                },
                "firstCharRange": Object {
                  "chars": Array [
                    43,
                    45,
                    61,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 37,
                    "idx": 2,
                  },
                  Object {
                    "astStart": 44,
                    "idx": 3,
                  },
                ],
              },
            },
            "functionName": "greedyQuantifier0007",
            "maxCount": 1,
            "maxOrMinCount": true,
            "meta": Object {
              "combinedCharRange": Object {
                "chars": Array [],
                "negate": false,
              },
              "firstCharRange": Object {
                "chars": Array [],
                "negate": false,
              },
              "groups": Array [
                Object {
                  "astStart": 24,
                  "idx": 1,
                },
                Object {
                  "astStart": 37,
                  "idx": 2,
                },
                Object {
                  "astStart": 44,
                  "idx": 3,
                },
              ],
            },
            "posLine1": "...-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0...",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^",
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 124,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...-z]+)*)(?:\\\\|([0-9a-z]+...",
                  "posLine2": "             ^^",
                  "type": "charOrSet",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 24,
                      "idx": 1,
                    },
                  },
                  "posLine1": "...]+)*)(?:\\\\|([0-9a-z]+))?([-+=])(...",
                  "posLine2": "             ^^^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0009",
                    "maxOrMinCount": true,
                  },
                  "posLine1": "...+)*)(?:\\\\|([0-9a-z]+))?([-+=])...",
                  "posLine2": "             ^^^^^^^^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0010",
              "lastAtomReturns": true,
              "meta": Object {
                "combinedCharRange": Object {
                  "chars": Array [
                    124,
                  ],
                  "negate": false,
                },
                "firstCharRange": Object {
                  "chars": Array [
                    124,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 24,
                    "idx": 1,
                  },
                ],
              },
            },
          },
          "functionName": "fiber0006",
          "lastAtomReturns": false,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 24,
                "idx": 1,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0009",
        "maxOrMinCount": true,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 24,
              "idx": 1,
            },
          ],
        },
        "minCount": 1,
        "posLine1": "...+)*)(?:\\\\|([0-9a-z]+))?([-+=])...",
        "posLine2": "             ^^^^^^^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0008",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 124,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...-z]+)*)(?:\\\\|([0-9a-z]+...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 24,
              "idx": 1,
            },
          },
          "posLine1": "...]+)*)(?:\\\\|([0-9a-z]+))?([-+=])(...",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0009",
            "maxOrMinCount": true,
          },
          "posLine1": "...+)*)(?:\\\\|([0-9a-z]+))?([-+=])...",
          "posLine2": "             ^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0010",
      "lastAtomReturns": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            124,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            124,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 24,
            "idx": 1,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9...",
          "posLine2": "^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0007",
            "maxOrMinCount": true,
          },
          "posLine1": "...-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0011",
      "lastAtomReturns": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
          Object {
            "astStart": 24,
            "idx": 1,
          },
          Object {
            "astStart": 37,
            "idx": 2,
          },
          Object {
            "astStart": 44,
            "idx": 3,
          },
        ],
      },
    },
    Object {
      "atoms": Array [],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 1,
                  "idx": 0,
                },
              },
              "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9...",
              "posLine2": "^^^^^^^^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
            Object {
              "data": Object {
                "functionName": "greedyQuantifier0007",
                "maxOrMinCount": true,
              },
              "posLine1": "...-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0...",
              "posLine2": "             ^^^^^^^^^^^^^^^^^^",
              "type": "quantifierStarter",
            },
          ],
          "followUp": null,
          "functionName": "fiber0011",
          "lastAtomReturns": true,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 1,
                "idx": 0,
              },
              Object {
                "astStart": 24,
                "idx": 1,
              },
              Object {
                "astStart": 37,
                "idx": 2,
              },
              Object {
                "astStart": 44,
                "idx": 3,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0013",
        "maxOrMinCount": false,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 1,
              "idx": 0,
            },
            Object {
              "astStart": 24,
              "idx": 1,
            },
            Object {
              "astStart": 37,
              "idx": 2,
            },
            Object {
              "astStart": 44,
              "idx": 3,
            },
          ],
        },
        "posLine1": "(?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-...",
        "posLine2": "^^^^^^^^^^^^^^^^",
        "wrappedHandler": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 42,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "\\\\*[0-9a-z]+)...",
              "posLine2": "^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "functionName": "greedyQuantifier0015",
                "maxOrMinCount": true,
              },
              "posLine1": "[0-9a-z]+)*)(?:\\\\|([...",
              "posLine2": "^^^^^^^^^",
              "type": "quantifierStarter",
            },
          ],
          "followUp": null,
          "functionName": "fiber0016",
          "lastAtomReturns": true,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [
                42,
              ],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [
                42,
              ],
              "negate": false,
            },
            "groups": Array [],
          },
        },
      },
      "functionName": "fiber0012",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "[0-9a-z]+)*)(?:\\\\|(...",
          "posLine2": "^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [],
          "followUp": Object {
            "followUp": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 1,
                      "idx": 0,
                    },
                  },
                  "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9...",
                  "posLine2": "^^^^^^^^^^^^^^^^^^",
                  "type": "groupEndMarker",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0007",
                    "maxOrMinCount": true,
                  },
                  "posLine1": "...-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0...",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0011",
              "lastAtomReturns": true,
              "meta": Object {
                "combinedCharRange": Object {
                  "chars": Array [],
                  "negate": false,
                },
                "firstCharRange": Object {
                  "chars": Array [],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 1,
                    "idx": 0,
                  },
                  Object {
                    "astStart": 24,
                    "idx": 1,
                  },
                  Object {
                    "astStart": 37,
                    "idx": 2,
                  },
                  Object {
                    "astStart": 44,
                    "idx": 3,
                  },
                ],
              },
            },
            "functionName": "greedyQuantifier0013",
            "maxOrMinCount": false,
            "meta": Object {
              "combinedCharRange": Object {
                "chars": Array [],
                "negate": false,
              },
              "firstCharRange": Object {
                "chars": Array [],
                "negate": false,
              },
              "groups": Array [
                Object {
                  "astStart": 1,
                  "idx": 0,
                },
                Object {
                  "astStart": 24,
                  "idx": 1,
                },
                Object {
                  "astStart": 37,
                  "idx": 2,
                },
                Object {
                  "astStart": 44,
                  "idx": 3,
                },
              ],
            },
            "posLine1": "(?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-...",
            "posLine2": "^^^^^^^^^^^^^^^^",
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 42,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "\\\\*[0-9a-z]+)...",
                  "posLine2": "^^",
                  "type": "charOrSet",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0015",
                    "maxOrMinCount": true,
                  },
                  "posLine1": "[0-9a-z]+)*)(?:\\\\|([...",
                  "posLine2": "^^^^^^^^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0016",
              "lastAtomReturns": true,
              "meta": Object {
                "combinedCharRange": Object {
                  "chars": Array [
                    42,
                  ],
                  "negate": false,
                },
                "firstCharRange": Object {
                  "chars": Array [
                    42,
                  ],
                  "negate": false,
                },
                "groups": Array [],
              },
            },
          },
          "functionName": "fiber0012",
          "lastAtomReturns": false,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0015",
        "maxOrMinCount": true,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
        },
        "minCount": 1,
        "posLine1": "[0-9a-z]+)*)(?:\\\\|([...",
        "posLine2": "^^^^^^^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0014",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 42,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "\\\\*[0-9a-z]+)...",
          "posLine2": "^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0015",
            "maxOrMinCount": true,
          },
          "posLine1": "[0-9a-z]+)*)(?:\\\\|([...",
          "posLine2": "^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0016",
      "lastAtomReturns": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            42,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            42,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9...",
          "posLine2": "^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0013",
            "maxOrMinCount": false,
          },
          "posLine1": "(?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-...",
          "posLine2": "^^^^^^^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0017",
      "lastAtomReturns": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
          Object {
            "astStart": 24,
            "idx": 1,
          },
          Object {
            "astStart": 37,
            "idx": 2,
          },
          Object {
            "astStart": 44,
            "idx": 3,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 63,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...0-9a-z]+)|\\\\?/",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0018",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            63,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            63,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "alternatives": Array [
              Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 1,
                        "idx": 0,
                      },
                    },
                    "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9...",
                    "posLine2": "^^^^^^^^^^^^^^^^^^",
                    "type": "groupStartMarker",
                  },
                  Object {
                    "data": Object {
                      "functionName": "greedyQuantifier0013",
                      "maxOrMinCount": false,
                    },
                    "posLine1": "(?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-...",
                    "posLine2": "^^^^^^^^^^^^^^^^",
                    "type": "quantifierStarter",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0017",
                "lastAtomReturns": true,
                "meta": Object {
                  "combinedCharRange": Object {
                    "chars": Array [],
                    "negate": false,
                  },
                  "firstCharRange": Object {
                    "chars": Array [],
                    "negate": false,
                  },
                  "groups": Array [
                    Object {
                      "astStart": 1,
                      "idx": 0,
                    },
                    Object {
                      "astStart": 24,
                      "idx": 1,
                    },
                    Object {
                      "astStart": 37,
                      "idx": 2,
                    },
                    Object {
                      "astStart": 44,
                      "idx": 3,
                    },
                  ],
                },
              },
              Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 63,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...0-9a-z]+)|\\\\?/",
                    "posLine2": "             ^^",
                    "type": "charOrSet",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0018",
                "lastAtomReturns": false,
                "meta": Object {
                  "combinedCharRange": Object {
                    "chars": Array [
                      63,
                    ],
                    "negate": false,
                  },
                  "firstCharRange": Object {
                    "chars": Array [
                      63,
                    ],
                    "negate": false,
                  },
                  "groups": Array [],
                },
              },
            ],
            "groupsToRestore": Array [
              Object {
                "astStart": 1,
                "idx": 0,
              },
              Object {
                "astStart": 24,
                "idx": 1,
              },
              Object {
                "astStart": 37,
                "idx": 2,
              },
              Object {
                "astStart": 44,
                "idx": 3,
              },
            ],
          },
          "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0-9a-z]+)|\\\\?/",
          "posLine2": "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "disjunction",
        },
      ],
      "followUp": null,
      "functionName": "fiber0019",
      "lastAtomReturns": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            63,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            63,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
          Object {
            "astStart": 24,
            "idx": 1,
          },
          Object {
            "astStart": 37,
            "idx": 2,
          },
          Object {
            "astStart": 44,
            "idx": 3,
          },
        ],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 44,
                "idx": 3,
              },
            },
            "posLine1": "...))?([-+=])([0-9a-z]+)|\\\\?/",
            "posLine2": "             ^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
        ],
        "followUp": null,
        "functionName": "fiber0002",
        "lastAtomReturns": false,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 44,
              "idx": 3,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0004",
      "maxOrMinCount": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 44,
            "idx": 3,
          },
        ],
      },
      "minCount": 1,
      "posLine1": "...)?([-+=])([0-9a-z]+)|\\\\?/",
      "posLine2": "             ^^^^^^^^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 37,
                "idx": 2,
              },
            },
            "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
            "posLine2": "             ^^^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 45,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 61,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue1": 43,
                    "comparisonValue2": 45,
                    "type": "equalOneOfTwo",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "...9a-z]+))?([-+=])([0-9a-z]...",
            "posLine2": "             ^^^^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 37,
                "idx": 2,
              },
            },
            "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
            "posLine2": "             ^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 44,
                "idx": 3,
              },
            },
            "posLine1": "...))?([-+=])([0-9a-z]+)|\\\\?/",
            "posLine2": "             ^^^^^^^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "functionName": "greedyQuantifier0004",
              "maxOrMinCount": true,
            },
            "posLine1": "...)?([-+=])([0-9a-z]+)|\\\\?/",
            "posLine2": "             ^^^^^^^^^",
            "type": "quantifierStarter",
          },
        ],
        "followUp": null,
        "functionName": "fiber0005",
        "lastAtomReturns": true,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [
              43,
              45,
              61,
            ],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [
              43,
              45,
              61,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 37,
              "idx": 2,
            },
            Object {
              "astStart": 44,
              "idx": 3,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0007",
      "maxCount": 1,
      "maxOrMinCount": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 24,
            "idx": 1,
          },
          Object {
            "astStart": 37,
            "idx": 2,
          },
          Object {
            "astStart": 44,
            "idx": 3,
          },
        ],
      },
      "posLine1": "...-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0...",
      "posLine2": "             ^^^^^^^^^^^^^^^^^^",
      "wrappedHandler": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 124,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "...-z]+)*)(?:\\\\|([0-9a-z]+...",
            "posLine2": "             ^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 24,
                "idx": 1,
              },
            },
            "posLine1": "...]+)*)(?:\\\\|([0-9a-z]+))?([-+=])(...",
            "posLine2": "             ^^^^^^^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "functionName": "greedyQuantifier0009",
              "maxOrMinCount": true,
            },
            "posLine1": "...+)*)(?:\\\\|([0-9a-z]+))?([-+=])...",
            "posLine2": "             ^^^^^^^^^",
            "type": "quantifierStarter",
          },
        ],
        "followUp": null,
        "functionName": "fiber0010",
        "lastAtomReturns": true,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [
              124,
            ],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [
              124,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 24,
              "idx": 1,
            },
          ],
        },
      },
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 24,
                "idx": 1,
              },
            },
            "posLine1": "...]+)*)(?:\\\\|([0-9a-z]+))?([-+=])(...",
            "posLine2": "             ^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
        ],
        "followUp": Object {
          "followUp": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 37,
                    "idx": 2,
                  },
                },
                "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
                "posLine2": "             ^^^^^^^",
                "type": "groupStartMarker",
              },
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 45,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 61,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue1": 43,
                        "comparisonValue2": 45,
                        "type": "equalOneOfTwo",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "unicode": false,
                },
                "posLine1": "...9a-z]+))?([-+=])([0-9a-z]...",
                "posLine2": "             ^^^^^",
                "type": "charOrSet",
              },
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 37,
                    "idx": 2,
                  },
                },
                "posLine1": "...-9a-z]+))?([-+=])([0-9a-z]+...",
                "posLine2": "             ^^^^^^^",
                "type": "groupEndMarker",
              },
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 44,
                    "idx": 3,
                  },
                },
                "posLine1": "...))?([-+=])([0-9a-z]+)|\\\\?/",
                "posLine2": "             ^^^^^^^^^^^",
                "type": "groupStartMarker",
              },
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0004",
                  "maxOrMinCount": true,
                },
                "posLine1": "...)?([-+=])([0-9a-z]+)|\\\\?/",
                "posLine2": "             ^^^^^^^^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0005",
            "lastAtomReturns": true,
            "meta": Object {
              "combinedCharRange": Object {
                "chars": Array [
                  43,
                  45,
                  61,
                ],
                "negate": false,
              },
              "firstCharRange": Object {
                "chars": Array [
                  43,
                  45,
                  61,
                ],
                "negate": false,
              },
              "groups": Array [
                Object {
                  "astStart": 37,
                  "idx": 2,
                },
                Object {
                  "astStart": 44,
                  "idx": 3,
                },
              ],
            },
          },
          "functionName": "greedyQuantifier0007",
          "maxCount": 1,
          "maxOrMinCount": true,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 24,
                "idx": 1,
              },
              Object {
                "astStart": 37,
                "idx": 2,
              },
              Object {
                "astStart": 44,
                "idx": 3,
              },
            ],
          },
          "posLine1": "...-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^",
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 124,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "unicode": false,
                },
                "posLine1": "...-z]+)*)(?:\\\\|([0-9a-z]+...",
                "posLine2": "             ^^",
                "type": "charOrSet",
              },
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 24,
                    "idx": 1,
                  },
                },
                "posLine1": "...]+)*)(?:\\\\|([0-9a-z]+))?([-+=])(...",
                "posLine2": "             ^^^^^^^^^^^",
                "type": "groupStartMarker",
              },
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0009",
                  "maxOrMinCount": true,
                },
                "posLine1": "...+)*)(?:\\\\|([0-9a-z]+))?([-+=])...",
                "posLine2": "             ^^^^^^^^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0010",
            "lastAtomReturns": true,
            "meta": Object {
              "combinedCharRange": Object {
                "chars": Array [
                  124,
                ],
                "negate": false,
              },
              "firstCharRange": Object {
                "chars": Array [
                  124,
                ],
                "negate": false,
              },
              "groups": Array [
                Object {
                  "astStart": 24,
                  "idx": 1,
                },
              ],
            },
          },
        },
        "functionName": "fiber0006",
        "lastAtomReturns": false,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 24,
              "idx": 1,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0009",
      "maxOrMinCount": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 24,
            "idx": 1,
          },
        ],
      },
      "minCount": 1,
      "posLine1": "...+)*)(?:\\\\|([0-9a-z]+))?([-+=])...",
      "posLine2": "             ^^^^^^^^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 1,
                "idx": 0,
              },
            },
            "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9...",
            "posLine2": "^^^^^^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {
              "functionName": "greedyQuantifier0007",
              "maxOrMinCount": true,
            },
            "posLine1": "...-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0...",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^",
            "type": "quantifierStarter",
          },
        ],
        "followUp": null,
        "functionName": "fiber0011",
        "lastAtomReturns": true,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 1,
              "idx": 0,
            },
            Object {
              "astStart": 24,
              "idx": 1,
            },
            Object {
              "astStart": 37,
              "idx": 2,
            },
            Object {
              "astStart": 44,
              "idx": 3,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0013",
      "maxOrMinCount": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
          Object {
            "astStart": 24,
            "idx": 1,
          },
          Object {
            "astStart": 37,
            "idx": 2,
          },
          Object {
            "astStart": 44,
            "idx": 3,
          },
        ],
      },
      "posLine1": "(?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-...",
      "posLine2": "^^^^^^^^^^^^^^^^",
      "wrappedHandler": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 42,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "\\\\*[0-9a-z]+)...",
            "posLine2": "^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "functionName": "greedyQuantifier0015",
              "maxOrMinCount": true,
            },
            "posLine1": "[0-9a-z]+)*)(?:\\\\|([...",
            "posLine2": "^^^^^^^^^",
            "type": "quantifierStarter",
          },
        ],
        "followUp": null,
        "functionName": "fiber0016",
        "lastAtomReturns": true,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [
              42,
            ],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [
              42,
            ],
            "negate": false,
          },
          "groups": Array [],
        },
      },
    },
    Object {
      "followUp": Object {
        "atoms": Array [],
        "followUp": Object {
          "followUp": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 1,
                    "idx": 0,
                  },
                },
                "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9...",
                "posLine2": "^^^^^^^^^^^^^^^^^^",
                "type": "groupEndMarker",
              },
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0007",
                  "maxOrMinCount": true,
                },
                "posLine1": "...-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0...",
                "posLine2": "             ^^^^^^^^^^^^^^^^^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0011",
            "lastAtomReturns": true,
            "meta": Object {
              "combinedCharRange": Object {
                "chars": Array [],
                "negate": false,
              },
              "firstCharRange": Object {
                "chars": Array [],
                "negate": false,
              },
              "groups": Array [
                Object {
                  "astStart": 1,
                  "idx": 0,
                },
                Object {
                  "astStart": 24,
                  "idx": 1,
                },
                Object {
                  "astStart": 37,
                  "idx": 2,
                },
                Object {
                  "astStart": 44,
                  "idx": 3,
                },
              ],
            },
          },
          "functionName": "greedyQuantifier0013",
          "maxOrMinCount": false,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 1,
                "idx": 0,
              },
              Object {
                "astStart": 24,
                "idx": 1,
              },
              Object {
                "astStart": 37,
                "idx": 2,
              },
              Object {
                "astStart": 44,
                "idx": 3,
              },
            ],
          },
          "posLine1": "(?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-...",
          "posLine2": "^^^^^^^^^^^^^^^^",
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 42,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "unicode": false,
                },
                "posLine1": "\\\\*[0-9a-z]+)...",
                "posLine2": "^^",
                "type": "charOrSet",
              },
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0015",
                  "maxOrMinCount": true,
                },
                "posLine1": "[0-9a-z]+)*)(?:\\\\|([...",
                "posLine2": "^^^^^^^^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0016",
            "lastAtomReturns": true,
            "meta": Object {
              "combinedCharRange": Object {
                "chars": Array [
                  42,
                ],
                "negate": false,
              },
              "firstCharRange": Object {
                "chars": Array [
                  42,
                ],
                "negate": false,
              },
              "groups": Array [],
            },
          },
        },
        "functionName": "fiber0012",
        "lastAtomReturns": false,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0015",
      "maxOrMinCount": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
      },
      "minCount": 1,
      "posLine1": "[0-9a-z]+)*)(?:\\\\|([...",
      "posLine2": "^^^^^^^^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "groups": Array [
    Object {
      "astStart": 1,
      "idx": 0,
    },
    Object {
      "astStart": 24,
      "idx": 1,
    },
    Object {
      "astStart": 37,
      "idx": 2,
    },
    Object {
      "astStart": 44,
      "idx": 3,
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "alternatives": Array [
            Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 1,
                      "idx": 0,
                    },
                  },
                  "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9...",
                  "posLine2": "^^^^^^^^^^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0013",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "(?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-...",
                  "posLine2": "^^^^^^^^^^^^^^^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0017",
              "lastAtomReturns": true,
              "meta": Object {
                "combinedCharRange": Object {
                  "chars": Array [],
                  "negate": false,
                },
                "firstCharRange": Object {
                  "chars": Array [],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 1,
                    "idx": 0,
                  },
                  Object {
                    "astStart": 24,
                    "idx": 1,
                  },
                  Object {
                    "astStart": 37,
                    "idx": 2,
                  },
                  Object {
                    "astStart": 44,
                    "idx": 3,
                  },
                ],
              },
            },
            Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 63,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...0-9a-z]+)|\\\\?/",
                  "posLine2": "             ^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0018",
              "lastAtomReturns": false,
              "meta": Object {
                "combinedCharRange": Object {
                  "chars": Array [
                    63,
                  ],
                  "negate": false,
                },
                "firstCharRange": Object {
                  "chars": Array [
                    63,
                  ],
                  "negate": false,
                },
                "groups": Array [],
              },
            },
          ],
          "groupsToRestore": Array [
            Object {
              "astStart": 1,
              "idx": 0,
            },
            Object {
              "astStart": 24,
              "idx": 1,
            },
            Object {
              "astStart": 37,
              "idx": 2,
            },
            Object {
              "astStart": 44,
              "idx": 3,
            },
          ],
        },
        "posLine1": "((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0-9a-z]+)|\\\\?/",
        "posLine2": "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "type": "disjunction",
      },
    ],
    "followUp": null,
    "functionName": "fiber0019",
    "lastAtomReturns": true,
    "meta": Object {
      "combinedCharRange": Object {
        "chars": Array [
          63,
        ],
        "negate": false,
      },
      "firstCharRange": Object {
        "chars": Array [
          63,
        ],
        "negate": false,
      },
      "groups": Array [
        Object {
          "astStart": 1,
          "idx": 0,
        },
        Object {
          "astStart": 24,
          "idx": 1,
        },
        Object {
          "astStart": 37,
          "idx": 2,
        },
        Object {
          "astStart": 44,
          "idx": 3,
        },
      ],
    },
  },
  "regexStr": "/((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0-9a-z]+)|\\\\?/",
}
`;
