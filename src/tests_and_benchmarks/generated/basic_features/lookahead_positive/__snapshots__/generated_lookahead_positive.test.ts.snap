// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic_features/lookahead_positive template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 120,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/x(?=y)/",
          "posLine2": " ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 121,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/x(?=y)/",
                  "posLine2": "     ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0002",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    121,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
            "negate": false,
          },
          "posLine1": "/x(?=y)/",
          "posLine2": "  ^^^^^",
          "type": "lookaround",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            120,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 121,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/x(?=y)/",
          "posLine2": "     ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            121,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
  ],
  "greedyQuantifierHandlers": Array [],
  "groups": Array [],
  "lazyQuantifierHandlers": Array [],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 120,
              "type": "equal",
            },
            "type": "lastComparison",
          },
          "unicode": false,
        },
        "posLine1": "/x(?=y)/",
        "posLine2": " ^",
        "type": "charOrSet",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 121,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "unicode": false,
                },
                "posLine1": "/x(?=y)/",
                "posLine2": "     ^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0002",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  121,
                ],
                "negate": false,
              },
              "groups": Array [],
              "maxCharLength": 1,
              "minCharLength": 1,
            },
          },
          "negate": false,
        },
        "posLine1": "/x(?=y)/",
        "posLine2": "  ^^^^^",
        "type": "lookaround",
      },
    ],
    "followUp": null,
    "functionName": "fiber0001",
    "lastAtomReturns": false,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          120,
        ],
        "negate": false,
      },
      "groups": Array [],
      "maxCharLength": 1,
      "minCharLength": 1,
    },
  },
  "quantifierCountersLength": 0,
  "regexStr": "/x(?=y)/",
}
`;
