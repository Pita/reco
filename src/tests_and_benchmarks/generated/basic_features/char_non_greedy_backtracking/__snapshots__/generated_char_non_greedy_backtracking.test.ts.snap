// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic_features/char_non_greedy_backtracking template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(b.*?)(a)/",
          "posLine2": " ^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 7,
              "idx": 1,
            },
          },
          "posLine1": "/(b.*?)(a)/",
          "posLine2": "       ^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(b.*?)(a)/",
          "posLine2": "        ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 7,
              "idx": 1,
            },
          },
          "posLine1": "/(b.*?)(a)/",
          "posLine2": "       ^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
          Object {
            "astStart": 7,
            "idx": 1,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "/(b.*?)(a)/",
          "posLine2": "   ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 1,
                  "idx": 0,
                },
              },
              "posLine1": "/(b.*?)(a)/",
              "posLine2": " ^^^^^^",
              "type": "groupEndMarker",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 7,
                  "idx": 1,
                },
              },
              "posLine1": "/(b.*?)(a)/",
              "posLine2": "       ^^^",
              "type": "groupStartMarker",
            },
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "/(b.*?)(a)/",
              "posLine2": "        ^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 7,
                  "idx": 1,
                },
              },
              "posLine1": "/(b.*?)(a)/",
              "posLine2": "       ^^^",
              "type": "groupEndMarker",
            },
          ],
          "followUp": null,
          "functionName": "fiber0001",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                97,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 1,
                "idx": 0,
              },
              Object {
                "astStart": 7,
                "idx": 1,
              },
            ],
          },
        },
        "functionName": "lazyQuantifier0003",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 1,
              "idx": 0,
            },
            Object {
              "astStart": 7,
              "idx": 1,
            },
          ],
        },
        "posLine1": "/(b.*?)(a)/",
        "posLine2": "   ^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(b.*?)(a)/",
          "posLine2": " ^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 98,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(b.*?)(a)/",
          "posLine2": "  ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "functionName": "lazyQuantifier0003",
            "maxOrMinCount": false,
          },
          "posLine1": "/(b.*?)(a)/",
          "posLine2": "   ^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            98,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
          Object {
            "astStart": 7,
            "idx": 1,
          },
        ],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [],
  "groups": Array [
    Object {
      "astStart": 1,
      "idx": 0,
    },
    Object {
      "astStart": 7,
      "idx": 1,
    },
  ],
  "lazyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 1,
                "idx": 0,
              },
            },
            "posLine1": "/(b.*?)(a)/",
            "posLine2": " ^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 7,
                "idx": 1,
              },
            },
            "posLine1": "/(b.*?)(a)/",
            "posLine2": "       ^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 97,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "/(b.*?)(a)/",
            "posLine2": "        ^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 7,
                "idx": 1,
              },
            },
            "posLine1": "/(b.*?)(a)/",
            "posLine2": "       ^^^",
            "type": "groupEndMarker",
          },
        ],
        "followUp": null,
        "functionName": "fiber0001",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              97,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 1,
              "idx": 0,
            },
            Object {
              "astStart": 7,
              "idx": 1,
            },
          ],
        },
      },
      "functionName": "lazyQuantifier0003",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
          Object {
            "astStart": 7,
            "idx": 1,
          },
        ],
      },
      "posLine1": "/(b.*?)(a)/",
      "posLine2": "   ^^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 1,
            "idx": 0,
          },
        },
        "posLine1": "/(b.*?)(a)/",
        "posLine2": " ^^^^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 98,
              "type": "equal",
            },
            "type": "lastComparison",
          },
          "unicode": false,
        },
        "posLine1": "/(b.*?)(a)/",
        "posLine2": "  ^",
        "type": "charOrSet",
      },
      Object {
        "data": Object {
          "functionName": "lazyQuantifier0003",
          "maxOrMinCount": false,
        },
        "posLine1": "/(b.*?)(a)/",
        "posLine2": "   ^^^",
        "type": "quantifierStarter",
      },
    ],
    "followUp": null,
    "functionName": "fiber0004",
    "lastAtomReturns": true,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          98,
        ],
        "negate": false,
      },
      "groups": Array [
        Object {
          "astStart": 1,
          "idx": 0,
        },
        Object {
          "astStart": 7,
          "idx": 1,
        },
      ],
    },
  },
  "quantifierCountersLength": 0,
  "regexStr": "/(b.*?)(a)/",
  "version": "0.2.2",
}
`;
