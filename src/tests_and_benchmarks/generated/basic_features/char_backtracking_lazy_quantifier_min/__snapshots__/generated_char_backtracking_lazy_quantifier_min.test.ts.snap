// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic_features/char_backtracking_lazy_quantifier_min template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(aa?){3,}?/",
          "posLine2": " ^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [],
          "followUp": null,
          "functionName": "fiber0001",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "groups": Array [],
            "maxCharLength": 0,
            "minCharLength": 0,
          },
        },
        "functionName": "lazyQuantifier0003",
        "maxOrMinCount": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 1,
              "idx": 0,
            },
          ],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
        "minCount": 3,
        "posLine1": "/(aa?){3,}?/",
        "posLine2": " ^^^^^^^^^^",
        "quantifierCounterIndex": 0,
        "wrappedHandler": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 1,
                  "idx": 0,
                },
              },
              "posLine1": "/(aa?){3,}?/",
              "posLine2": " ^^^^^",
              "type": "groupStartMarker",
            },
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "/(aa?){3,}?/",
              "posLine2": "  ^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "fixedLength": 1,
                "followUp": "[Circular]",
                "maxCount": 1,
                "maxOrMinCount": true,
                "wrappedHandler": Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 97,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "/(aa?){3,}?/",
                      "posLine2": "   ^",
                      "type": "charOrSet",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0004",
                  "lastAtomReturns": false,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        97,
                      ],
                      "negate": false,
                    },
                    "groups": Array [],
                    "maxCharLength": 1,
                    "minCharLength": 1,
                  },
                },
              },
              "posLine1": "/(aa?){3,}?/",
              "posLine2": "   ^^",
              "type": "backtrackingFixedLengthQuantifier",
            },
          ],
          "followUp": null,
          "functionName": "fiber0005",
          "lastAtomReturns": true,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                97,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 1,
                "idx": 0,
              },
            ],
            "maxCharLength": 2,
            "minCharLength": 1,
          },
        },
      },
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
        ],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(aa?){3,}?/",
          "posLine2": "   ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(aa?){3,}?/",
          "posLine2": " ^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(aa?){3,}?/",
          "posLine2": "  ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "fixedLength": 1,
            "followUp": "[Circular]",
            "maxCount": 1,
            "maxOrMinCount": true,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 97,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/(aa?){3,}?/",
                  "posLine2": "   ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0004",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    97,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "/(aa?){3,}?/",
          "posLine2": "   ^^",
          "type": "backtrackingFixedLengthQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
        ],
        "maxCharLength": 2,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "lazyQuantifier0003",
            "maxOrMinCount": true,
            "quantifierCounterIndex": 0,
          },
          "posLine1": "/(aa?){3,}?/",
          "posLine2": " ^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0006",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 3,
      },
    },
  ],
  "greedyQuantifierHandlers": Array [],
  "groups": Array [
    Object {
      "astStart": 1,
      "idx": 0,
    },
  ],
  "lazyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [],
        "followUp": null,
        "functionName": "fiber0001",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
      },
      "functionName": "lazyQuantifier0003",
      "maxOrMinCount": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
        ],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
      "minCount": 3,
      "posLine1": "/(aa?){3,}?/",
      "posLine2": " ^^^^^^^^^^",
      "quantifierCounterIndex": 0,
      "wrappedHandler": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 1,
                "idx": 0,
              },
            },
            "posLine1": "/(aa?){3,}?/",
            "posLine2": " ^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 97,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "/(aa?){3,}?/",
            "posLine2": "  ^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "fixedLength": 1,
              "followUp": "[Circular]",
              "maxCount": 1,
              "maxOrMinCount": true,
              "wrappedHandler": Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 97,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "/(aa?){3,}?/",
                    "posLine2": "   ^",
                    "type": "charOrSet",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0004",
                "lastAtomReturns": false,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      97,
                    ],
                    "negate": false,
                  },
                  "groups": Array [],
                  "maxCharLength": 1,
                  "minCharLength": 1,
                },
              },
            },
            "posLine1": "/(aa?){3,}?/",
            "posLine2": "   ^^",
            "type": "backtrackingFixedLengthQuantifier",
          },
        ],
        "followUp": null,
        "functionName": "fiber0005",
        "lastAtomReturns": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              97,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 1,
              "idx": 0,
            },
          ],
          "maxCharLength": 2,
          "minCharLength": 1,
        },
      },
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "functionName": "lazyQuantifier0003",
          "maxOrMinCount": true,
          "quantifierCounterIndex": 0,
        },
        "posLine1": "/(aa?){3,}?/",
        "posLine2": " ^^^^^^^^^^",
        "type": "quantifierStarter",
      },
    ],
    "followUp": null,
    "functionName": "fiber0006",
    "lastAtomReturns": true,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          97,
        ],
        "negate": false,
      },
      "groups": Array [
        Object {
          "astStart": 1,
          "idx": 0,
        },
      ],
      "maxCharLength": "Infinity",
      "minCharLength": 3,
    },
  },
  "quantifierCountersLength": 1,
  "regexStr": "/(aa?){3,}?/",
}
`;
