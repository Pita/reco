// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic_features/char_backtracking_lazy_quantifier_min_and_max template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": " ^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": " ^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": "  ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "maxCount": 1,
            "maxOrMinCount": true,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 97,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": "   ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0002",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    97,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": "   ^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": " ^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
        ],
        "maxCharLength": 2,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": "   ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": "   ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0003",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": " ^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": " ^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": "  ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "fixedLength": 1,
            "followUp": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 1,
                      "idx": 0,
                    },
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": " ^^^^^",
                  "type": "groupEndMarker",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 1,
                      "idx": 0,
                    },
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": " ^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 97,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": "  ^",
                  "type": "charOrSet",
                },
                Object {
                  "data": Object {
                    "maxCount": 1,
                    "maxOrMinCount": true,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": false,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 97,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "/(aa?){3}?/",
                          "posLine2": "   ^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0002",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            97,
                          ],
                          "negate": false,
                        },
                        "groups": Array [],
                        "maxCharLength": 1,
                        "minCharLength": 1,
                      },
                    },
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": "   ^^",
                  "type": "nonBacktrackingQuantifier",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 1,
                      "idx": 0,
                    },
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": " ^^^^^",
                  "type": "groupEndMarker",
                },
              ],
              "followUp": null,
              "functionName": "fiber0001",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    97,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 1,
                    "idx": 0,
                  },
                ],
                "maxCharLength": 2,
                "minCharLength": 1,
              },
            },
            "maxCount": 1,
            "maxOrMinCount": true,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 97,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": "   ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0003",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    97,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": "   ^^",
          "type": "backtrackingFixedLengthQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
        ],
        "maxCharLength": 2,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": "   ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": " ^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": "  ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "fixedLength": 1,
            "followUp": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 1,
                      "idx": 0,
                    },
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": " ^^^^^",
                  "type": "groupEndMarker",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 1,
                      "idx": 0,
                    },
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": " ^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 97,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": "  ^",
                  "type": "charOrSet",
                },
                Object {
                  "data": Object {
                    "fixedLength": 1,
                    "followUp": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "groupReference": Object {
                              "astStart": 1,
                              "idx": 0,
                            },
                          },
                          "posLine1": "/(aa?){3}?/",
                          "posLine2": " ^^^^^",
                          "type": "groupEndMarker",
                        },
                        Object {
                          "data": Object {
                            "groupReference": Object {
                              "astStart": 1,
                              "idx": 0,
                            },
                          },
                          "posLine1": "/(aa?){3}?/",
                          "posLine2": " ^^^^^",
                          "type": "groupStartMarker",
                        },
                        Object {
                          "data": Object {
                            "negate": false,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 97,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "/(aa?){3}?/",
                          "posLine2": "  ^",
                          "type": "charOrSet",
                        },
                        Object {
                          "data": Object {
                            "maxCount": 1,
                            "maxOrMinCount": true,
                            "wrappedHandler": Object {
                              "atoms": Array [
                                Object {
                                  "data": Object {
                                    "negate": false,
                                    "tree": Object {
                                      "comparison": Object {
                                        "comparisonValue": 97,
                                        "type": "equal",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "unicode": false,
                                  },
                                  "posLine1": "/(aa?){3}?/",
                                  "posLine2": "   ^",
                                  "type": "charOrSet",
                                },
                              ],
                              "followUp": null,
                              "functionName": "fiber0002",
                              "lastAtomReturns": false,
                              "meta": Object {
                                "firstCharRange": Object {
                                  "chars": Array [
                                    97,
                                  ],
                                  "negate": false,
                                },
                                "groups": Array [],
                                "maxCharLength": 1,
                                "minCharLength": 1,
                              },
                            },
                          },
                          "posLine1": "/(aa?){3}?/",
                          "posLine2": "   ^^",
                          "type": "nonBacktrackingQuantifier",
                        },
                        Object {
                          "data": Object {
                            "groupReference": Object {
                              "astStart": 1,
                              "idx": 0,
                            },
                          },
                          "posLine1": "/(aa?){3}?/",
                          "posLine2": " ^^^^^",
                          "type": "groupEndMarker",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0001",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            97,
                          ],
                          "negate": false,
                        },
                        "groups": Array [
                          Object {
                            "astStart": 1,
                            "idx": 0,
                          },
                        ],
                        "maxCharLength": 2,
                        "minCharLength": 1,
                      },
                    },
                    "maxCount": 1,
                    "maxOrMinCount": true,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": false,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 97,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "/(aa?){3}?/",
                          "posLine2": "   ^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0003",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            97,
                          ],
                          "negate": false,
                        },
                        "groups": Array [],
                        "maxCharLength": 1,
                        "minCharLength": 1,
                      },
                    },
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": "   ^^",
                  "type": "backtrackingFixedLengthQuantifier",
                },
              ],
              "followUp": null,
              "functionName": "fiber0004",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    97,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 1,
                    "idx": 0,
                  },
                ],
                "maxCharLength": 2,
                "minCharLength": 1,
              },
            },
            "maxCount": 1,
            "maxOrMinCount": true,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 97,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/(aa?){3}?/",
                  "posLine2": "   ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0005",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    97,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "/(aa?){3}?/",
          "posLine2": "   ^^",
          "type": "backtrackingFixedLengthQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0006",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
        ],
        "maxCharLength": 2,
        "minCharLength": 1,
      },
    },
  ],
  "greedyQuantifierHandlers": Array [],
  "groups": Array [
    Object {
      "astStart": 1,
      "idx": 0,
    },
  ],
  "lazyQuantifierHandlers": Array [],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 1,
            "idx": 0,
          },
        },
        "posLine1": "/(aa?){3}?/",
        "posLine2": " ^^^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 97,
              "type": "equal",
            },
            "type": "lastComparison",
          },
          "unicode": false,
        },
        "posLine1": "/(aa?){3}?/",
        "posLine2": "  ^",
        "type": "charOrSet",
      },
      Object {
        "data": Object {
          "fixedLength": 1,
          "followUp": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 1,
                    "idx": 0,
                  },
                },
                "posLine1": "/(aa?){3}?/",
                "posLine2": " ^^^^^",
                "type": "groupEndMarker",
              },
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 1,
                    "idx": 0,
                  },
                },
                "posLine1": "/(aa?){3}?/",
                "posLine2": " ^^^^^",
                "type": "groupStartMarker",
              },
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "unicode": false,
                },
                "posLine1": "/(aa?){3}?/",
                "posLine2": "  ^",
                "type": "charOrSet",
              },
              Object {
                "data": Object {
                  "fixedLength": 1,
                  "followUp": Object {
                    "atoms": Array [
                      Object {
                        "data": Object {
                          "groupReference": Object {
                            "astStart": 1,
                            "idx": 0,
                          },
                        },
                        "posLine1": "/(aa?){3}?/",
                        "posLine2": " ^^^^^",
                        "type": "groupEndMarker",
                      },
                      Object {
                        "data": Object {
                          "groupReference": Object {
                            "astStart": 1,
                            "idx": 0,
                          },
                        },
                        "posLine1": "/(aa?){3}?/",
                        "posLine2": " ^^^^^",
                        "type": "groupStartMarker",
                      },
                      Object {
                        "data": Object {
                          "negate": false,
                          "tree": Object {
                            "comparison": Object {
                              "comparisonValue": 97,
                              "type": "equal",
                            },
                            "type": "lastComparison",
                          },
                          "unicode": false,
                        },
                        "posLine1": "/(aa?){3}?/",
                        "posLine2": "  ^",
                        "type": "charOrSet",
                      },
                      Object {
                        "data": Object {
                          "maxCount": 1,
                          "maxOrMinCount": true,
                          "wrappedHandler": Object {
                            "atoms": Array [
                              Object {
                                "data": Object {
                                  "negate": false,
                                  "tree": Object {
                                    "comparison": Object {
                                      "comparisonValue": 97,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "unicode": false,
                                },
                                "posLine1": "/(aa?){3}?/",
                                "posLine2": "   ^",
                                "type": "charOrSet",
                              },
                            ],
                            "followUp": null,
                            "functionName": "fiber0002",
                            "lastAtomReturns": false,
                            "meta": Object {
                              "firstCharRange": Object {
                                "chars": Array [
                                  97,
                                ],
                                "negate": false,
                              },
                              "groups": Array [],
                              "maxCharLength": 1,
                              "minCharLength": 1,
                            },
                          },
                        },
                        "posLine1": "/(aa?){3}?/",
                        "posLine2": "   ^^",
                        "type": "nonBacktrackingQuantifier",
                      },
                      Object {
                        "data": Object {
                          "groupReference": Object {
                            "astStart": 1,
                            "idx": 0,
                          },
                        },
                        "posLine1": "/(aa?){3}?/",
                        "posLine2": " ^^^^^",
                        "type": "groupEndMarker",
                      },
                    ],
                    "followUp": null,
                    "functionName": "fiber0001",
                    "lastAtomReturns": false,
                    "meta": Object {
                      "firstCharRange": Object {
                        "chars": Array [
                          97,
                        ],
                        "negate": false,
                      },
                      "groups": Array [
                        Object {
                          "astStart": 1,
                          "idx": 0,
                        },
                      ],
                      "maxCharLength": 2,
                      "minCharLength": 1,
                    },
                  },
                  "maxCount": 1,
                  "maxOrMinCount": true,
                  "wrappedHandler": Object {
                    "atoms": Array [
                      Object {
                        "data": Object {
                          "negate": false,
                          "tree": Object {
                            "comparison": Object {
                              "comparisonValue": 97,
                              "type": "equal",
                            },
                            "type": "lastComparison",
                          },
                          "unicode": false,
                        },
                        "posLine1": "/(aa?){3}?/",
                        "posLine2": "   ^",
                        "type": "charOrSet",
                      },
                    ],
                    "followUp": null,
                    "functionName": "fiber0003",
                    "lastAtomReturns": false,
                    "meta": Object {
                      "firstCharRange": Object {
                        "chars": Array [
                          97,
                        ],
                        "negate": false,
                      },
                      "groups": Array [],
                      "maxCharLength": 1,
                      "minCharLength": 1,
                    },
                  },
                },
                "posLine1": "/(aa?){3}?/",
                "posLine2": "   ^^",
                "type": "backtrackingFixedLengthQuantifier",
              },
            ],
            "followUp": null,
            "functionName": "fiber0004",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  97,
                ],
                "negate": false,
              },
              "groups": Array [
                Object {
                  "astStart": 1,
                  "idx": 0,
                },
              ],
              "maxCharLength": 2,
              "minCharLength": 1,
            },
          },
          "maxCount": 1,
          "maxOrMinCount": true,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "unicode": false,
                },
                "posLine1": "/(aa?){3}?/",
                "posLine2": "   ^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0005",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  97,
                ],
                "negate": false,
              },
              "groups": Array [],
              "maxCharLength": 1,
              "minCharLength": 1,
            },
          },
        },
        "posLine1": "/(aa?){3}?/",
        "posLine2": "   ^^",
        "type": "backtrackingFixedLengthQuantifier",
      },
    ],
    "followUp": null,
    "functionName": "fiber0006",
    "lastAtomReturns": true,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          97,
        ],
        "negate": false,
      },
      "groups": Array [
        Object {
          "astStart": 1,
          "idx": 0,
        },
      ],
      "maxCharLength": 2,
      "minCharLength": 1,
    },
  },
  "quantifierCountersLength": 0,
  "regexStr": "/(aa?){3}?/",
}
`;
