// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic_features/lookbehind_negative template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 121,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "y)x/",
                  "posLine2": "^",
                  "type": "charOrSetBackward",
                },
              ],
              "followUp": null,
              "functionName": "fiber0002",
              "hasCallback": false,
              "lastAtomReturns": false,
              "meta": Object {
                "groups": Array [],
              },
            },
            "negate": true,
          },
          "posLine1": "(?<!y)x/",
          "posLine2": "^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 120,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "x/",
          "posLine2": "^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 121,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "y)x/",
          "posLine2": "^",
          "type": "charOrSetBackward",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 121,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "unicode": false,
                },
                "posLine1": "y)x/",
                "posLine2": "^",
                "type": "charOrSetBackward",
              },
            ],
            "followUp": null,
            "functionName": "fiber0002",
            "hasCallback": false,
            "lastAtomReturns": false,
            "meta": Object {
              "groups": Array [],
            },
          },
          "negate": true,
        },
        "posLine1": "(?<!y)x/",
        "posLine2": "^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 120,
              "type": "equal",
            },
            "type": "lastComparison",
          },
          "unicode": false,
        },
        "posLine1": "x/",
        "posLine2": "^",
        "type": "charOrSet",
      },
    ],
    "followUp": null,
    "functionName": "fiber0001",
    "hasCallback": false,
    "lastAtomReturns": false,
    "meta": Object {
      "groups": Array [],
    },
  },
  "regexStr": "/(?<!y)x/",
}
`;
