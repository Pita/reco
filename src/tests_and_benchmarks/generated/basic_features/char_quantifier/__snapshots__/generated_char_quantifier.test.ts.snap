// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic_features/char_quantifier template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 99,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "c?/",
          "posLine2": "^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [],
          "followUp": null,
          "functionName": "fiber0001",
          "lastAtomReturns": false,
          "meta": Object {
            "combinedCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "firstCharRange": Object {
              "chars": Array [],
              "negate": true,
            },
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0003",
        "maxCount": 1,
        "maxOrMinCount": true,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
        },
        "posLine1": "c?/",
        "posLine2": "^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            99,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            99,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "maxOrMinCount": false,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 97,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "a*B+c?/",
                  "posLine2": "^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0006",
              "lastAtomReturns": false,
              "meta": Object {
                "combinedCharRange": Object {
                  "chars": Array [
                    97,
                  ],
                  "negate": false,
                },
                "firstCharRange": Object {
                  "chars": Array [
                    97,
                  ],
                  "negate": false,
                },
                "groups": Array [],
              },
            },
          },
          "posLine1": "a*B+c?/",
          "posLine2": "^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 66,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "B+c?/",
                  "posLine2": "^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0005",
              "lastAtomReturns": false,
              "meta": Object {
                "combinedCharRange": Object {
                  "chars": Array [
                    66,
                  ],
                  "negate": false,
                },
                "firstCharRange": Object {
                  "chars": Array [
                    66,
                  ],
                  "negate": false,
                },
                "groups": Array [],
              },
            },
          },
          "posLine1": "B+c?/",
          "posLine2": "^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0003",
            "maxOrMinCount": true,
          },
          "posLine1": "c?/",
          "posLine2": "^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "lastAtomReturns": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            66,
            97,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 66,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "B+c?/",
          "posLine2": "^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            66,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            66,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 97,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "a*B+c?/",
          "posLine2": "^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0006",
      "lastAtomReturns": false,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [
            97,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [],
        "followUp": null,
        "functionName": "fiber0001",
        "lastAtomReturns": false,
        "meta": Object {
          "combinedCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "firstCharRange": Object {
            "chars": Array [],
            "negate": true,
          },
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0003",
      "maxCount": 1,
      "maxOrMinCount": true,
      "meta": Object {
        "combinedCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
      },
      "posLine1": "c?/",
      "posLine2": "^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "maxOrMinCount": false,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "unicode": false,
                },
                "posLine1": "a*B+c?/",
                "posLine2": "^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0006",
            "lastAtomReturns": false,
            "meta": Object {
              "combinedCharRange": Object {
                "chars": Array [
                  97,
                ],
                "negate": false,
              },
              "firstCharRange": Object {
                "chars": Array [
                  97,
                ],
                "negate": false,
              },
              "groups": Array [],
            },
          },
        },
        "posLine1": "a*B+c?/",
        "posLine2": "^^",
        "type": "nonBacktrackingQuantifier",
      },
      Object {
        "data": Object {
          "maxOrMinCount": true,
          "minCount": 1,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 66,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "unicode": false,
                },
                "posLine1": "B+c?/",
                "posLine2": "^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0005",
            "lastAtomReturns": false,
            "meta": Object {
              "combinedCharRange": Object {
                "chars": Array [
                  66,
                ],
                "negate": false,
              },
              "firstCharRange": Object {
                "chars": Array [
                  66,
                ],
                "negate": false,
              },
              "groups": Array [],
            },
          },
        },
        "posLine1": "B+c?/",
        "posLine2": "^^",
        "type": "nonBacktrackingQuantifier",
      },
      Object {
        "data": Object {
          "functionName": "greedyQuantifier0003",
          "maxOrMinCount": true,
        },
        "posLine1": "c?/",
        "posLine2": "^^",
        "type": "quantifierStarter",
      },
    ],
    "followUp": null,
    "functionName": "fiber0004",
    "lastAtomReturns": true,
    "meta": Object {
      "combinedCharRange": Object {
        "chars": Array [
          66,
          97,
        ],
        "negate": false,
      },
      "firstCharRange": Object {
        "chars": Array [
          97,
        ],
        "negate": false,
      },
      "groups": Array [],
    },
  },
  "regexStr": "/a*B+c?/",
}
`;
