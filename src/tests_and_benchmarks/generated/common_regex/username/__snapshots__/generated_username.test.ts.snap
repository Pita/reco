// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/username template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {},
          "posLine1": "...-]{3,16}$/",
          "posLine2": "           ^",
          "type": "endAnchor",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 95,
                  "type": "equal",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "type": "true",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 45,
                  "type": "equal",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "type": "true",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "[a-z0-9_-]{3,16}$/",
          "posLine2": "^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {},
              "posLine1": "...-]{3,16}$/",
              "posLine2": "           ^",
              "type": "endAnchor",
            },
          ],
          "followUp": null,
          "functionName": "fiber0001",
          "hasCallback": false,
          "lastAtomReturns": false,
          "meta": Object {
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0003",
        "hasCallback": false,
        "maxCount": 16,
        "maxOrMinCount": true,
        "meta": Object {
          "groups": Array [],
        },
        "minCount": 3,
        "posLine1": "[a-z0-9_-]{3,16}$/",
        "posLine2": "^^^^^^^^^^^^^^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0002",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {},
          "posLine1": "^[a-z0-9_-]...",
          "posLine2": "^",
          "type": "startAnchor",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0003",
            "maxOrMinCount": true,
          },
          "posLine1": "[a-z0-9_-]{3,16}$/",
          "posLine2": "^^^^^^^^^^^^^^^^",
          "type": "greedyQuantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "hasCallback": false,
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {},
            "posLine1": "...-]{3,16}$/",
            "posLine2": "           ^",
            "type": "endAnchor",
          },
        ],
        "followUp": null,
        "functionName": "fiber0001",
        "hasCallback": false,
        "lastAtomReturns": false,
        "meta": Object {
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0003",
      "hasCallback": false,
      "maxCount": 16,
      "maxOrMinCount": true,
      "meta": Object {
        "groups": Array [],
      },
      "minCount": 3,
      "posLine1": "[a-z0-9_-]{3,16}$/",
      "posLine2": "^^^^^^^^^^^^^^^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {},
        "posLine1": "^[a-z0-9_-]...",
        "posLine2": "^",
        "type": "startAnchor",
      },
      Object {
        "data": Object {
          "functionName": "greedyQuantifier0003",
          "maxOrMinCount": true,
        },
        "posLine1": "[a-z0-9_-]{3,16}$/",
        "posLine2": "^^^^^^^^^^^^^^^^",
        "type": "greedyQuantifierStarter",
      },
    ],
    "followUp": null,
    "functionName": "fiber0004",
    "hasCallback": false,
    "lastAtomReturns": true,
    "meta": Object {
      "groups": Array [],
    },
  },
  "regexStr": "/^[a-z0-9_-]{3,16}$/",
}
`;
