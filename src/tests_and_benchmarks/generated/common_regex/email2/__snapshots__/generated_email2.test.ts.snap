// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/email2 template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 20,
              "idx": 1,
            },
          },
          "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
          "posLine2": "             ^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...da-z\\\\.-]+)\\\\.([a-z\\\\.]{2...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 35,
              "idx": 2,
            },
          },
          "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
          "posLine2": "             ^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "maxCount": 6,
            "maxOrMinCount": true,
            "minCount": 2,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 46,
                        "type": "equal",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 122,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 97,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "type": "true",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
                  "posLine2": "             ^^^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0002",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    46,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                  ],
                  "negate": false,
                },
                "groups": Array [],
              },
            },
          },
          "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
          "posLine2": "             ^^^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 35,
              "idx": 2,
            },
          },
          "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
          "posLine2": "             ^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {},
          "posLine1": "...z\\\\.]{2,6})$/",
          "posLine2": "             ^",
          "type": "endAnchor",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            46,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 20,
            "idx": 1,
          },
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "type": "true",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
          "posLine2": "             ^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            46,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 46,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 45,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\...",
          "posLine2": "             ^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 20,
                  "idx": 1,
                },
              },
              "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
              "posLine2": "             ^^^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 46,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "...da-z\\\\.-]+)\\\\.([a-z\\\\.]{2...",
              "posLine2": "             ^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 35,
                  "idx": 2,
                },
              },
              "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
              "posLine2": "             ^^^^^^^^^^^^^^",
              "type": "groupStartMarker",
            },
            Object {
              "data": Object {
                "maxCount": 6,
                "maxOrMinCount": true,
                "minCount": 2,
                "wrappedHandler": Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 46,
                            "type": "equal",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 122,
                              "type": "lessOrEqual",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 97,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "type": "true",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
                      "posLine2": "             ^^^^^^^",
                      "type": "charOrSet",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0002",
                  "lastAtomReturns": false,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        46,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                      ],
                      "negate": false,
                    },
                    "groups": Array [],
                  },
                },
              },
              "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
              "posLine2": "             ^^^^^^^^^^^^",
              "type": "nonBacktrackingQuantifier",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 35,
                  "idx": 2,
                },
              },
              "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
              "posLine2": "             ^^^^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
            Object {
              "data": Object {},
              "posLine1": "...z\\\\.]{2,6})$/",
              "posLine2": "             ^",
              "type": "endAnchor",
            },
          ],
          "followUp": null,
          "functionName": "fiber0001",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                46,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 20,
                "idx": 1,
              },
              Object {
                "astStart": 35,
                "idx": 2,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0004",
        "maxOrMinCount": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 20,
              "idx": 1,
            },
            Object {
              "astStart": 35,
              "idx": 2,
            },
          ],
        },
        "minCount": 1,
        "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\....",
        "posLine2": "             ^^^^^^^^^^^",
        "quantifierCounterIndex": 0,
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0003",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {},
          "posLine1": "/^([a-z0-9_\\\\...",
          "posLine2": " ^",
          "type": "startAnchor",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 2,
              "idx": 0,
            },
          },
          "posLine1": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\....",
          "posLine2": "  ^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 95,
                          "type": "equal",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 122,
                            "type": "lessOrEqual",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 97,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "type": "true",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 46,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 48,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 43,
                            "type": "equal",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 45,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "type": "true",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z...",
                  "posLine2": "   ^^^^^^^^^^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0006",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    43,
                    45,
                    46,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    95,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                  ],
                  "negate": false,
                },
                "groups": Array [],
              },
            },
          },
          "posLine1": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\...",
          "posLine2": "   ^^^^^^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 2,
              "idx": 0,
            },
          },
          "posLine1": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\....",
          "posLine2": "  ^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 64,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...9_\\\\.\\\\+-]+)@([\\\\da-z\\\\.-...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 20,
              "idx": 1,
            },
          },
          "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
          "posLine2": "             ^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0004",
            "maxOrMinCount": true,
            "quantifierCounterIndex": 0,
          },
          "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\....",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            43,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 2,
            "idx": 0,
          },
          Object {
            "astStart": 20,
            "idx": 1,
          },
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 95,
                  "type": "equal",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "type": "true",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 46,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 43,
                    "type": "equal",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 45,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "type": "true",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z...",
          "posLine2": "   ^^^^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0006",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            43,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 20,
                "idx": 1,
              },
            },
            "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
            "posLine2": "             ^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 46,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "...da-z\\\\.-]+)\\\\.([a-z\\\\.]{2...",
            "posLine2": "             ^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 35,
                "idx": 2,
              },
            },
            "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
            "posLine2": "             ^^^^^^^^^^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "maxCount": 6,
              "maxOrMinCount": true,
              "minCount": 2,
              "wrappedHandler": Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 46,
                          "type": "equal",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 122,
                            "type": "lessOrEqual",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 97,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "type": "true",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
                    "posLine2": "             ^^^^^^^",
                    "type": "charOrSet",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0002",
                "lastAtomReturns": false,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      46,
                      97,
                      98,
                      99,
                      100,
                      101,
                      102,
                      103,
                      104,
                      105,
                      106,
                      107,
                      108,
                      109,
                      110,
                      111,
                      112,
                      113,
                      114,
                      115,
                      116,
                      117,
                      118,
                      119,
                      120,
                      121,
                      122,
                    ],
                    "negate": false,
                  },
                  "groups": Array [],
                },
              },
            },
            "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
            "posLine2": "             ^^^^^^^^^^^^",
            "type": "nonBacktrackingQuantifier",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 35,
                "idx": 2,
              },
            },
            "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
            "posLine2": "             ^^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {},
            "posLine1": "...z\\\\.]{2,6})$/",
            "posLine2": "             ^",
            "type": "endAnchor",
          },
        ],
        "followUp": null,
        "functionName": "fiber0001",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              46,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 20,
              "idx": 1,
            },
            Object {
              "astStart": 35,
              "idx": 2,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0004",
      "maxOrMinCount": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 20,
            "idx": 1,
          },
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
      "minCount": 1,
      "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\....",
      "posLine2": "             ^^^^^^^^^^^",
      "quantifierCounterIndex": 0,
      "wrappedHandler": "[Circular]",
    },
  ],
  "groups": Array [
    Object {
      "astStart": 2,
      "idx": 0,
    },
    Object {
      "astStart": 20,
      "idx": 1,
    },
    Object {
      "astStart": 35,
      "idx": 2,
    },
  ],
  "lazyQuantifierHandlers": Array [],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {},
        "posLine1": "/^([a-z0-9_\\\\...",
        "posLine2": " ^",
        "type": "startAnchor",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 2,
            "idx": 0,
          },
        },
        "posLine1": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\....",
        "posLine2": "  ^^^^^^^^^^^^^^^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "maxOrMinCount": true,
          "minCount": 1,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 57,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 95,
                        "type": "equal",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 122,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 97,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "type": "true",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 46,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 43,
                          "type": "equal",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 45,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "type": "true",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "type": "comparison",
                    },
                    "type": "comparison",
                  },
                  "unicode": false,
                },
                "posLine1": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z...",
                "posLine2": "   ^^^^^^^^^^^^^^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0006",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  43,
                  45,
                  46,
                  48,
                  49,
                  50,
                  51,
                  52,
                  53,
                  54,
                  55,
                  56,
                  57,
                  95,
                  97,
                  98,
                  99,
                  100,
                  101,
                  102,
                  103,
                  104,
                  105,
                  106,
                  107,
                  108,
                  109,
                  110,
                  111,
                  112,
                  113,
                  114,
                  115,
                  116,
                  117,
                  118,
                  119,
                  120,
                  121,
                  122,
                ],
                "negate": false,
              },
              "groups": Array [],
            },
          },
        },
        "posLine1": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\...",
        "posLine2": "   ^^^^^^^^^^^^^^^",
        "type": "nonBacktrackingQuantifier",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 2,
            "idx": 0,
          },
        },
        "posLine1": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\....",
        "posLine2": "  ^^^^^^^^^^^^^^^^^",
        "type": "groupEndMarker",
      },
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 64,
              "type": "equal",
            },
            "type": "lastComparison",
          },
          "unicode": false,
        },
        "posLine1": "...9_\\\\.\\\\+-]+)@([\\\\da-z\\\\.-...",
        "posLine2": "             ^",
        "type": "charOrSet",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 20,
            "idx": 1,
          },
        },
        "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
        "posLine2": "             ^^^^^^^^^^^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "functionName": "greedyQuantifier0004",
          "maxOrMinCount": true,
          "quantifierCounterIndex": 0,
        },
        "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\....",
        "posLine2": "             ^^^^^^^^^^^",
        "type": "quantifierStarter",
      },
    ],
    "followUp": null,
    "functionName": "fiber0005",
    "lastAtomReturns": true,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          43,
          45,
          46,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          95,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
        ],
        "negate": false,
      },
      "groups": Array [
        Object {
          "astStart": 2,
          "idx": 0,
        },
        Object {
          "astStart": 20,
          "idx": 1,
        },
        Object {
          "astStart": 35,
          "idx": 2,
        },
      ],
    },
  },
  "quantifierCountersLength": 1,
  "regexStr": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
  "version": "0.2.2",
}
`;
