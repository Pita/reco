// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/email2 template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 35,
              "idx": 2,
            },
          },
          "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
          "posLine2": "             ^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {},
          "posLine1": "...z\\\\.]{2,6})$/",
          "posLine2": "             ^",
          "type": "endAnchor",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "type": "true",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
          "posLine2": "             ^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 35,
                  "idx": 2,
                },
              },
              "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
              "posLine2": "             ^^^^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
            Object {
              "data": Object {},
              "posLine1": "...z\\\\.]{2,6})$/",
              "posLine2": "             ^",
              "type": "endAnchor",
            },
          ],
          "followUp": null,
          "functionName": "fiber0001",
          "lastAtomReturns": false,
          "meta": Object {
            "groups": Array [
              Object {
                "astStart": 35,
                "idx": 2,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0003",
        "maxCount": 6,
        "maxOrMinCount": true,
        "meta": Object {
          "groups": Array [
            Object {
              "astStart": 35,
              "idx": 2,
            },
          ],
        },
        "minCount": 2,
        "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
        "posLine2": "             ^^^^^^^^^^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 20,
              "idx": 1,
            },
          },
          "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
          "posLine2": "             ^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...da-z\\\\.-]+)\\\\.([a-z\\\\.]{2...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 35,
              "idx": 2,
            },
          },
          "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
          "posLine2": "             ^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0003",
            "maxOrMinCount": true,
          },
          "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
          "posLine2": "             ^^^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 20,
            "idx": 1,
          },
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 46,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 45,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\...",
          "posLine2": "             ^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 20,
                  "idx": 1,
                },
              },
              "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
              "posLine2": "             ^^^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 46,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "...da-z\\\\.-]+)\\\\.([a-z\\\\.]{2...",
              "posLine2": "             ^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 35,
                  "idx": 2,
                },
              },
              "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
              "posLine2": "             ^^^^^^^^^^^^^^",
              "type": "groupStartMarker",
            },
            Object {
              "data": Object {
                "functionName": "greedyQuantifier0003",
                "maxOrMinCount": true,
              },
              "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
              "posLine2": "             ^^^^^^^^^^^^",
              "type": "quantifierStarter",
            },
          ],
          "followUp": null,
          "functionName": "fiber0004",
          "lastAtomReturns": true,
          "meta": Object {
            "groups": Array [
              Object {
                "astStart": 20,
                "idx": 1,
              },
              Object {
                "astStart": 35,
                "idx": 2,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0006",
        "maxOrMinCount": true,
        "meta": Object {
          "groups": Array [
            Object {
              "astStart": 20,
              "idx": 1,
            },
            Object {
              "astStart": 35,
              "idx": 2,
            },
          ],
        },
        "minCount": 1,
        "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\....",
        "posLine2": "             ^^^^^^^^^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0005",
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 2,
              "idx": 0,
            },
          },
          "posLine1": "([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\....",
          "posLine2": "^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 64,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...9_\\\\.\\\\+-]+)@([\\\\da-z\\\\.-...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 20,
              "idx": 1,
            },
          },
          "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
          "posLine2": "             ^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0006",
            "maxOrMinCount": true,
          },
          "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\....",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0007",
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 2,
            "idx": 0,
          },
          Object {
            "astStart": 20,
            "idx": 1,
          },
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 95,
                  "type": "equal",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "type": "true",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 46,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 43,
                    "type": "equal",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 45,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "type": "true",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "[a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z...",
          "posLine2": "^^^^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 2,
                  "idx": 0,
                },
              },
              "posLine1": "([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\....",
              "posLine2": "^^^^^^^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 64,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "...9_\\\\.\\\\+-]+)@([\\\\da-z\\\\.-...",
              "posLine2": "             ^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 20,
                  "idx": 1,
                },
              },
              "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
              "posLine2": "             ^^^^^^^^^^^^^",
              "type": "groupStartMarker",
            },
            Object {
              "data": Object {
                "functionName": "greedyQuantifier0006",
                "maxOrMinCount": true,
              },
              "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\....",
              "posLine2": "             ^^^^^^^^^^^",
              "type": "quantifierStarter",
            },
          ],
          "followUp": null,
          "functionName": "fiber0007",
          "lastAtomReturns": true,
          "meta": Object {
            "groups": Array [
              Object {
                "astStart": 2,
                "idx": 0,
              },
              Object {
                "astStart": 20,
                "idx": 1,
              },
              Object {
                "astStart": 35,
                "idx": 2,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0009",
        "maxOrMinCount": true,
        "meta": Object {
          "groups": Array [
            Object {
              "astStart": 2,
              "idx": 0,
            },
            Object {
              "astStart": 20,
              "idx": 1,
            },
            Object {
              "astStart": 35,
              "idx": 2,
            },
          ],
        },
        "minCount": 1,
        "posLine1": "[a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\...",
        "posLine2": "^^^^^^^^^^^^^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0008",
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {},
          "posLine1": "^([a-z0-9_\\\\...",
          "posLine2": "^",
          "type": "startAnchor",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 2,
              "idx": 0,
            },
          },
          "posLine1": "([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\....",
          "posLine2": "^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0009",
            "maxOrMinCount": true,
          },
          "posLine1": "[a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\...",
          "posLine2": "^^^^^^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0010",
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 2,
            "idx": 0,
          },
          Object {
            "astStart": 20,
            "idx": 1,
          },
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 35,
                "idx": 2,
              },
            },
            "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
            "posLine2": "             ^^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {},
            "posLine1": "...z\\\\.]{2,6})$/",
            "posLine2": "             ^",
            "type": "endAnchor",
          },
        ],
        "followUp": null,
        "functionName": "fiber0001",
        "lastAtomReturns": false,
        "meta": Object {
          "groups": Array [
            Object {
              "astStart": 35,
              "idx": 2,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0003",
      "maxCount": 6,
      "maxOrMinCount": true,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
      "minCount": 2,
      "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
      "posLine2": "             ^^^^^^^^^^^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 20,
                "idx": 1,
              },
            },
            "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
            "posLine2": "             ^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 46,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "...da-z\\\\.-]+)\\\\.([a-z\\\\.]{2...",
            "posLine2": "             ^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 35,
                "idx": 2,
              },
            },
            "posLine1": "...-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
            "posLine2": "             ^^^^^^^^^^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "functionName": "greedyQuantifier0003",
              "maxOrMinCount": true,
            },
            "posLine1": "...z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
            "posLine2": "             ^^^^^^^^^^^^",
            "type": "quantifierStarter",
          },
        ],
        "followUp": null,
        "functionName": "fiber0004",
        "lastAtomReturns": true,
        "meta": Object {
          "groups": Array [
            Object {
              "astStart": 20,
              "idx": 1,
            },
            Object {
              "astStart": 35,
              "idx": 2,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0006",
      "maxOrMinCount": true,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 20,
            "idx": 1,
          },
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
      "minCount": 1,
      "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\....",
      "posLine2": "             ^^^^^^^^^^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 2,
                "idx": 0,
              },
            },
            "posLine1": "([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\....",
            "posLine2": "^^^^^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 64,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "...9_\\\\.\\\\+-]+)@([\\\\da-z\\\\.-...",
            "posLine2": "             ^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 20,
                "idx": 1,
              },
            },
            "posLine1": "..._\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]...",
            "posLine2": "             ^^^^^^^^^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "functionName": "greedyQuantifier0006",
              "maxOrMinCount": true,
            },
            "posLine1": "...\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\....",
            "posLine2": "             ^^^^^^^^^^^",
            "type": "quantifierStarter",
          },
        ],
        "followUp": null,
        "functionName": "fiber0007",
        "lastAtomReturns": true,
        "meta": Object {
          "groups": Array [
            Object {
              "astStart": 2,
              "idx": 0,
            },
            Object {
              "astStart": 20,
              "idx": 1,
            },
            Object {
              "astStart": 35,
              "idx": 2,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0009",
      "maxOrMinCount": true,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 2,
            "idx": 0,
          },
          Object {
            "astStart": 20,
            "idx": 1,
          },
          Object {
            "astStart": 35,
            "idx": 2,
          },
        ],
      },
      "minCount": 1,
      "posLine1": "[a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\...",
      "posLine2": "^^^^^^^^^^^^^^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "groups": Array [
    Object {
      "astStart": 2,
      "idx": 0,
    },
    Object {
      "astStart": 20,
      "idx": 1,
    },
    Object {
      "astStart": 35,
      "idx": 2,
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {},
        "posLine1": "^([a-z0-9_\\\\...",
        "posLine2": "^",
        "type": "startAnchor",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 2,
            "idx": 0,
          },
        },
        "posLine1": "([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\....",
        "posLine2": "^^^^^^^^^^^^^^^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "functionName": "greedyQuantifier0009",
          "maxOrMinCount": true,
        },
        "posLine1": "[a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\...",
        "posLine2": "^^^^^^^^^^^^^^^",
        "type": "quantifierStarter",
      },
    ],
    "followUp": null,
    "functionName": "fiber0010",
    "lastAtomReturns": true,
    "meta": Object {
      "groups": Array [
        Object {
          "astStart": 2,
          "idx": 0,
        },
        Object {
          "astStart": 20,
          "idx": 1,
        },
        Object {
          "astStart": 35,
          "idx": 2,
        },
      ],
    },
  },
  "regexStr": "/^([a-z0-9_\\\\.\\\\+-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$/",
}
`;
