// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/password_complex template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 4,
                      "idx": 0,
                    },
                  },
                  "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!@...",
                  "posLine2": "    ^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0019",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "/(?=(.*[0-9]))(?=...",
                  "posLine2": "     ^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0020",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [
                  Object {
                    "astStart": 4,
                    "idx": 0,
                  },
                ],
              },
            },
            "negate": false,
          },
          "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!@#...",
          "posLine2": " ^^^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0015",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...[0-9]))(?=.*[\\\\!@#$%^&*...",
                  "posLine2": "             ^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0016",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [],
              },
            },
            "negate": false,
          },
          "posLine1": "...(.*[0-9]))(?=.*[\\\\!@#$%^&*()\\\\[\\\\]{}\\\\-_+=~\`|:;\\"'<>,./?])(?=.*[a-z]...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0011",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...>,./?])(?=.*[a-z])(?=(...",
                  "posLine2": "             ^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0012",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [],
              },
            },
            "negate": false,
          },
          "posLine1": "...\\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z...",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 71,
                      "idx": 1,
                    },
                  },
                  "posLine1": "...*[a-z])(?=(.*[A-Z]))(?=(.*))....",
                  "posLine2": "             ^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0007",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...[a-z])(?=(.*[A-Z]))(?=...",
                  "posLine2": "             ^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0008",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [
                  Object {
                    "astStart": 71,
                    "idx": 1,
                  },
                ],
              },
            },
            "negate": false,
          },
          "posLine1": "...?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{...",
          "posLine2": "             ^^^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 84,
                      "idx": 2,
                    },
                  },
                  "posLine1": "...[A-Z]))(?=(.*)).{8,}/",
                  "posLine2": "             ^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "maxOrMinCount": false,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": true,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 13,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 8233,
                                  "type": "lessOrEqual",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 8232,
                                    "type": "moreOrEqual",
                                  },
                                  "type": "lastComparison",
                                },
                                "type": "comparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue1": 10,
                                  "comparisonValue2": 13,
                                  "type": "equalOneOfTwo",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "...A-Z]))(?=(.*)).{8,}/",
                          "posLine2": "             ^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0004",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            10,
                            13,
                            8232,
                            8233,
                          ],
                          "negate": true,
                        },
                        "groups": Array [],
                      },
                    },
                  },
                  "posLine1": "...A-Z]))(?=(.*)).{8,}/",
                  "posLine2": "             ^^",
                  "type": "nonBacktrackingQuantifier",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 84,
                      "idx": 2,
                    },
                  },
                  "posLine1": "...[A-Z]))(?=(.*)).{8,}/",
                  "posLine2": "             ^^^^",
                  "type": "groupEndMarker",
                },
              ],
              "followUp": null,
              "functionName": "fiber0003",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [
                  Object {
                    "astStart": 84,
                    "idx": 2,
                  },
                ],
              },
            },
            "negate": false,
          },
          "posLine1": "...(.*[A-Z]))(?=(.*)).{8,}/",
          "posLine2": "             ^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "maxOrMinCount": true,
            "minCount": 8,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": true,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 13,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 8233,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 8232,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue1": 10,
                          "comparisonValue2": 13,
                          "type": "equalOneOfTwo",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...))(?=(.*)).{8,}/",
                  "posLine2": "             ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0002",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [],
              },
            },
          },
          "posLine1": "...))(?=(.*)).{8,}/",
          "posLine2": "             ^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...))(?=(.*)).{8,}/",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 84,
              "idx": 2,
            },
          },
          "posLine1": "...[A-Z]))(?=(.*)).{8,}/",
          "posLine2": "             ^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "maxOrMinCount": false,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": true,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 13,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 8233,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 8232,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue1": 10,
                          "comparisonValue2": 13,
                          "type": "equalOneOfTwo",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...A-Z]))(?=(.*)).{8,}/",
                  "posLine2": "             ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0004",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [],
              },
            },
          },
          "posLine1": "...A-Z]))(?=(.*)).{8,}/",
          "posLine2": "             ^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 84,
              "idx": 2,
            },
          },
          "posLine1": "...[A-Z]))(?=(.*)).{8,}/",
          "posLine2": "             ^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0003",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [
          Object {
            "astStart": 84,
            "idx": 2,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...A-Z]))(?=(.*)).{8,}/",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 90,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 65,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...-z])(?=(.*[A-Z]))(?=(.*))...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 71,
              "idx": 1,
            },
          },
          "posLine1": "...*[a-z])(?=(.*[A-Z]))(?=(.*))....",
          "posLine2": "             ^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 71,
            "idx": 1,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...[a-z])(?=(.*[A-Z]))(?...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 90,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 65,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "...-z])(?=(.*[A-Z]))(?=(.*))...",
              "posLine2": "             ^^^^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 71,
                  "idx": 1,
                },
              },
              "posLine1": "...*[a-z])(?=(.*[A-Z]))(?=(.*))....",
              "posLine2": "             ^^^^^^^^^",
              "type": "groupEndMarker",
            },
          ],
          "followUp": null,
          "functionName": "fiber0005",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 71,
                "idx": 1,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0007",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 71,
              "idx": 1,
            },
          ],
        },
        "posLine1": "...[a-z])(?=(.*[A-Z]))(?=...",
        "posLine2": "             ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0006",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 71,
              "idx": 1,
            },
          },
          "posLine1": "...*[a-z])(?=(.*[A-Z]))(?=(.*))....",
          "posLine2": "             ^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0007",
            "maxOrMinCount": false,
          },
          "posLine1": "...[a-z])(?=(.*[A-Z]))(?=...",
          "posLine2": "             ^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0008",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [
          Object {
            "astStart": 71,
            "idx": 1,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 122,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 97,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "..../?])(?=.*[a-z])(?=(.*[A-...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0009",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...>,./?])(?=.*[a-z])(?=...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "..../?])(?=.*[a-z])(?=(.*[A-...",
              "posLine2": "             ^^^^^",
              "type": "charOrSet",
            },
          ],
          "followUp": null,
          "functionName": "fiber0009",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
              ],
              "negate": false,
            },
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0011",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
        },
        "posLine1": "...>,./?])(?=.*[a-z])(?=(...",
        "posLine2": "             ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0010",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0011",
            "maxOrMinCount": false,
          },
          "posLine1": "...>,./?])(?=.*[a-z])(?=(...",
          "posLine2": "             ^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0012",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 91,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 96,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 126,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 123,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 93,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 64,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 91,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 47,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 58,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 33,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...-9]))(?=.*[\\\\!@#$%^&*()\\\\[\\\\]{}\\\\-_+=~\`|:;\\"'<>,./?])(?=.*[a-z...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0013",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            91,
            93,
            94,
            95,
            96,
            123,
            124,
            125,
            126,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...[0-9]))(?=.*[\\\\!@#$%^&...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 91,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 96,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 126,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 123,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 93,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 64,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 91,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 47,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 58,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 33,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "...-9]))(?=.*[\\\\!@#$%^&*()\\\\[\\\\]{}\\\\-_+=~\`|:;\\"'<>,./?])(?=.*[a-z...",
              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
              "type": "charOrSet",
            },
          ],
          "followUp": null,
          "functionName": "fiber0013",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                91,
                93,
                94,
                95,
                96,
                123,
                124,
                125,
                126,
              ],
              "negate": false,
            },
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0015",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
        },
        "posLine1": "...[0-9]))(?=.*[\\\\!@#$%^&*...",
        "posLine2": "             ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0014",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0015",
            "maxOrMinCount": false,
          },
          "posLine1": "...[0-9]))(?=.*[\\\\!@#$%^&*...",
          "posLine2": "             ^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0016",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!...",
          "posLine2": "       ^^^^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 4,
              "idx": 0,
            },
          },
          "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!@...",
          "posLine2": "    ^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0017",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 4,
            "idx": 0,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "/(?=(.*[0-9]))(?...",
          "posLine2": "     ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 57,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 48,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!...",
              "posLine2": "       ^^^^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 4,
                  "idx": 0,
                },
              },
              "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!@...",
              "posLine2": "    ^^^^^^^^^",
              "type": "groupEndMarker",
            },
          ],
          "followUp": null,
          "functionName": "fiber0017",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 4,
                "idx": 0,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0019",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 4,
              "idx": 0,
            },
          ],
        },
        "posLine1": "/(?=(.*[0-9]))(?=...",
        "posLine2": "     ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0018",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 4,
              "idx": 0,
            },
          },
          "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!@...",
          "posLine2": "    ^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0019",
            "maxOrMinCount": false,
          },
          "posLine1": "/(?=(.*[0-9]))(?=...",
          "posLine2": "     ^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0020",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [
          Object {
            "astStart": 4,
            "idx": 0,
          },
        ],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 90,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 65,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "...-z])(?=(.*[A-Z]))(?=(.*))...",
            "posLine2": "             ^^^^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 71,
                "idx": 1,
              },
            },
            "posLine1": "...*[a-z])(?=(.*[A-Z]))(?=(.*))....",
            "posLine2": "             ^^^^^^^^^",
            "type": "groupEndMarker",
          },
        ],
        "followUp": null,
        "functionName": "fiber0005",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 71,
              "idx": 1,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0007",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 71,
            "idx": 1,
          },
        ],
      },
      "posLine1": "...[a-z])(?=(.*[A-Z]))(?=...",
      "posLine2": "             ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "..../?])(?=.*[a-z])(?=(.*[A-...",
            "posLine2": "             ^^^^^",
            "type": "charOrSet",
          },
        ],
        "followUp": null,
        "functionName": "fiber0009",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
            ],
            "negate": false,
          },
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0011",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
      },
      "posLine1": "...>,./?])(?=.*[a-z])(?=(...",
      "posLine2": "             ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 91,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 96,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 126,
                      "type": "lessOrEqual",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 123,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 93,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 64,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 91,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 47,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 58,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 33,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "...-9]))(?=.*[\\\\!@#$%^&*()\\\\[\\\\]{}\\\\-_+=~\`|:;\\"'<>,./?])(?=.*[a-z...",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "charOrSet",
          },
        ],
        "followUp": null,
        "functionName": "fiber0013",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              91,
              93,
              94,
              95,
              96,
              123,
              124,
              125,
              126,
            ],
            "negate": false,
          },
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0015",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
      },
      "posLine1": "...[0-9]))(?=.*[\\\\!@#$%^&*...",
      "posLine2": "             ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 57,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!...",
            "posLine2": "       ^^^^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 4,
                "idx": 0,
              },
            },
            "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!@...",
            "posLine2": "    ^^^^^^^^^",
            "type": "groupEndMarker",
          },
        ],
        "followUp": null,
        "functionName": "fiber0017",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 4,
              "idx": 0,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0019",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 4,
            "idx": 0,
          },
        ],
      },
      "posLine1": "/(?=(.*[0-9]))(?=...",
      "posLine2": "     ^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "groups": Array [
    Object {
      "astStart": 4,
      "idx": 0,
    },
    Object {
      "astStart": 71,
      "idx": 1,
    },
    Object {
      "astStart": 84,
      "idx": 2,
    },
  ],
  "lazyQuantifierHandlers": Array [],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 4,
                    "idx": 0,
                  },
                },
                "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!@...",
                "posLine2": "    ^^^^^^^^^",
                "type": "groupStartMarker",
              },
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0019",
                  "maxOrMinCount": false,
                },
                "posLine1": "/(?=(.*[0-9]))(?=...",
                "posLine2": "     ^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0020",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [
                Object {
                  "astStart": 4,
                  "idx": 0,
                },
              ],
            },
          },
          "negate": false,
        },
        "posLine1": "/(?=(.*[0-9]))(?=.*[\\\\!@#...",
        "posLine2": " ^^^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0015",
                  "maxOrMinCount": false,
                },
                "posLine1": "...[0-9]))(?=.*[\\\\!@#$%^&*...",
                "posLine2": "             ^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0016",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [],
            },
          },
          "negate": false,
        },
        "posLine1": "...(.*[0-9]))(?=.*[\\\\!@#$%^&*()\\\\[\\\\]{}\\\\-_+=~\`|:;\\"'<>,./?])(?=.*[a-z]...",
        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0011",
                  "maxOrMinCount": false,
                },
                "posLine1": "...>,./?])(?=.*[a-z])(?=(...",
                "posLine2": "             ^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0012",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [],
            },
          },
          "negate": false,
        },
        "posLine1": "...\\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z...",
        "posLine2": "             ^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 71,
                    "idx": 1,
                  },
                },
                "posLine1": "...*[a-z])(?=(.*[A-Z]))(?=(.*))....",
                "posLine2": "             ^^^^^^^^^",
                "type": "groupStartMarker",
              },
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0007",
                  "maxOrMinCount": false,
                },
                "posLine1": "...[a-z])(?=(.*[A-Z]))(?=...",
                "posLine2": "             ^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0008",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [
                Object {
                  "astStart": 71,
                  "idx": 1,
                },
              ],
            },
          },
          "negate": false,
        },
        "posLine1": "...?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{...",
        "posLine2": "             ^^^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 84,
                    "idx": 2,
                  },
                },
                "posLine1": "...[A-Z]))(?=(.*)).{8,}/",
                "posLine2": "             ^^^^",
                "type": "groupStartMarker",
              },
              Object {
                "data": Object {
                  "maxOrMinCount": false,
                  "wrappedHandler": Object {
                    "atoms": Array [
                      Object {
                        "data": Object {
                          "negate": true,
                          "tree": Object {
                            "comparison": Object {
                              "comparisonValue": 13,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 8233,
                                "type": "lessOrEqual",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 8232,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue1": 10,
                                "comparisonValue2": 13,
                                "type": "equalOneOfTwo",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "unicode": false,
                        },
                        "posLine1": "...A-Z]))(?=(.*)).{8,}/",
                        "posLine2": "             ^",
                        "type": "charOrSet",
                      },
                    ],
                    "followUp": null,
                    "functionName": "fiber0004",
                    "lastAtomReturns": false,
                    "meta": Object {
                      "firstCharRange": Object {
                        "chars": Array [
                          10,
                          13,
                          8232,
                          8233,
                        ],
                        "negate": true,
                      },
                      "groups": Array [],
                    },
                  },
                },
                "posLine1": "...A-Z]))(?=(.*)).{8,}/",
                "posLine2": "             ^^",
                "type": "nonBacktrackingQuantifier",
              },
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 84,
                    "idx": 2,
                  },
                },
                "posLine1": "...[A-Z]))(?=(.*)).{8,}/",
                "posLine2": "             ^^^^",
                "type": "groupEndMarker",
              },
            ],
            "followUp": null,
            "functionName": "fiber0003",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [
                Object {
                  "astStart": 84,
                  "idx": 2,
                },
              ],
            },
          },
          "negate": false,
        },
        "posLine1": "...(.*[A-Z]))(?=(.*)).{8,}/",
        "posLine2": "             ^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "maxOrMinCount": true,
          "minCount": 8,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": true,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 13,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 8233,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 8232,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue1": 10,
                        "comparisonValue2": 13,
                        "type": "equalOneOfTwo",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "unicode": false,
                },
                "posLine1": "...))(?=(.*)).{8,}/",
                "posLine2": "             ^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0002",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [],
            },
          },
        },
        "posLine1": "...))(?=(.*)).{8,}/",
        "posLine2": "             ^^^^^",
        "type": "nonBacktrackingQuantifier",
      },
    ],
    "followUp": null,
    "functionName": "fiber0001",
    "lastAtomReturns": false,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          10,
          13,
          8232,
          8233,
        ],
        "negate": true,
      },
      "groups": Array [],
    },
  },
  "quantifierCountersLength": 0,
  "regexStr": "/(?=(.*[0-9]))(?=.*[\\\\!@#$%^&*()\\\\[\\\\]{}\\\\-_+=~\`|:;\\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/",
}
`;
