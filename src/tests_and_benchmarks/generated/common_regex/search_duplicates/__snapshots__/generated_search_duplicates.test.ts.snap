// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/search_duplicates template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "(\\\\b\\\\w+\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
          "posLine2": "^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
          },
          "posLine1": "\\\\b\\\\w+\\\\b)(?=....",
          "posLine2": "^^",
          "type": "wordBoundary",
        },
        Object {
          "data": Object {
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 90,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 95,
                          "type": "equal",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 122,
                            "type": "lessOrEqual",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 97,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "type": "true",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 57,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 65,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 48,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "\\\\w+\\\\b)(?=.*\\\\...",
                  "posLine2": "^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0006",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    95,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                  ],
                  "negate": false,
                },
                "groups": Array [],
              },
            },
          },
          "posLine1": "\\\\w+\\\\b)(?=.*\\\\b...",
          "posLine2": "^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "negate": false,
          },
          "posLine1": "\\\\b)(?=.*\\\\b\\\\1...",
          "posLine2": "^^",
          "type": "wordBoundary",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "(\\\\b\\\\w+\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
          "posLine2": "^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0004",
                    "maxOrMinCount": false,
                  },
                  "posLine1": ".*\\\\b\\\\1\\\\b)/",
                  "posLine2": "^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0005",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [],
                  "negate": true,
                },
                "groups": Array [],
              },
            },
            "negate": false,
          },
          "posLine1": "(?=.*\\\\b\\\\1\\\\b)/",
          "posLine2": "^^^^^^^^^^^^",
          "type": "lookaround",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
          },
          "posLine1": "...w+\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
          "posLine2": "             ^^",
          "type": "wordBoundary",
        },
        Object {
          "data": Object {
            "endGroupMarkerIndex": 1,
            "startGroupMarkerIndex": 0,
          },
          "posLine1": "...\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
          "posLine2": "             ^^",
          "type": "groupBackReference",
        },
        Object {
          "data": Object {
            "negate": false,
          },
          "posLine1": "...)(?=.*\\\\b\\\\1\\\\b)/",
          "posLine2": "             ^^",
          "type": "wordBoundary",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": ".*\\\\b\\\\1\\\\b)/",
          "posLine2": "^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
              },
              "posLine1": "...w+\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
              "posLine2": "             ^^",
              "type": "wordBoundary",
            },
            Object {
              "data": Object {
                "endGroupMarkerIndex": 1,
                "startGroupMarkerIndex": 0,
              },
              "posLine1": "...\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
              "posLine2": "             ^^",
              "type": "groupBackReference",
            },
            Object {
              "data": Object {
                "negate": false,
              },
              "posLine1": "...)(?=.*\\\\b\\\\1\\\\b)/",
              "posLine2": "             ^^",
              "type": "wordBoundary",
            },
          ],
          "followUp": null,
          "functionName": "fiber0002",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [],
              "negate": true,
            },
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0004",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
        },
        "posLine1": ".*\\\\b\\\\1\\\\b)/",
        "posLine2": "^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0003",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0004",
            "maxOrMinCount": false,
          },
          "posLine1": ".*\\\\b\\\\1\\\\b)/",
          "posLine2": "^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": true,
        },
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 90,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 95,
                  "type": "equal",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "type": "true",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 57,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 65,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "\\\\w+\\\\b)(?=.*\\\\...",
          "posLine2": "^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0006",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
            },
            "posLine1": "...w+\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
            "posLine2": "             ^^",
            "type": "wordBoundary",
          },
          Object {
            "data": Object {
              "endGroupMarkerIndex": 1,
              "startGroupMarkerIndex": 0,
            },
            "posLine1": "...\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
            "posLine2": "             ^^",
            "type": "groupBackReference",
          },
          Object {
            "data": Object {
              "negate": false,
            },
            "posLine1": "...)(?=.*\\\\b\\\\1\\\\b)/",
            "posLine2": "             ^^",
            "type": "wordBoundary",
          },
        ],
        "followUp": null,
        "functionName": "fiber0002",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": true,
          },
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0004",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
      },
      "posLine1": ".*\\\\b\\\\1\\\\b)/",
      "posLine2": "^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "groups": Array [
    Object {
      "astStart": 1,
      "idx": 0,
    },
  ],
  "lazyQuantifierHandlers": Array [],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 1,
            "idx": 0,
          },
        },
        "posLine1": "(\\\\b\\\\w+\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
        "posLine2": "^^^^^^^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "negate": false,
        },
        "posLine1": "\\\\b\\\\w+\\\\b)(?=....",
        "posLine2": "^^",
        "type": "wordBoundary",
      },
      Object {
        "data": Object {
          "maxOrMinCount": true,
          "minCount": 1,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 90,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 95,
                        "type": "equal",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 122,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 97,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "type": "true",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 65,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "type": "comparison",
                  },
                  "unicode": false,
                },
                "posLine1": "\\\\w+\\\\b)(?=.*\\\\...",
                "posLine2": "^^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0006",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  48,
                  49,
                  50,
                  51,
                  52,
                  53,
                  54,
                  55,
                  56,
                  57,
                  65,
                  66,
                  67,
                  68,
                  69,
                  70,
                  71,
                  72,
                  73,
                  74,
                  75,
                  76,
                  77,
                  78,
                  79,
                  80,
                  81,
                  82,
                  83,
                  84,
                  85,
                  86,
                  87,
                  88,
                  89,
                  90,
                  95,
                  97,
                  98,
                  99,
                  100,
                  101,
                  102,
                  103,
                  104,
                  105,
                  106,
                  107,
                  108,
                  109,
                  110,
                  111,
                  112,
                  113,
                  114,
                  115,
                  116,
                  117,
                  118,
                  119,
                  120,
                  121,
                  122,
                ],
                "negate": false,
              },
              "groups": Array [],
            },
          },
        },
        "posLine1": "\\\\w+\\\\b)(?=.*\\\\b...",
        "posLine2": "^^^",
        "type": "nonBacktrackingQuantifier",
      },
      Object {
        "data": Object {
          "negate": false,
        },
        "posLine1": "\\\\b)(?=.*\\\\b\\\\1...",
        "posLine2": "^^",
        "type": "wordBoundary",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 1,
            "idx": 0,
          },
        },
        "posLine1": "(\\\\b\\\\w+\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
        "posLine2": "^^^^^^^^^",
        "type": "groupEndMarker",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0004",
                  "maxOrMinCount": false,
                },
                "posLine1": ".*\\\\b\\\\1\\\\b)/",
                "posLine2": "^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0005",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [],
                "negate": true,
              },
              "groups": Array [],
            },
          },
          "negate": false,
        },
        "posLine1": "(?=.*\\\\b\\\\1\\\\b)/",
        "posLine2": "^^^^^^^^^^^^",
        "type": "lookaround",
      },
    ],
    "followUp": null,
    "functionName": "fiber0001",
    "lastAtomReturns": false,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          95,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
        ],
        "negate": false,
      },
      "groups": Array [
        Object {
          "astStart": 1,
          "idx": 0,
        },
      ],
    },
  },
  "quantifierCountersLength": 0,
  "regexStr": "/(\\\\b\\\\w+\\\\b)(?=.*\\\\b\\\\1\\\\b)/",
}
`;
