// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/password_moderate template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {},
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "                                                      ^",
          "type": "endAnchor",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "                                                 ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {},
              "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
              "posLine2": "                                                      ^",
              "type": "endAnchor",
            },
          ],
          "followUp": null,
          "functionName": "fiber0001",
          "hasCallback": false,
          "lastAtomReturns": false,
          "meta": Object {
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0003",
        "hasCallback": false,
        "maxOrMinCount": true,
        "meta": Object {
          "groups": Array [],
        },
        "minCount": 8,
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
        "posLine2": "                                                 ^^^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0002",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 4,
                      "idx": 0,
                    },
                  },
                  "posLine1": "(.*[0-9]))((?=.*[A-...",
                  "posLine2": "^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0019",
                    "maxOrMinCount": false,
                  },
                  "posLine1": ".*[0-9]))((?...",
                  "posLine2": "^^",
                  "type": "greedyQuantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0020",
              "hasCallback": false,
              "lastAtomReturns": true,
              "meta": Object {
                "groups": Array [],
              },
            },
            "negate": false,
          },
          "posLine1": "(?=(.*[0-9]))((?=.*[A-Z...",
          "posLine2": "^^^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 14,
              "idx": 1,
            },
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0015",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...9]))((?=.*[A-Za-z0-9...",
                  "posLine2": "           ^^",
                  "type": "greedyQuantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0016",
              "hasCallback": false,
              "lastAtomReturns": true,
              "meta": Object {
                "groups": Array [],
              },
            },
            "negate": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z]...",
          "posLine2": "        ^^^^^^^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0011",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=....",
                  "posLine2": "                            ^^",
                  "type": "greedyQuantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0012",
              "hasCallback": false,
              "lastAtomReturns": true,
              "meta": Object {
                "groups": Array [],
              },
            },
            "negate": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]...",
          "posLine2": "                         ^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0007",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{...",
                  "posLine2": "                                       ^^",
                  "type": "greedyQuantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0008",
              "hasCallback": false,
              "lastAtomReturns": true,
              "meta": Object {
                "groups": Array [],
              },
            },
            "negate": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "                                    ^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 14,
              "idx": 1,
            },
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {},
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "                                                ^",
          "type": "startAnchor",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0003",
            "maxOrMinCount": true,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "                                                 ^^^^^",
          "type": "greedyQuantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "hasCallback": false,
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 14,
            "idx": 1,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 122,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 97,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "                                         ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^....",
          "posLine2": "                                       ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
              "posLine2": "                                         ^^^^^",
              "type": "charOrSet",
            },
          ],
          "followUp": null,
          "functionName": "fiber0005",
          "hasCallback": false,
          "lastAtomReturns": false,
          "meta": Object {
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0007",
        "hasCallback": false,
        "maxOrMinCount": false,
        "meta": Object {
          "groups": Array [],
        },
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{...",
        "posLine2": "                                       ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0006",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0007",
            "maxOrMinCount": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{...",
          "posLine2": "                                       ^^",
          "type": "greedyQuantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0008",
      "hasCallback": false,
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 90,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 65,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z...",
          "posLine2": "                              ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0009",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=...",
          "posLine2": "                            ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 90,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 65,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z...",
              "posLine2": "                              ^^^^^",
              "type": "charOrSet",
            },
          ],
          "followUp": null,
          "functionName": "fiber0009",
          "hasCallback": false,
          "lastAtomReturns": false,
          "meta": Object {
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0011",
        "hasCallback": false,
        "maxOrMinCount": false,
        "meta": Object {
          "groups": Array [],
        },
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=....",
        "posLine2": "                            ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0010",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0011",
            "maxOrMinCount": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=....",
          "posLine2": "                            ^^",
          "type": "greedyQuantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0012",
      "hasCallback": false,
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 90,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 57,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 65,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z...",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0013",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-...",
          "posLine2": "           ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 90,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 122,
                      "type": "lessOrEqual",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 97,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 57,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 65,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 48,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z...",
              "posLine2": "             ^^^^^^^^^^^",
              "type": "charOrSet",
            },
          ],
          "followUp": null,
          "functionName": "fiber0013",
          "hasCallback": false,
          "lastAtomReturns": false,
          "meta": Object {
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0015",
        "hasCallback": false,
        "maxOrMinCount": false,
        "meta": Object {
          "groups": Array [],
        },
        "posLine1": "...9]))((?=.*[A-Za-z0-9...",
        "posLine2": "           ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0014",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0015",
            "maxOrMinCount": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9...",
          "posLine2": "           ^^",
          "type": "greedyQuantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0016",
      "hasCallback": false,
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "[0-9]))((?=.*[A...",
          "posLine2": "^^^^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 4,
              "idx": 0,
            },
          },
          "posLine1": "(.*[0-9]))((?=.*[A-...",
          "posLine2": "^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0017",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [
          Object {
            "astStart": 4,
            "idx": 0,
          },
        ],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": ".*[0-9]))((...",
          "posLine2": "^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 57,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 48,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "[0-9]))((?=.*[A...",
              "posLine2": "^^^^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 4,
                  "idx": 0,
                },
              },
              "posLine1": "(.*[0-9]))((?=.*[A-...",
              "posLine2": "^^^^^^^^^",
              "type": "groupEndMarker",
            },
          ],
          "followUp": null,
          "functionName": "fiber0017",
          "hasCallback": false,
          "lastAtomReturns": false,
          "meta": Object {
            "groups": Array [
              Object {
                "astStart": 4,
                "idx": 0,
              },
            ],
          },
        },
        "functionName": "greedyQuantifier0019",
        "hasCallback": false,
        "maxOrMinCount": false,
        "meta": Object {
          "groups": Array [],
        },
        "posLine1": ".*[0-9]))((?...",
        "posLine2": "^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0018",
      "hasCallback": false,
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 4,
              "idx": 0,
            },
          },
          "posLine1": "(.*[0-9]))((?=.*[A-...",
          "posLine2": "^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0019",
            "maxOrMinCount": false,
          },
          "posLine1": ".*[0-9]))((?...",
          "posLine2": "^^",
          "type": "greedyQuantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0020",
      "hasCallback": false,
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {},
            "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
            "posLine2": "                                                      ^",
            "type": "endAnchor",
          },
        ],
        "followUp": null,
        "functionName": "fiber0001",
        "hasCallback": false,
        "lastAtomReturns": false,
        "meta": Object {
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0003",
      "hasCallback": false,
      "maxOrMinCount": true,
      "meta": Object {
        "groups": Array [],
      },
      "minCount": 8,
      "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
      "posLine2": "                                                 ^^^^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
            "posLine2": "                                         ^^^^^",
            "type": "charOrSet",
          },
        ],
        "followUp": null,
        "functionName": "fiber0005",
        "hasCallback": false,
        "lastAtomReturns": false,
        "meta": Object {
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0007",
      "hasCallback": false,
      "maxOrMinCount": false,
      "meta": Object {
        "groups": Array [],
      },
      "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{...",
      "posLine2": "                                       ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 90,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 65,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z...",
            "posLine2": "                              ^^^^^",
            "type": "charOrSet",
          },
        ],
        "followUp": null,
        "functionName": "fiber0009",
        "hasCallback": false,
        "lastAtomReturns": false,
        "meta": Object {
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0011",
      "hasCallback": false,
      "maxOrMinCount": false,
      "meta": Object {
        "groups": Array [],
      },
      "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=....",
      "posLine2": "                            ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 90,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 57,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 65,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 48,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z...",
            "posLine2": "             ^^^^^^^^^^^",
            "type": "charOrSet",
          },
        ],
        "followUp": null,
        "functionName": "fiber0013",
        "hasCallback": false,
        "lastAtomReturns": false,
        "meta": Object {
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0015",
      "hasCallback": false,
      "maxOrMinCount": false,
      "meta": Object {
        "groups": Array [],
      },
      "posLine1": "...9]))((?=.*[A-Za-z0-9...",
      "posLine2": "           ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 57,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "[0-9]))((?=.*[A...",
            "posLine2": "^^^^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 4,
                "idx": 0,
              },
            },
            "posLine1": "(.*[0-9]))((?=.*[A-...",
            "posLine2": "^^^^^^^^^",
            "type": "groupEndMarker",
          },
        ],
        "followUp": null,
        "functionName": "fiber0017",
        "hasCallback": false,
        "lastAtomReturns": false,
        "meta": Object {
          "groups": Array [
            Object {
              "astStart": 4,
              "idx": 0,
            },
          ],
        },
      },
      "functionName": "greedyQuantifier0019",
      "hasCallback": false,
      "maxOrMinCount": false,
      "meta": Object {
        "groups": Array [],
      },
      "posLine1": ".*[0-9]))((?...",
      "posLine2": "^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "groups": Array [
    Object {
      "astStart": 4,
      "idx": 0,
    },
    Object {
      "astStart": 14,
      "idx": 1,
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 4,
                    "idx": 0,
                  },
                },
                "posLine1": "(.*[0-9]))((?=.*[A-...",
                "posLine2": "^^^^^^^^^",
                "type": "groupStartMarker",
              },
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0019",
                  "maxOrMinCount": false,
                },
                "posLine1": ".*[0-9]))((?...",
                "posLine2": "^^",
                "type": "greedyQuantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0020",
            "hasCallback": false,
            "lastAtomReturns": true,
            "meta": Object {
              "groups": Array [],
            },
          },
          "negate": false,
        },
        "posLine1": "(?=(.*[0-9]))((?=.*[A-Z...",
        "posLine2": "^^^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 14,
            "idx": 1,
          },
        },
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
        "posLine2": "       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0015",
                  "maxOrMinCount": false,
                },
                "posLine1": "...9]))((?=.*[A-Za-z0-9...",
                "posLine2": "           ^^",
                "type": "greedyQuantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0016",
            "hasCallback": false,
            "lastAtomReturns": true,
            "meta": Object {
              "groups": Array [],
            },
          },
          "negate": false,
        },
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z]...",
        "posLine2": "        ^^^^^^^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0011",
                  "maxOrMinCount": false,
                },
                "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=....",
                "posLine2": "                            ^^",
                "type": "greedyQuantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0012",
            "hasCallback": false,
            "lastAtomReturns": true,
            "meta": Object {
              "groups": Array [],
            },
          },
          "negate": false,
        },
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]...",
        "posLine2": "                         ^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0007",
                  "maxOrMinCount": false,
                },
                "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{...",
                "posLine2": "                                       ^^",
                "type": "greedyQuantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0008",
            "hasCallback": false,
            "lastAtomReturns": true,
            "meta": Object {
              "groups": Array [],
            },
          },
          "negate": false,
        },
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
        "posLine2": "                                    ^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 14,
            "idx": 1,
          },
        },
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
        "posLine2": "       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "type": "groupEndMarker",
      },
      Object {
        "data": Object {},
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
        "posLine2": "                                                ^",
        "type": "startAnchor",
      },
      Object {
        "data": Object {
          "functionName": "greedyQuantifier0003",
          "maxOrMinCount": true,
        },
        "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
        "posLine2": "                                                 ^^^^^",
        "type": "greedyQuantifierStarter",
      },
    ],
    "followUp": null,
    "functionName": "fiber0004",
    "hasCallback": false,
    "lastAtomReturns": true,
    "meta": Object {
      "groups": Array [
        Object {
          "astStart": 14,
          "idx": 1,
        },
      ],
    },
  },
  "regexStr": "/(?=(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
}
`;
