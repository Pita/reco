// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/password_moderate template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 4,
                      "idx": 0,
                    },
                  },
                  "posLine1": "/(?=(.*[0-9]))((?=.*[A-...",
                  "posLine2": "    ^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0017",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "/(?=(.*[0-9]))((?...",
                  "posLine2": "     ^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0018",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [
                  Object {
                    "astStart": 4,
                    "idx": 0,
                  },
                ],
                "maxCharLength": "Infinity",
                "minCharLength": 1,
              },
            },
            "negate": false,
          },
          "posLine1": "/(?=(.*[0-9]))((?=.*[A-Z...",
          "posLine2": " ^^^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 14,
              "idx": 1,
            },
          },
          "posLine1": "...(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0013",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...0-9]))((?=.*[A-Za-z0-9...",
                  "posLine2": "             ^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0014",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [],
                "maxCharLength": "Infinity",
                "minCharLength": 1,
              },
            },
            "negate": false,
          },
          "posLine1": "....*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z]...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0009",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...-z0-9])(?=.*[A-Z])(?=....",
                  "posLine2": "             ^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0010",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [],
                "maxCharLength": "Infinity",
                "minCharLength": 1,
              },
            },
            "negate": false,
          },
          "posLine1": "...-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]...",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0005",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...*[A-Z])(?=.*[a-z]))^.{...",
                  "posLine2": "             ^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0006",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [],
                "maxCharLength": "Infinity",
                "minCharLength": 1,
              },
            },
            "negate": false,
          },
          "posLine1": "...?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "lookaround",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 14,
              "idx": 1,
            },
          },
          "posLine1": "...(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {},
          "posLine1": "...=.*[a-z]))^.{8,}$/",
          "posLine2": "             ^",
          "type": "startAnchor",
        },
        Object {
          "data": Object {
            "maxOrMinCount": true,
            "minCount": 8,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": true,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 13,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 8233,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 8232,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue1": 10,
                          "comparisonValue2": 13,
                          "type": "equalOneOfTwo",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "....*[a-z]))^.{8,}$/",
                  "posLine2": "             ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0002",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "....*[a-z]))^.{8,}$/",
          "posLine2": "             ^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {},
          "posLine1": "...z]))^.{8,}$/",
          "posLine2": "             ^",
          "type": "endAnchor",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [
          Object {
            "astStart": 14,
            "idx": 1,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 8,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "....*[a-z]))^.{8,}$/",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 122,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 97,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...A-Z])(?=.*[a-z]))^.{8,}$/",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0003",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...*[A-Z])(?=.*[a-z]))^....",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "...A-Z])(?=.*[a-z]))^.{8,}$/",
              "posLine2": "             ^^^^^",
              "type": "charOrSet",
            },
          ],
          "followUp": null,
          "functionName": "fiber0003",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
              ],
              "negate": false,
            },
            "groups": Array [],
            "maxCharLength": 1,
            "minCharLength": 1,
          },
        },
        "functionName": "greedyQuantifier0005",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
        "posLine1": "...*[A-Z])(?=.*[a-z]))^.{...",
        "posLine2": "             ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0004",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0005",
            "maxOrMinCount": false,
          },
          "posLine1": "...*[A-Z])(?=.*[a-z]))^.{...",
          "posLine2": "             ^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0006",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": "Infinity",
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 90,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 65,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...0-9])(?=.*[A-Z])(?=.*[a-z...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0007",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...-z0-9])(?=.*[A-Z])(?=...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 90,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 65,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "...0-9])(?=.*[A-Z])(?=.*[a-z...",
              "posLine2": "             ^^^^^",
              "type": "charOrSet",
            },
          ],
          "followUp": null,
          "functionName": "fiber0007",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
              ],
              "negate": false,
            },
            "groups": Array [],
            "maxCharLength": 1,
            "minCharLength": 1,
          },
        },
        "functionName": "greedyQuantifier0009",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
        "posLine1": "...-z0-9])(?=.*[A-Z])(?=....",
        "posLine2": "             ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0008",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0009",
            "maxOrMinCount": false,
          },
          "posLine1": "...-z0-9])(?=.*[A-Z])(?=....",
          "posLine2": "             ^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0010",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": "Infinity",
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 90,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 57,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 65,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z...",
          "posLine2": "             ^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0011",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...0-9]))((?=.*[A-Za-z0-...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 90,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 122,
                      "type": "lessOrEqual",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 97,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 57,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 65,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 48,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z...",
              "posLine2": "             ^^^^^^^^^^^",
              "type": "charOrSet",
            },
          ],
          "followUp": null,
          "functionName": "fiber0011",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
              ],
              "negate": false,
            },
            "groups": Array [],
            "maxCharLength": 1,
            "minCharLength": 1,
          },
        },
        "functionName": "greedyQuantifier0013",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
        "posLine1": "...0-9]))((?=.*[A-Za-z0-9...",
        "posLine2": "             ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0012",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0013",
            "maxOrMinCount": false,
          },
          "posLine1": "...0-9]))((?=.*[A-Za-z0-9...",
          "posLine2": "             ^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0014",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": "Infinity",
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "/(?=(.*[0-9]))((?=.*[A...",
          "posLine2": "       ^^^^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 4,
              "idx": 0,
            },
          },
          "posLine1": "/(?=(.*[0-9]))((?=.*[A-...",
          "posLine2": "    ^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0015",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 4,
            "idx": 0,
          },
        ],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "/(?=(.*[0-9]))((...",
          "posLine2": "     ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 57,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 48,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "unicode": false,
              },
              "posLine1": "/(?=(.*[0-9]))((?=.*[A...",
              "posLine2": "       ^^^^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 4,
                  "idx": 0,
                },
              },
              "posLine1": "/(?=(.*[0-9]))((?=.*[A-...",
              "posLine2": "    ^^^^^^^^^",
              "type": "groupEndMarker",
            },
          ],
          "followUp": null,
          "functionName": "fiber0015",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 4,
                "idx": 0,
              },
            ],
            "maxCharLength": 1,
            "minCharLength": 1,
          },
        },
        "functionName": "greedyQuantifier0017",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 4,
              "idx": 0,
            },
          ],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
        "posLine1": "/(?=(.*[0-9]))((?...",
        "posLine2": "     ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0016",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 4,
              "idx": 0,
            },
          },
          "posLine1": "/(?=(.*[0-9]))((?=.*[A-...",
          "posLine2": "    ^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0017",
            "maxOrMinCount": false,
          },
          "posLine1": "/(?=(.*[0-9]))((?...",
          "posLine2": "     ^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0018",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [
          Object {
            "astStart": 4,
            "idx": 0,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 1,
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "...A-Z])(?=.*[a-z]))^.{8,}$/",
            "posLine2": "             ^^^^^",
            "type": "charOrSet",
          },
        ],
        "followUp": null,
        "functionName": "fiber0003",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
            ],
            "negate": false,
          },
          "groups": Array [],
          "maxCharLength": 1,
          "minCharLength": 1,
        },
      },
      "functionName": "greedyQuantifier0005",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
      "posLine1": "...*[A-Z])(?=.*[a-z]))^.{...",
      "posLine2": "             ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 90,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 65,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "...0-9])(?=.*[A-Z])(?=.*[a-z...",
            "posLine2": "             ^^^^^",
            "type": "charOrSet",
          },
        ],
        "followUp": null,
        "functionName": "fiber0007",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
            ],
            "negate": false,
          },
          "groups": Array [],
          "maxCharLength": 1,
          "minCharLength": 1,
        },
      },
      "functionName": "greedyQuantifier0009",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
      "posLine1": "...-z0-9])(?=.*[A-Z])(?=....",
      "posLine2": "             ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 90,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 57,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 65,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 48,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "...9]))((?=.*[A-Za-z0-9])(?=.*[A-Z...",
            "posLine2": "             ^^^^^^^^^^^",
            "type": "charOrSet",
          },
        ],
        "followUp": null,
        "functionName": "fiber0011",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
            ],
            "negate": false,
          },
          "groups": Array [],
          "maxCharLength": 1,
          "minCharLength": 1,
        },
      },
      "functionName": "greedyQuantifier0013",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
      "posLine1": "...0-9]))((?=.*[A-Za-z0-9...",
      "posLine2": "             ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 57,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "unicode": false,
            },
            "posLine1": "/(?=(.*[0-9]))((?=.*[A...",
            "posLine2": "       ^^^^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 4,
                "idx": 0,
              },
            },
            "posLine1": "/(?=(.*[0-9]))((?=.*[A-...",
            "posLine2": "    ^^^^^^^^^",
            "type": "groupEndMarker",
          },
        ],
        "followUp": null,
        "functionName": "fiber0015",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 4,
              "idx": 0,
            },
          ],
          "maxCharLength": 1,
          "minCharLength": 1,
        },
      },
      "functionName": "greedyQuantifier0017",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 4,
            "idx": 0,
          },
        ],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
      "posLine1": "/(?=(.*[0-9]))((?...",
      "posLine2": "     ^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "groups": Array [
    Object {
      "astStart": 4,
      "idx": 0,
    },
    Object {
      "astStart": 14,
      "idx": 1,
    },
  ],
  "lazyQuantifierHandlers": Array [],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 4,
                    "idx": 0,
                  },
                },
                "posLine1": "/(?=(.*[0-9]))((?=.*[A-...",
                "posLine2": "    ^^^^^^^^^",
                "type": "groupStartMarker",
              },
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0017",
                  "maxOrMinCount": false,
                },
                "posLine1": "/(?=(.*[0-9]))((?...",
                "posLine2": "     ^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0018",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [
                Object {
                  "astStart": 4,
                  "idx": 0,
                },
              ],
              "maxCharLength": "Infinity",
              "minCharLength": 1,
            },
          },
          "negate": false,
        },
        "posLine1": "/(?=(.*[0-9]))((?=.*[A-Z...",
        "posLine2": " ^^^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 14,
            "idx": 1,
          },
        },
        "posLine1": "...(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0013",
                  "maxOrMinCount": false,
                },
                "posLine1": "...0-9]))((?=.*[A-Za-z0-9...",
                "posLine2": "             ^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0014",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [],
              "maxCharLength": "Infinity",
              "minCharLength": 1,
            },
          },
          "negate": false,
        },
        "posLine1": "....*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z]...",
        "posLine2": "             ^^^^^^^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0009",
                  "maxOrMinCount": false,
                },
                "posLine1": "...-z0-9])(?=.*[A-Z])(?=....",
                "posLine2": "             ^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0010",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [],
              "maxCharLength": "Infinity",
              "minCharLength": 1,
            },
          },
          "negate": false,
        },
        "posLine1": "...-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]...",
        "posLine2": "             ^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "lookaroundFiber": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0005",
                  "maxOrMinCount": false,
                },
                "posLine1": "...*[A-Z])(?=.*[a-z]))^.{...",
                "posLine2": "             ^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0006",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [],
              "maxCharLength": "Infinity",
              "minCharLength": 1,
            },
          },
          "negate": false,
        },
        "posLine1": "...?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
        "posLine2": "             ^^^^^^^^^^^",
        "type": "lookaround",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 14,
            "idx": 1,
          },
        },
        "posLine1": "...(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "type": "groupEndMarker",
      },
      Object {
        "data": Object {},
        "posLine1": "...=.*[a-z]))^.{8,}$/",
        "posLine2": "             ^",
        "type": "startAnchor",
      },
      Object {
        "data": Object {
          "maxOrMinCount": true,
          "minCount": 8,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": true,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 13,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 8233,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 8232,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue1": 10,
                        "comparisonValue2": 13,
                        "type": "equalOneOfTwo",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "unicode": false,
                },
                "posLine1": "....*[a-z]))^.{8,}$/",
                "posLine2": "             ^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0002",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  10,
                  13,
                  8232,
                  8233,
                ],
                "negate": true,
              },
              "groups": Array [],
              "maxCharLength": 1,
              "minCharLength": 1,
            },
          },
        },
        "posLine1": "....*[a-z]))^.{8,}$/",
        "posLine2": "             ^^^^^",
        "type": "nonBacktrackingQuantifier",
      },
      Object {
        "data": Object {},
        "posLine1": "...z]))^.{8,}$/",
        "posLine2": "             ^",
        "type": "endAnchor",
      },
    ],
    "followUp": null,
    "functionName": "fiber0001",
    "lastAtomReturns": false,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          10,
          13,
          8232,
          8233,
        ],
        "negate": true,
      },
      "groups": Array [
        Object {
          "astStart": 14,
          "idx": 1,
        },
      ],
      "maxCharLength": "Infinity",
      "minCharLength": 8,
    },
  },
  "quantifierCountersLength": 0,
  "regexStr": "/(?=(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/",
}
`;
