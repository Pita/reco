// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/numbers_whole_decimal_fractions template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "maxCount": 1,
            "maxOrMinCount": true,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue1": 44,
                        "comparisonValue2": 46,
                        "type": "equalOneOfTwo",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...[\\\\/][0-9]+[,.]?[0-9]*)*/",
                  "posLine2": "             ^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0005",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    44,
                    46,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...[\\\\/][0-9]+[,.]?[0-9]*)*/",
          "posLine2": "             ^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "maxOrMinCount": false,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...0-9]+[,.]?[0-9]*)*/",
                  "posLine2": "             ^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0004",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...0-9]+[,.]?[0-9]*)*/",
          "posLine2": "             ^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 22,
              "idx": 0,
            },
          },
          "posLine1": "...,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [],
          "followUp": null,
          "functionName": "fiber0001",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "groups": Array [],
            "maxCharLength": 0,
            "minCharLength": 0,
          },
        },
        "functionName": "greedyQuantifier0003",
        "maxOrMinCount": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 22,
              "idx": 0,
            },
          ],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
        "posLine1": "...,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^",
        "wrappedHandler": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 22,
                  "idx": 0,
                },
              },
              "posLine1": "...,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^",
              "type": "groupStartMarker",
            },
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 47,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "....]?[0-9]*([\\\\/][0-9]+[,.]...",
              "posLine2": "             ^^^^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "fixedLength": 1,
                "followUp": "[Circular]",
                "maxOrMinCount": true,
                "minCount": 1,
                "wrappedHandler": Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 57,
                            "type": "lessOrEqual",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 48,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...0-9]*([\\\\/][0-9]+[,.]?[0-9...",
                      "posLine2": "             ^^^^^",
                      "type": "charOrSet",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0006",
                  "lastAtomReturns": false,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                      ],
                      "negate": false,
                    },
                    "groups": Array [],
                    "maxCharLength": 1,
                    "minCharLength": 1,
                  },
                },
              },
              "posLine1": "...0-9]*([\\\\/][0-9]+[,.]?[0-9]...",
              "posLine2": "             ^^^^^^",
              "type": "backtrackingFixedLengthQuantifier",
            },
          ],
          "followUp": null,
          "functionName": "fiber0007",
          "lastAtomReturns": true,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                47,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 22,
                "idx": 0,
              },
            ],
            "maxCharLength": "Infinity",
            "minCharLength": 2,
          },
        },
      },
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            44,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 22,
            "idx": 0,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 0,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...0-9]+[,.]?[0-9]*)*/",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue1": 44,
                "comparisonValue2": 46,
                "type": "equalOneOfTwo",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...[\\\\/][0-9]+[,.]?[0-9]*)*/",
          "posLine2": "             ^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            44,
            46,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...0-9]*([\\\\/][0-9]+[,.]?[0-9...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0006",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 22,
              "idx": 0,
            },
          },
          "posLine1": "...,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 47,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "....]?[0-9]*([\\\\/][0-9]+[,.]...",
          "posLine2": "             ^^^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "fixedLength": 1,
            "followUp": "[Circular]",
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...0-9]*([\\\\/][0-9]+[,.]?[0-9...",
                  "posLine2": "             ^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0006",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...0-9]*([\\\\/][0-9]+[,.]?[0-9]...",
          "posLine2": "             ^^^^^^",
          "type": "backtrackingFixedLengthQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0007",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            47,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 22,
            "idx": 0,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 2,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "maxCount": 1,
            "maxOrMinCount": true,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue1": 44,
                        "comparisonValue2": 46,
                        "type": "equalOneOfTwo",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/[-]?[0-9]+[,.]?[0-9]*([\\\\...",
                  "posLine2": "           ^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0010",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    44,
                    46,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "/[-]?[0-9]+[,.]?[0-9]*([\\\\/...",
          "posLine2": "           ^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "maxOrMinCount": false,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...0-9]+[,.]?[0-9]*([\\\\/][0-9...",
                  "posLine2": "             ^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0009",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...0-9]+[,.]?[0-9]*([\\\\/][0-9]...",
          "posLine2": "             ^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0003",
            "maxOrMinCount": false,
          },
          "posLine1": "...,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0008",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            44,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 22,
            "idx": 0,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 0,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...0-9]+[,.]?[0-9]*([\\\\/][0-9...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0009",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue1": 44,
                "comparisonValue2": 46,
                "type": "equalOneOfTwo",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/[-]?[0-9]+[,.]?[0-9]*([\\\\...",
          "posLine2": "           ^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0010",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            44,
            46,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "/[-]?[0-9]+[,.]?[0-9...",
          "posLine2": "     ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0011",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "maxCount": 1,
            "maxOrMinCount": true,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 45,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/[-]?[0-9]+[,....",
                  "posLine2": " ^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0013",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    45,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "/[-]?[0-9]+[,.]...",
          "posLine2": " ^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "fixedLength": 1,
            "followUp": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "maxCount": 1,
                    "maxOrMinCount": true,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": false,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue1": 44,
                                "comparisonValue2": 46,
                                "type": "equalOneOfTwo",
                              },
                              "type": "lastComparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "/[-]?[0-9]+[,.]?[0-9]*([\\\\...",
                          "posLine2": "           ^^^^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0010",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            44,
                            46,
                          ],
                          "negate": false,
                        },
                        "groups": Array [],
                        "maxCharLength": 1,
                        "minCharLength": 1,
                      },
                    },
                  },
                  "posLine1": "/[-]?[0-9]+[,.]?[0-9]*([\\\\/...",
                  "posLine2": "           ^^^^^",
                  "type": "nonBacktrackingQuantifier",
                },
                Object {
                  "data": Object {
                    "maxOrMinCount": false,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": false,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 57,
                                "type": "lessOrEqual",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 48,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "...0-9]+[,.]?[0-9]*([\\\\/][0-9...",
                          "posLine2": "             ^^^^^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0009",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            48,
                            49,
                            50,
                            51,
                            52,
                            53,
                            54,
                            55,
                            56,
                            57,
                          ],
                          "negate": false,
                        },
                        "groups": Array [],
                        "maxCharLength": 1,
                        "minCharLength": 1,
                      },
                    },
                  },
                  "posLine1": "...0-9]+[,.]?[0-9]*([\\\\/][0-9]...",
                  "posLine2": "             ^^^^^^",
                  "type": "nonBacktrackingQuantifier",
                },
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0003",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0008",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    44,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 22,
                    "idx": 0,
                  },
                ],
                "maxCharLength": "Infinity",
                "minCharLength": 0,
              },
            },
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/[-]?[0-9]+[,.]?[0-9...",
                  "posLine2": "     ^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0011",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "/[-]?[0-9]+[,.]?[0-9]...",
          "posLine2": "     ^^^^^^",
          "type": "backtrackingFixedLengthQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0012",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            45,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 22,
            "idx": 0,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 45,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/[-]?[0-9]+[,....",
          "posLine2": " ^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0013",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            45,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [],
        "followUp": null,
        "functionName": "fiber0001",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
      },
      "functionName": "greedyQuantifier0003",
      "maxOrMinCount": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 22,
            "idx": 0,
          },
        ],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
      "posLine1": "...,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^",
      "wrappedHandler": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 22,
                "idx": 0,
              },
            },
            "posLine1": "...,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 47,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "....]?[0-9]*([\\\\/][0-9]+[,.]...",
            "posLine2": "             ^^^^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "fixedLength": 1,
              "followUp": "[Circular]",
              "maxOrMinCount": true,
              "minCount": 1,
              "wrappedHandler": Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 57,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 48,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...0-9]*([\\\\/][0-9]+[,.]?[0-9...",
                    "posLine2": "             ^^^^^",
                    "type": "charOrSet",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0006",
                "lastAtomReturns": false,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      48,
                      49,
                      50,
                      51,
                      52,
                      53,
                      54,
                      55,
                      56,
                      57,
                    ],
                    "negate": false,
                  },
                  "groups": Array [],
                  "maxCharLength": 1,
                  "minCharLength": 1,
                },
              },
            },
            "posLine1": "...0-9]*([\\\\/][0-9]+[,.]?[0-9]...",
            "posLine2": "             ^^^^^^",
            "type": "backtrackingFixedLengthQuantifier",
          },
        ],
        "followUp": null,
        "functionName": "fiber0007",
        "lastAtomReturns": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              47,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 22,
              "idx": 0,
            },
          ],
          "maxCharLength": "Infinity",
          "minCharLength": 2,
        },
      },
    },
  ],
  "groups": Array [
    Object {
      "astStart": 22,
      "idx": 0,
    },
  ],
  "lazyQuantifierHandlers": Array [],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "maxCount": 1,
          "maxOrMinCount": true,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 45,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "unicode": false,
                },
                "posLine1": "/[-]?[0-9]+[,....",
                "posLine2": " ^^^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0013",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  45,
                ],
                "negate": false,
              },
              "groups": Array [],
              "maxCharLength": 1,
              "minCharLength": 1,
            },
          },
        },
        "posLine1": "/[-]?[0-9]+[,.]...",
        "posLine2": " ^^^^",
        "type": "nonBacktrackingQuantifier",
      },
      Object {
        "data": Object {
          "fixedLength": 1,
          "followUp": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "maxCount": 1,
                  "maxOrMinCount": true,
                  "wrappedHandler": Object {
                    "atoms": Array [
                      Object {
                        "data": Object {
                          "negate": false,
                          "tree": Object {
                            "comparison": Object {
                              "comparisonValue1": 44,
                              "comparisonValue2": 46,
                              "type": "equalOneOfTwo",
                            },
                            "type": "lastComparison",
                          },
                          "unicode": false,
                        },
                        "posLine1": "/[-]?[0-9]+[,.]?[0-9]*([\\\\...",
                        "posLine2": "           ^^^^",
                        "type": "charOrSet",
                      },
                    ],
                    "followUp": null,
                    "functionName": "fiber0010",
                    "lastAtomReturns": false,
                    "meta": Object {
                      "firstCharRange": Object {
                        "chars": Array [
                          44,
                          46,
                        ],
                        "negate": false,
                      },
                      "groups": Array [],
                      "maxCharLength": 1,
                      "minCharLength": 1,
                    },
                  },
                },
                "posLine1": "/[-]?[0-9]+[,.]?[0-9]*([\\\\/...",
                "posLine2": "           ^^^^^",
                "type": "nonBacktrackingQuantifier",
              },
              Object {
                "data": Object {
                  "maxOrMinCount": false,
                  "wrappedHandler": Object {
                    "atoms": Array [
                      Object {
                        "data": Object {
                          "negate": false,
                          "tree": Object {
                            "comparison": Object {
                              "comparisonValue": 57,
                              "type": "lessOrEqual",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 48,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "unicode": false,
                        },
                        "posLine1": "...0-9]+[,.]?[0-9]*([\\\\/][0-9...",
                        "posLine2": "             ^^^^^",
                        "type": "charOrSet",
                      },
                    ],
                    "followUp": null,
                    "functionName": "fiber0009",
                    "lastAtomReturns": false,
                    "meta": Object {
                      "firstCharRange": Object {
                        "chars": Array [
                          48,
                          49,
                          50,
                          51,
                          52,
                          53,
                          54,
                          55,
                          56,
                          57,
                        ],
                        "negate": false,
                      },
                      "groups": Array [],
                      "maxCharLength": 1,
                      "minCharLength": 1,
                    },
                  },
                },
                "posLine1": "...0-9]+[,.]?[0-9]*([\\\\/][0-9]...",
                "posLine2": "             ^^^^^^",
                "type": "nonBacktrackingQuantifier",
              },
              Object {
                "data": Object {
                  "functionName": "greedyQuantifier0003",
                  "maxOrMinCount": false,
                },
                "posLine1": "...,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
                "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^",
                "type": "quantifierStarter",
              },
            ],
            "followUp": null,
            "functionName": "fiber0008",
            "lastAtomReturns": true,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  44,
                  46,
                  47,
                  48,
                  49,
                  50,
                  51,
                  52,
                  53,
                  54,
                  55,
                  56,
                  57,
                ],
                "negate": false,
              },
              "groups": Array [
                Object {
                  "astStart": 22,
                  "idx": 0,
                },
              ],
              "maxCharLength": "Infinity",
              "minCharLength": 0,
            },
          },
          "maxOrMinCount": true,
          "minCount": 1,
          "wrappedHandler": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "negate": false,
                  "tree": Object {
                    "comparison": Object {
                      "comparisonValue": 57,
                      "type": "lessOrEqual",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 48,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "unicode": false,
                },
                "posLine1": "/[-]?[0-9]+[,.]?[0-9...",
                "posLine2": "     ^^^^^",
                "type": "charOrSet",
              },
            ],
            "followUp": null,
            "functionName": "fiber0011",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [
                  48,
                  49,
                  50,
                  51,
                  52,
                  53,
                  54,
                  55,
                  56,
                  57,
                ],
                "negate": false,
              },
              "groups": Array [],
              "maxCharLength": 1,
              "minCharLength": 1,
            },
          },
        },
        "posLine1": "/[-]?[0-9]+[,.]?[0-9]...",
        "posLine2": "     ^^^^^^",
        "type": "backtrackingFixedLengthQuantifier",
      },
    ],
    "followUp": null,
    "functionName": "fiber0012",
    "lastAtomReturns": true,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          45,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
        ],
        "negate": false,
      },
      "groups": Array [
        Object {
          "astStart": 22,
          "idx": 0,
        },
      ],
      "maxCharLength": "Infinity",
      "minCharLength": 1,
    },
  },
  "quantifierCountersLength": 0,
  "regexStr": "/[-]?[0-9]+[,.]?[0-9]*([\\\\/][0-9]+[,.]?[0-9]*)*/",
}
`;
