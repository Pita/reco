// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/js_handler template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "lookaroundFiber": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "functionName": "greedyQuantifier0004",
                    "maxOrMinCount": false,
                  },
                  "posLine1": "...\\\\w+=\\\\S+(?=.*>)/",
                  "posLine2": "             ^^",
                  "type": "quantifierStarter",
                },
              ],
              "followUp": null,
              "functionName": "fiber0005",
              "lastAtomReturns": true,
              "meta": Object {
                "groups": Array [],
              },
            },
            "negate": false,
          },
          "posLine1": "(?=.*>)/",
          "posLine2": "^^^^^^^",
          "type": "lookaround",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 62,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...+=\\\\S+(?=.*>)/",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...\\\\w+=\\\\S+(?=.*>)/",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 62,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "...+=\\\\S+(?=.*>)/",
              "posLine2": "             ^",
              "type": "charOrSet",
            },
          ],
          "followUp": null,
          "functionName": "fiber0002",
          "lastAtomReturns": false,
          "meta": Object {
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0004",
        "maxOrMinCount": false,
        "meta": Object {
          "groups": Array [],
        },
        "posLine1": "...\\\\w+=\\\\S+(?=.*>)/",
        "posLine2": "             ^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0003",
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0004",
            "maxOrMinCount": false,
          },
          "posLine1": "...\\\\w+=\\\\S+(?=.*>)/",
          "posLine2": "             ^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 8202,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8287,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue1": 12288,
                    "comparisonValue2": 65279,
                    "type": "equalOneOfTwo",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8239,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 8287,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 8233,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 8239,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 8232,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 160,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 5760,
                    "type": "equal",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 8192,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "type": "true",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 32,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 160,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 13,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 32,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 9,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "\\\\S+(?=.*>)/",
          "posLine2": "^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "lookaroundFiber": Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "functionName": "greedyQuantifier0004",
                        "maxOrMinCount": false,
                      },
                      "posLine1": "...\\\\w+=\\\\S+(?=.*>)/",
                      "posLine2": "             ^^",
                      "type": "quantifierStarter",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0005",
                  "lastAtomReturns": true,
                  "meta": Object {
                    "groups": Array [],
                  },
                },
                "negate": false,
              },
              "posLine1": "(?=.*>)/",
              "posLine2": "^^^^^^^",
              "type": "lookaround",
            },
          ],
          "followUp": null,
          "functionName": "fiber0001",
          "lastAtomReturns": false,
          "meta": Object {
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0007",
        "maxOrMinCount": true,
        "meta": Object {
          "groups": Array [],
        },
        "minCount": 1,
        "posLine1": "\\\\S+(?=.*>)/",
        "posLine2": "^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0006",
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 61,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "=\\\\S+(?=.*>)/",
          "posLine2": "^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0007",
            "maxOrMinCount": true,
          },
          "posLine1": "\\\\S+(?=.*>)/",
          "posLine2": "^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0008",
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 90,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 95,
                  "type": "equal",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "type": "true",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 57,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 65,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "\\\\w+=\\\\S+(?=.*>)/",
          "posLine2": "^^",
          "type": "charOrSet",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "negate": false,
                "tree": Object {
                  "comparison": Object {
                    "comparisonValue": 61,
                    "type": "equal",
                  },
                  "type": "lastComparison",
                },
                "unicode": false,
              },
              "posLine1": "=\\\\S+(?=.*>)/",
              "posLine2": "^",
              "type": "charOrSet",
            },
            Object {
              "data": Object {
                "functionName": "greedyQuantifier0007",
                "maxOrMinCount": true,
              },
              "posLine1": "\\\\S+(?=.*>)/",
              "posLine2": "^^^",
              "type": "quantifierStarter",
            },
          ],
          "followUp": null,
          "functionName": "fiber0008",
          "lastAtomReturns": true,
          "meta": Object {
            "groups": Array [],
          },
        },
        "functionName": "greedyQuantifier0010",
        "maxOrMinCount": true,
        "meta": Object {
          "groups": Array [],
        },
        "minCount": 1,
        "posLine1": "\\\\w+=\\\\S+(?=.*>)/",
        "posLine2": "^^^",
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0009",
      "lastAtomReturns": false,
      "meta": Object {
        "groups": Array [],
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
          },
          "posLine1": "\\\\bon\\\\w+=\\\\S+(...",
          "posLine2": "^^",
          "type": "wordBoundary",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 111,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "on\\\\w+=\\\\S+(?...",
          "posLine2": "^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 110,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "n\\\\w+=\\\\S+(?=...",
          "posLine2": "^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0010",
            "maxOrMinCount": true,
          },
          "posLine1": "\\\\w+=\\\\S+(?=.*>)/",
          "posLine2": "^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0011",
      "lastAtomReturns": true,
      "meta": Object {
        "groups": Array [],
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 62,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "...+=\\\\S+(?=.*>)/",
            "posLine2": "             ^",
            "type": "charOrSet",
          },
        ],
        "followUp": null,
        "functionName": "fiber0002",
        "lastAtomReturns": false,
        "meta": Object {
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0004",
      "maxOrMinCount": false,
      "meta": Object {
        "groups": Array [],
      },
      "posLine1": "...\\\\w+=\\\\S+(?=.*>)/",
      "posLine2": "             ^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "lookaroundFiber": Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "functionName": "greedyQuantifier0004",
                      "maxOrMinCount": false,
                    },
                    "posLine1": "...\\\\w+=\\\\S+(?=.*>)/",
                    "posLine2": "             ^^",
                    "type": "quantifierStarter",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0005",
                "lastAtomReturns": true,
                "meta": Object {
                  "groups": Array [],
                },
              },
              "negate": false,
            },
            "posLine1": "(?=.*>)/",
            "posLine2": "^^^^^^^",
            "type": "lookaround",
          },
        ],
        "followUp": null,
        "functionName": "fiber0001",
        "lastAtomReturns": false,
        "meta": Object {
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0007",
      "maxOrMinCount": true,
      "meta": Object {
        "groups": Array [],
      },
      "minCount": 1,
      "posLine1": "\\\\S+(?=.*>)/",
      "posLine2": "^^^",
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 61,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "=\\\\S+(?=.*>)/",
            "posLine2": "^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "functionName": "greedyQuantifier0007",
              "maxOrMinCount": true,
            },
            "posLine1": "\\\\S+(?=.*>)/",
            "posLine2": "^^^",
            "type": "quantifierStarter",
          },
        ],
        "followUp": null,
        "functionName": "fiber0008",
        "lastAtomReturns": true,
        "meta": Object {
          "groups": Array [],
        },
      },
      "functionName": "greedyQuantifier0010",
      "maxOrMinCount": true,
      "meta": Object {
        "groups": Array [],
      },
      "minCount": 1,
      "posLine1": "\\\\w+=\\\\S+(?=.*>)/",
      "posLine2": "^^^",
      "wrappedHandler": "[Circular]",
    },
  ],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "negate": false,
        },
        "posLine1": "\\\\bon\\\\w+=\\\\S+(...",
        "posLine2": "^^",
        "type": "wordBoundary",
      },
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 111,
              "type": "equal",
            },
            "type": "lastComparison",
          },
          "unicode": false,
        },
        "posLine1": "on\\\\w+=\\\\S+(?...",
        "posLine2": "^",
        "type": "charOrSet",
      },
      Object {
        "data": Object {
          "negate": false,
          "tree": Object {
            "comparison": Object {
              "comparisonValue": 110,
              "type": "equal",
            },
            "type": "lastComparison",
          },
          "unicode": false,
        },
        "posLine1": "n\\\\w+=\\\\S+(?=...",
        "posLine2": "^",
        "type": "charOrSet",
      },
      Object {
        "data": Object {
          "functionName": "greedyQuantifier0010",
          "maxOrMinCount": true,
        },
        "posLine1": "\\\\w+=\\\\S+(?=.*>)/",
        "posLine2": "^^^",
        "type": "quantifierStarter",
      },
    ],
    "followUp": null,
    "functionName": "fiber0011",
    "lastAtomReturns": true,
    "meta": Object {
      "groups": Array [],
    },
  },
  "regexStr": "/\\\\bon\\\\w+=\\\\S+(?=.*>)/",
}
`;
