// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/email3 template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 63,
              "idx": 4,
            },
          },
          "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {},
          "posLine1": "...A-Z]{2,}))$/",
          "posLine2": "             ^",
          "type": "endAnchor",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 63,
            "idx": 4,
          },
        ],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 64,
              "idx": 5,
            },
          },
          "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 91,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...(\\".+\\"))@((\\\\[[0-9]{1,3}...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "maxCount": 3,
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
                  "posLine2": "             ^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0006",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,...",
          "posLine2": "             ^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "maxCount": 3,
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                  "posLine2": "             ^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0005",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
          "posLine2": "             ^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "maxCount": 3,
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                  "posLine2": "             ^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0004",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
          "posLine2": "             ^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "maxCount": 3,
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 48,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
                  "posLine2": "             ^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0003",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA...",
          "posLine2": "             ^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 93,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...[0-9]{1,3}])|(([a-zA-...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 64,
              "idx": 5,
            },
          },
          "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 63,
                "idx": 4,
              },
            },
            "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {},
            "posLine1": "...A-Z]{2,}))$/",
            "posLine2": "             ^",
            "type": "endAnchor",
          },
        ],
        "followUp": null,
        "functionName": "fiber0001",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 63,
              "idx": 4,
            },
          ],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
      },
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            91,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 63,
            "idx": 4,
          },
          Object {
            "astStart": 64,
            "idx": 5,
          },
        ],
        "maxCharLength": 17,
        "minCharLength": 9,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0003",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 48,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0006",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "maxOrMinCount": true,
            "minCount": 2,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 90,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 122,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 97,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 65,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                  "posLine2": "             ^^^^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0008",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
          "posLine2": "             ^^^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 116,
              "idx": 6,
            },
          },
          "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 63,
                "idx": 4,
              },
            },
            "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {},
            "posLine1": "...A-Z]{2,}))$/",
            "posLine2": "             ^",
            "type": "endAnchor",
          },
        ],
        "followUp": null,
        "functionName": "fiber0001",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 63,
              "idx": 4,
            },
          ],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
      },
      "functionName": "fiber0007",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 63,
            "idx": 4,
          },
          Object {
            "astStart": 116,
            "idx": 6,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 2,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 90,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 122,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 97,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 65,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
          "posLine2": "             ^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0008",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 117,
              "idx": 7,
            },
          },
          "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 57,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 90,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 122,
                            "type": "lessOrEqual",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 97,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 65,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 45,
                          "type": "equal",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 48,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "type": "true",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA...",
                  "posLine2": "             ^^^^^^^^^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0011",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    45,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-...",
          "posLine2": "             ^^^^^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...A-Z\\\\-0-9]+\\\\.)+[a-zA-Z]...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 117,
              "idx": 7,
            },
          },
          "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "maxOrMinCount": true,
                "minCount": 2,
                "wrappedHandler": Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 90,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 122,
                              "type": "lessOrEqual",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 97,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 65,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                      "posLine2": "             ^^^^^^^^",
                      "type": "charOrSet",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0008",
                  "lastAtomReturns": false,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                      ],
                      "negate": false,
                    },
                    "groups": Array [],
                    "maxCharLength": 1,
                    "minCharLength": 1,
                  },
                },
              },
              "posLine1": "...-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
              "posLine2": "             ^^^^^^^^^^^^",
              "type": "nonBacktrackingQuantifier",
            },
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 116,
                  "idx": 6,
                },
              },
              "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
          ],
          "followUp": Object {
            "atoms": Array [
              Object {
                "data": Object {
                  "groupReference": Object {
                    "astStart": 63,
                    "idx": 4,
                  },
                },
                "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                "type": "groupEndMarker",
              },
              Object {
                "data": Object {},
                "posLine1": "...A-Z]{2,}))$/",
                "posLine2": "             ^",
                "type": "endAnchor",
              },
            ],
            "followUp": null,
            "functionName": "fiber0001",
            "lastAtomReturns": false,
            "meta": Object {
              "firstCharRange": Object {
                "chars": Array [],
                "negate": false,
              },
              "groups": Array [
                Object {
                  "astStart": 63,
                  "idx": 4,
                },
              ],
              "maxCharLength": 0,
              "minCharLength": 0,
            },
          },
          "functionName": "fiber0007",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 63,
                "idx": 4,
              },
              Object {
                "astStart": 116,
                "idx": 6,
              },
            ],
            "maxCharLength": "Infinity",
            "minCharLength": 2,
          },
        },
        "functionName": "greedyQuantifier0010",
        "maxOrMinCount": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 63,
              "idx": 4,
            },
            Object {
              "astStart": 116,
              "idx": 6,
            },
            Object {
              "astStart": 117,
              "idx": 7,
            },
          ],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
        "minCount": 1,
        "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
        "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
        "quantifierCounterIndex": 0,
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0009",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            45,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 117,
            "idx": 7,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 2,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 57,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 90,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 65,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 45,
                  "type": "equal",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 48,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "type": "true",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA...",
          "posLine2": "             ^^^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0011",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            45,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 116,
              "idx": 6,
            },
          },
          "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0010",
            "maxOrMinCount": true,
            "quantifierCounterIndex": 0,
          },
          "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0012",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            45,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 63,
            "idx": 4,
          },
          Object {
            "astStart": 116,
            "idx": 6,
          },
          Object {
            "astStart": 117,
            "idx": 7,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 4,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 2,
              "idx": 0,
            },
          },
          "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
          "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 64,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...*)|(\\".+\\"))@((\\\\[[0-9]{...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 63,
              "idx": 4,
            },
          },
          "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "alternatives": Array [
              Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 64,
                        "idx": 5,
                      },
                    },
                    "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "groupStartMarker",
                  },
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 91,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...(\\".+\\"))@((\\\\[[0-9]{1,3}...",
                    "posLine2": "             ^^",
                    "type": "charOrSet",
                  },
                  Object {
                    "data": Object {
                      "maxCount": 3,
                      "maxOrMinCount": true,
                      "minCount": 1,
                      "wrappedHandler": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "negate": false,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 57,
                                  "type": "lessOrEqual",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 48,
                                    "type": "moreOrEqual",
                                  },
                                  "type": "lastComparison",
                                },
                                "type": "comparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
                            "posLine2": "             ^^^^^",
                            "type": "charOrSet",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0006",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              48,
                              49,
                              50,
                              51,
                              52,
                              53,
                              54,
                              55,
                              56,
                              57,
                            ],
                            "negate": false,
                          },
                          "groups": Array [],
                          "maxCharLength": 1,
                          "minCharLength": 1,
                        },
                      },
                    },
                    "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,...",
                    "posLine2": "             ^^^^^^^^^^",
                    "type": "nonBacktrackingQuantifier",
                  },
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 46,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                    "posLine2": "             ^^",
                    "type": "charOrSet",
                  },
                  Object {
                    "data": Object {
                      "maxCount": 3,
                      "maxOrMinCount": true,
                      "minCount": 1,
                      "wrappedHandler": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "negate": false,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 57,
                                  "type": "lessOrEqual",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 48,
                                    "type": "moreOrEqual",
                                  },
                                  "type": "lastComparison",
                                },
                                "type": "comparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                            "posLine2": "             ^^^^^",
                            "type": "charOrSet",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0005",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              48,
                              49,
                              50,
                              51,
                              52,
                              53,
                              54,
                              55,
                              56,
                              57,
                            ],
                            "negate": false,
                          },
                          "groups": Array [],
                          "maxCharLength": 1,
                          "minCharLength": 1,
                        },
                      },
                    },
                    "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                    "posLine2": "             ^^^^^^^^^^",
                    "type": "nonBacktrackingQuantifier",
                  },
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 46,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                    "posLine2": "             ^^",
                    "type": "charOrSet",
                  },
                  Object {
                    "data": Object {
                      "maxCount": 3,
                      "maxOrMinCount": true,
                      "minCount": 1,
                      "wrappedHandler": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "negate": false,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 57,
                                  "type": "lessOrEqual",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 48,
                                    "type": "moreOrEqual",
                                  },
                                  "type": "lastComparison",
                                },
                                "type": "comparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                            "posLine2": "             ^^^^^",
                            "type": "charOrSet",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0004",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              48,
                              49,
                              50,
                              51,
                              52,
                              53,
                              54,
                              55,
                              56,
                              57,
                            ],
                            "negate": false,
                          },
                          "groups": Array [],
                          "maxCharLength": 1,
                          "minCharLength": 1,
                        },
                      },
                    },
                    "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                    "posLine2": "             ^^^^^^^^^^",
                    "type": "nonBacktrackingQuantifier",
                  },
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 46,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                    "posLine2": "             ^^",
                    "type": "charOrSet",
                  },
                  Object {
                    "data": Object {
                      "maxCount": 3,
                      "maxOrMinCount": true,
                      "minCount": 1,
                      "wrappedHandler": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "negate": false,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 57,
                                  "type": "lessOrEqual",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 48,
                                    "type": "moreOrEqual",
                                  },
                                  "type": "lastComparison",
                                },
                                "type": "comparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
                            "posLine2": "             ^^^^^",
                            "type": "charOrSet",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0003",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              48,
                              49,
                              50,
                              51,
                              52,
                              53,
                              54,
                              55,
                              56,
                              57,
                            ],
                            "negate": false,
                          },
                          "groups": Array [],
                          "maxCharLength": 1,
                          "minCharLength": 1,
                        },
                      },
                    },
                    "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA...",
                    "posLine2": "             ^^^^^^^^^^",
                    "type": "nonBacktrackingQuantifier",
                  },
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 93,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...[0-9]{1,3}])|(([a-zA-...",
                    "posLine2": "             ^",
                    "type": "charOrSet",
                  },
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 64,
                        "idx": 5,
                      },
                    },
                    "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "groupEndMarker",
                  },
                ],
                "followUp": Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "groupReference": Object {
                          "astStart": 63,
                          "idx": 4,
                        },
                      },
                      "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "groupEndMarker",
                    },
                    Object {
                      "data": Object {},
                      "posLine1": "...A-Z]{2,}))$/",
                      "posLine2": "             ^",
                      "type": "endAnchor",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0001",
                  "lastAtomReturns": false,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [],
                      "negate": false,
                    },
                    "groups": Array [
                      Object {
                        "astStart": 63,
                        "idx": 4,
                      },
                    ],
                    "maxCharLength": 0,
                    "minCharLength": 0,
                  },
                },
                "functionName": "fiber0002",
                "lastAtomReturns": false,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      91,
                    ],
                    "negate": false,
                  },
                  "groups": Array [
                    Object {
                      "astStart": 63,
                      "idx": 4,
                    },
                    Object {
                      "astStart": 64,
                      "idx": 5,
                    },
                  ],
                  "maxCharLength": 17,
                  "minCharLength": 9,
                },
              },
              Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 116,
                        "idx": 6,
                      },
                    },
                    "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "groupStartMarker",
                  },
                  Object {
                    "data": Object {
                      "functionName": "greedyQuantifier0010",
                      "maxOrMinCount": true,
                      "quantifierCounterIndex": 0,
                    },
                    "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
                    "type": "quantifierStarter",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0012",
                "lastAtomReturns": true,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      45,
                      48,
                      49,
                      50,
                      51,
                      52,
                      53,
                      54,
                      55,
                      56,
                      57,
                      65,
                      66,
                      67,
                      68,
                      69,
                      70,
                      71,
                      72,
                      73,
                      74,
                      75,
                      76,
                      77,
                      78,
                      79,
                      80,
                      81,
                      82,
                      83,
                      84,
                      85,
                      86,
                      87,
                      88,
                      89,
                      90,
                      97,
                      98,
                      99,
                      100,
                      101,
                      102,
                      103,
                      104,
                      105,
                      106,
                      107,
                      108,
                      109,
                      110,
                      111,
                      112,
                      113,
                      114,
                      115,
                      116,
                      117,
                      118,
                      119,
                      120,
                      121,
                      122,
                    ],
                    "negate": false,
                  },
                  "groups": Array [
                    Object {
                      "astStart": 63,
                      "idx": 4,
                    },
                    Object {
                      "astStart": 116,
                      "idx": 6,
                    },
                    Object {
                      "astStart": 117,
                      "idx": 7,
                    },
                  ],
                  "maxCharLength": "Infinity",
                  "minCharLength": 4,
                },
              },
            ],
            "groupsToRestore": Array [
              Object {
                "astStart": 63,
                "idx": 4,
              },
              Object {
                "astStart": 64,
                "idx": 5,
              },
              Object {
                "astStart": 116,
                "idx": 6,
              },
              Object {
                "astStart": 117,
                "idx": 7,
              },
            ],
          },
          "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "disjunction",
        },
      ],
      "followUp": null,
      "functionName": "fiber0013",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            64,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 2,
            "idx": 0,
          },
          Object {
            "astStart": 63,
            "idx": 4,
          },
          Object {
            "astStart": 64,
            "idx": 5,
          },
          Object {
            "astStart": 116,
            "idx": 6,
          },
          Object {
            "astStart": 117,
            "idx": 7,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 5,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 3,
              "idx": 1,
            },
          },
          "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@(...",
          "posLine2": "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": true,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 64,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 8233,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 8287,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue1": 12288,
                              "comparisonValue2": 65279,
                              "type": "equalOneOfTwo",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue1": 8239,
                              "comparisonValue2": 8287,
                              "type": "equalOneOfTwo",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 5760,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 8202,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 8232,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 8192,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 160,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 5760,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 93,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 160,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 91,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 44,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 60,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue1": 62,
                              "comparisonValue2": 64,
                              "type": "equalOneOfTwo",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 46,
                              "type": "equal",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 58,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "type": "true",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 34,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 41,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 44,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 40,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 32,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 34,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 13,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 32,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 9,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()...",
                  "posLine2": "    ^^^^^^^^^^^^^^^^^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0017",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    9,
                    10,
                    11,
                    12,
                    13,
                    32,
                    34,
                    40,
                    41,
                    44,
                    46,
                    58,
                    59,
                    60,
                    62,
                    64,
                    91,
                    92,
                    93,
                    160,
                    5760,
                    8192,
                    8193,
                    8194,
                    8195,
                    8196,
                    8197,
                    8198,
                    8199,
                    8200,
                    8201,
                    8202,
                    8232,
                    8233,
                    8239,
                    8287,
                    12288,
                    65279,
                  ],
                  "negate": true,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\...",
          "posLine2": "    ^^^^^^^^^^^^^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "maxOrMinCount": false,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 26,
                      "idx": 2,
                    },
                  },
                  "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))...",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 46,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]...",
                  "posLine2": "             ^^",
                  "type": "charOrSet",
                },
                Object {
                  "data": Object {
                    "maxOrMinCount": true,
                    "minCount": 1,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": true,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 64,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 8233,
                                  "type": "lessOrEqual",
                                },
                                "comparisonFalse": Object {
                                  "comparison": Object {
                                    "comparisonValue": 8287,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue1": 12288,
                                      "comparisonValue2": 65279,
                                      "type": "equalOneOfTwo",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue1": 8239,
                                      "comparisonValue2": 8287,
                                      "type": "equalOneOfTwo",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 5760,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 8202,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 8232,
                                        "type": "moreOrEqual",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 8192,
                                        "type": "moreOrEqual",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 160,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 5760,
                                        "type": "equal",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 93,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 160,
                                          "type": "equal",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 91,
                                          "type": "moreOrEqual",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "type": "comparison",
                                },
                                "type": "comparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 44,
                                  "type": "lessOrEqual",
                                },
                                "comparisonFalse": Object {
                                  "comparison": Object {
                                    "comparisonValue": 60,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue1": 62,
                                      "comparisonValue2": 64,
                                      "type": "equalOneOfTwo",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 46,
                                      "type": "equal",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 58,
                                        "type": "moreOrEqual",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "type": "true",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "type": "comparison",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 34,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 41,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 44,
                                        "type": "equal",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 40,
                                        "type": "moreOrEqual",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 32,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 34,
                                        "type": "equal",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 13,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 32,
                                          "type": "equal",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 9,
                                          "type": "moreOrEqual",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "type": "comparison",
                                },
                                "type": "comparison",
                              },
                              "type": "comparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "...:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"...",
                          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0016",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            9,
                            10,
                            11,
                            12,
                            13,
                            32,
                            34,
                            40,
                            41,
                            44,
                            46,
                            58,
                            59,
                            60,
                            62,
                            64,
                            91,
                            92,
                            93,
                            160,
                            5760,
                            8192,
                            8193,
                            8194,
                            8195,
                            8196,
                            8197,
                            8198,
                            8199,
                            8200,
                            8201,
                            8202,
                            8232,
                            8233,
                            8239,
                            8287,
                            12288,
                            65279,
                          ],
                          "negate": true,
                        },
                        "groups": Array [],
                        "maxCharLength": 1,
                        "minCharLength": 1,
                      },
                    },
                  },
                  "posLine1": "...:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\")...",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "nonBacktrackingQuantifier",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 26,
                      "idx": 2,
                    },
                  },
                  "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))...",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "groupEndMarker",
                },
              ],
              "followUp": null,
              "functionName": "fiber0015",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    46,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 26,
                    "idx": 2,
                  },
                ],
                "maxCharLength": "Infinity",
                "minCharLength": 2,
              },
            },
          },
          "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 3,
              "idx": 1,
            },
          },
          "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@(...",
          "posLine2": "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 2,
                "idx": 0,
              },
            },
            "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
            "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 64,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "...*)|(\\".+\\"))@((\\\\[[0-9]{...",
            "posLine2": "             ^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 63,
                "idx": 4,
              },
            },
            "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "alternatives": Array [
                Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "groupReference": Object {
                          "astStart": 64,
                          "idx": 5,
                        },
                      },
                      "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "groupStartMarker",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 91,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...(\\".+\\"))@((\\\\[[0-9]{1,3}...",
                      "posLine2": "             ^^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "maxCount": 3,
                        "maxOrMinCount": true,
                        "minCount": 1,
                        "wrappedHandler": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 57,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 48,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
                              "posLine2": "             ^^^^^",
                              "type": "charOrSet",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0006",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                              ],
                              "negate": false,
                            },
                            "groups": Array [],
                            "maxCharLength": 1,
                            "minCharLength": 1,
                          },
                        },
                      },
                      "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,...",
                      "posLine2": "             ^^^^^^^^^^",
                      "type": "nonBacktrackingQuantifier",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 46,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                      "posLine2": "             ^^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "maxCount": 3,
                        "maxOrMinCount": true,
                        "minCount": 1,
                        "wrappedHandler": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 57,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 48,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                              "posLine2": "             ^^^^^",
                              "type": "charOrSet",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0005",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                              ],
                              "negate": false,
                            },
                            "groups": Array [],
                            "maxCharLength": 1,
                            "minCharLength": 1,
                          },
                        },
                      },
                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                      "posLine2": "             ^^^^^^^^^^",
                      "type": "nonBacktrackingQuantifier",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 46,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                      "posLine2": "             ^^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "maxCount": 3,
                        "maxOrMinCount": true,
                        "minCount": 1,
                        "wrappedHandler": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 57,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 48,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                              "posLine2": "             ^^^^^",
                              "type": "charOrSet",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0004",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                              ],
                              "negate": false,
                            },
                            "groups": Array [],
                            "maxCharLength": 1,
                            "minCharLength": 1,
                          },
                        },
                      },
                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                      "posLine2": "             ^^^^^^^^^^",
                      "type": "nonBacktrackingQuantifier",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 46,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                      "posLine2": "             ^^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "maxCount": 3,
                        "maxOrMinCount": true,
                        "minCount": 1,
                        "wrappedHandler": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 57,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 48,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
                              "posLine2": "             ^^^^^",
                              "type": "charOrSet",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0003",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                              ],
                              "negate": false,
                            },
                            "groups": Array [],
                            "maxCharLength": 1,
                            "minCharLength": 1,
                          },
                        },
                      },
                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA...",
                      "posLine2": "             ^^^^^^^^^^",
                      "type": "nonBacktrackingQuantifier",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 93,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...[0-9]{1,3}])|(([a-zA-...",
                      "posLine2": "             ^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "groupReference": Object {
                          "astStart": 64,
                          "idx": 5,
                        },
                      },
                      "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "groupEndMarker",
                    },
                  ],
                  "followUp": Object {
                    "atoms": Array [
                      Object {
                        "data": Object {
                          "groupReference": Object {
                            "astStart": 63,
                            "idx": 4,
                          },
                        },
                        "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                        "type": "groupEndMarker",
                      },
                      Object {
                        "data": Object {},
                        "posLine1": "...A-Z]{2,}))$/",
                        "posLine2": "             ^",
                        "type": "endAnchor",
                      },
                    ],
                    "followUp": null,
                    "functionName": "fiber0001",
                    "lastAtomReturns": false,
                    "meta": Object {
                      "firstCharRange": Object {
                        "chars": Array [],
                        "negate": false,
                      },
                      "groups": Array [
                        Object {
                          "astStart": 63,
                          "idx": 4,
                        },
                      ],
                      "maxCharLength": 0,
                      "minCharLength": 0,
                    },
                  },
                  "functionName": "fiber0002",
                  "lastAtomReturns": false,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        91,
                      ],
                      "negate": false,
                    },
                    "groups": Array [
                      Object {
                        "astStart": 63,
                        "idx": 4,
                      },
                      Object {
                        "astStart": 64,
                        "idx": 5,
                      },
                    ],
                    "maxCharLength": 17,
                    "minCharLength": 9,
                  },
                },
                Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "groupReference": Object {
                          "astStart": 116,
                          "idx": 6,
                        },
                      },
                      "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "groupStartMarker",
                    },
                    Object {
                      "data": Object {
                        "functionName": "greedyQuantifier0010",
                        "maxOrMinCount": true,
                        "quantifierCounterIndex": 0,
                      },
                      "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
                      "type": "quantifierStarter",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0012",
                  "lastAtomReturns": true,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        45,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                      ],
                      "negate": false,
                    },
                    "groups": Array [
                      Object {
                        "astStart": 63,
                        "idx": 4,
                      },
                      Object {
                        "astStart": 116,
                        "idx": 6,
                      },
                      Object {
                        "astStart": 117,
                        "idx": 7,
                      },
                    ],
                    "maxCharLength": "Infinity",
                    "minCharLength": 4,
                  },
                },
              ],
              "groupsToRestore": Array [
                Object {
                  "astStart": 63,
                  "idx": 4,
                },
                Object {
                  "astStart": 64,
                  "idx": 5,
                },
                Object {
                  "astStart": 116,
                  "idx": 6,
                },
                Object {
                  "astStart": 117,
                  "idx": 7,
                },
              ],
            },
            "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "disjunction",
          },
        ],
        "followUp": null,
        "functionName": "fiber0013",
        "lastAtomReturns": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              64,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 2,
              "idx": 0,
            },
            Object {
              "astStart": 63,
              "idx": 4,
            },
            Object {
              "astStart": 64,
              "idx": 5,
            },
            Object {
              "astStart": 116,
              "idx": 6,
            },
            Object {
              "astStart": 117,
              "idx": 7,
            },
          ],
          "maxCharLength": "Infinity",
          "minCharLength": 5,
        },
      },
      "functionName": "fiber0014",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            9,
            10,
            11,
            12,
            13,
            32,
            34,
            40,
            41,
            44,
            46,
            58,
            59,
            60,
            62,
            64,
            91,
            92,
            93,
            160,
            5760,
            8192,
            8193,
            8194,
            8195,
            8196,
            8197,
            8198,
            8199,
            8200,
            8201,
            8202,
            8232,
            8233,
            8239,
            8287,
            12288,
            65279,
          ],
          "negate": true,
        },
        "groups": Array [
          Object {
            "astStart": 2,
            "idx": 0,
          },
          Object {
            "astStart": 3,
            "idx": 1,
          },
          Object {
            "astStart": 63,
            "idx": 4,
          },
          Object {
            "astStart": 64,
            "idx": 5,
          },
          Object {
            "astStart": 116,
            "idx": 6,
          },
          Object {
            "astStart": 117,
            "idx": 7,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 6,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 26,
              "idx": 2,
            },
          },
          "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": true,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 64,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 8233,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 8287,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue1": 12288,
                              "comparisonValue2": 65279,
                              "type": "equalOneOfTwo",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue1": 8239,
                              "comparisonValue2": 8287,
                              "type": "equalOneOfTwo",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 5760,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 8202,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 8232,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 8192,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 160,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 5760,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 93,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 160,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 91,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 44,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 60,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue1": 62,
                              "comparisonValue2": 64,
                              "type": "equalOneOfTwo",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 46,
                              "type": "equal",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 58,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "type": "true",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 34,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 41,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 44,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 40,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 32,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 34,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 13,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 32,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 9,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"...",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0016",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    9,
                    10,
                    11,
                    12,
                    13,
                    32,
                    34,
                    40,
                    41,
                    44,
                    46,
                    58,
                    59,
                    60,
                    62,
                    64,
                    91,
                    92,
                    93,
                    160,
                    5760,
                    8192,
                    8193,
                    8194,
                    8195,
                    8196,
                    8197,
                    8198,
                    8199,
                    8200,
                    8201,
                    8202,
                    8232,
                    8233,
                    8239,
                    8287,
                    12288,
                    65279,
                  ],
                  "negate": true,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\")...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 26,
              "idx": 2,
            },
          },
          "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0015",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            46,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 26,
            "idx": 2,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 2,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 64,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 8287,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue1": 12288,
                      "comparisonValue2": 65279,
                      "type": "equalOneOfTwo",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue1": 8239,
                      "comparisonValue2": 8287,
                      "type": "equalOneOfTwo",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 5760,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 8202,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 8232,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 8192,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 160,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 5760,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 93,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 160,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 91,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 44,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 60,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue1": 62,
                      "comparisonValue2": 64,
                      "type": "equalOneOfTwo",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 46,
                      "type": "equal",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 58,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "type": "true",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 34,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 41,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 44,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 40,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 32,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 34,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 13,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 32,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 9,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0016",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            9,
            10,
            11,
            12,
            13,
            32,
            34,
            40,
            41,
            44,
            46,
            58,
            59,
            60,
            62,
            64,
            91,
            92,
            93,
            160,
            5760,
            8192,
            8193,
            8194,
            8195,
            8196,
            8197,
            8198,
            8199,
            8200,
            8201,
            8202,
            8232,
            8233,
            8239,
            8287,
            12288,
            65279,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 64,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 8287,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue1": 12288,
                      "comparisonValue2": 65279,
                      "type": "equalOneOfTwo",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue1": 8239,
                      "comparisonValue2": 8287,
                      "type": "equalOneOfTwo",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 5760,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 8202,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 8232,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 8192,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 160,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 5760,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 93,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 160,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 91,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 44,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 60,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue1": 62,
                      "comparisonValue2": 64,
                      "type": "equalOneOfTwo",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 46,
                      "type": "equal",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 58,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "type": "true",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 34,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 41,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 44,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 40,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 32,
                      "type": "lessOrEqual",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 34,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "comparisonValue": 13,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 32,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 9,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()...",
          "posLine2": "    ^^^^^^^^^^^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0017",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            9,
            10,
            11,
            12,
            13,
            32,
            34,
            40,
            41,
            44,
            46,
            58,
            59,
            60,
            62,
            64,
            91,
            92,
            93,
            160,
            5760,
            8192,
            8193,
            8194,
            8195,
            8196,
            8197,
            8198,
            8199,
            8200,
            8201,
            8202,
            8232,
            8233,
            8239,
            8287,
            12288,
            65279,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 34,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...]+)*)|(\\".+\\"))@((\\\\[[0-...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 55,
              "idx": 3,
            },
          },
          "posLine1": "...\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9...",
          "posLine2": "             ^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 2,
                "idx": 0,
              },
            },
            "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
            "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
          Object {
            "data": Object {
              "negate": false,
              "tree": Object {
                "comparison": Object {
                  "comparisonValue": 64,
                  "type": "equal",
                },
                "type": "lastComparison",
              },
              "unicode": false,
            },
            "posLine1": "...*)|(\\".+\\"))@((\\\\[[0-9]{...",
            "posLine2": "             ^",
            "type": "charOrSet",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 63,
                "idx": 4,
              },
            },
            "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "groupStartMarker",
          },
          Object {
            "data": Object {
              "alternatives": Array [
                Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "groupReference": Object {
                          "astStart": 64,
                          "idx": 5,
                        },
                      },
                      "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "groupStartMarker",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 91,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...(\\".+\\"))@((\\\\[[0-9]{1,3}...",
                      "posLine2": "             ^^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "maxCount": 3,
                        "maxOrMinCount": true,
                        "minCount": 1,
                        "wrappedHandler": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 57,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 48,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
                              "posLine2": "             ^^^^^",
                              "type": "charOrSet",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0006",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                              ],
                              "negate": false,
                            },
                            "groups": Array [],
                            "maxCharLength": 1,
                            "minCharLength": 1,
                          },
                        },
                      },
                      "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,...",
                      "posLine2": "             ^^^^^^^^^^",
                      "type": "nonBacktrackingQuantifier",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 46,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                      "posLine2": "             ^^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "maxCount": 3,
                        "maxOrMinCount": true,
                        "minCount": 1,
                        "wrappedHandler": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 57,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 48,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                              "posLine2": "             ^^^^^",
                              "type": "charOrSet",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0005",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                              ],
                              "negate": false,
                            },
                            "groups": Array [],
                            "maxCharLength": 1,
                            "minCharLength": 1,
                          },
                        },
                      },
                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                      "posLine2": "             ^^^^^^^^^^",
                      "type": "nonBacktrackingQuantifier",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 46,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                      "posLine2": "             ^^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "maxCount": 3,
                        "maxOrMinCount": true,
                        "minCount": 1,
                        "wrappedHandler": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 57,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 48,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                              "posLine2": "             ^^^^^",
                              "type": "charOrSet",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0004",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                              ],
                              "negate": false,
                            },
                            "groups": Array [],
                            "maxCharLength": 1,
                            "minCharLength": 1,
                          },
                        },
                      },
                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                      "posLine2": "             ^^^^^^^^^^",
                      "type": "nonBacktrackingQuantifier",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 46,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                      "posLine2": "             ^^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "maxCount": 3,
                        "maxOrMinCount": true,
                        "minCount": 1,
                        "wrappedHandler": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 57,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 48,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
                              "posLine2": "             ^^^^^",
                              "type": "charOrSet",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0003",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                              ],
                              "negate": false,
                            },
                            "groups": Array [],
                            "maxCharLength": 1,
                            "minCharLength": 1,
                          },
                        },
                      },
                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA...",
                      "posLine2": "             ^^^^^^^^^^",
                      "type": "nonBacktrackingQuantifier",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 93,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...[0-9]{1,3}])|(([a-zA-...",
                      "posLine2": "             ^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "groupReference": Object {
                          "astStart": 64,
                          "idx": 5,
                        },
                      },
                      "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "groupEndMarker",
                    },
                  ],
                  "followUp": Object {
                    "atoms": Array [
                      Object {
                        "data": Object {
                          "groupReference": Object {
                            "astStart": 63,
                            "idx": 4,
                          },
                        },
                        "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                        "type": "groupEndMarker",
                      },
                      Object {
                        "data": Object {},
                        "posLine1": "...A-Z]{2,}))$/",
                        "posLine2": "             ^",
                        "type": "endAnchor",
                      },
                    ],
                    "followUp": null,
                    "functionName": "fiber0001",
                    "lastAtomReturns": false,
                    "meta": Object {
                      "firstCharRange": Object {
                        "chars": Array [],
                        "negate": false,
                      },
                      "groups": Array [
                        Object {
                          "astStart": 63,
                          "idx": 4,
                        },
                      ],
                      "maxCharLength": 0,
                      "minCharLength": 0,
                    },
                  },
                  "functionName": "fiber0002",
                  "lastAtomReturns": false,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        91,
                      ],
                      "negate": false,
                    },
                    "groups": Array [
                      Object {
                        "astStart": 63,
                        "idx": 4,
                      },
                      Object {
                        "astStart": 64,
                        "idx": 5,
                      },
                    ],
                    "maxCharLength": 17,
                    "minCharLength": 9,
                  },
                },
                Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "groupReference": Object {
                          "astStart": 116,
                          "idx": 6,
                        },
                      },
                      "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "groupStartMarker",
                    },
                    Object {
                      "data": Object {
                        "functionName": "greedyQuantifier0010",
                        "maxOrMinCount": true,
                        "quantifierCounterIndex": 0,
                      },
                      "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
                      "type": "quantifierStarter",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0012",
                  "lastAtomReturns": true,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        45,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                      ],
                      "negate": false,
                    },
                    "groups": Array [
                      Object {
                        "astStart": 63,
                        "idx": 4,
                      },
                      Object {
                        "astStart": 116,
                        "idx": 6,
                      },
                      Object {
                        "astStart": 117,
                        "idx": 7,
                      },
                    ],
                    "maxCharLength": "Infinity",
                    "minCharLength": 4,
                  },
                },
              ],
              "groupsToRestore": Array [
                Object {
                  "astStart": 63,
                  "idx": 4,
                },
                Object {
                  "astStart": 64,
                  "idx": 5,
                },
                Object {
                  "astStart": 116,
                  "idx": 6,
                },
                Object {
                  "astStart": 117,
                  "idx": 7,
                },
              ],
            },
            "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "disjunction",
          },
        ],
        "followUp": null,
        "functionName": "fiber0013",
        "lastAtomReturns": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              64,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 2,
              "idx": 0,
            },
            Object {
              "astStart": 63,
              "idx": 4,
            },
            Object {
              "astStart": 64,
              "idx": 5,
            },
            Object {
              "astStart": 116,
              "idx": 6,
            },
            Object {
              "astStart": 117,
              "idx": 7,
            },
          ],
          "maxCharLength": "Infinity",
          "minCharLength": 5,
        },
      },
      "functionName": "fiber0018",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            34,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 2,
            "idx": 0,
          },
          Object {
            "astStart": 55,
            "idx": 3,
          },
          Object {
            "astStart": 63,
            "idx": 4,
          },
          Object {
            "astStart": 64,
            "idx": 5,
          },
          Object {
            "astStart": 116,
            "idx": 6,
          },
          Object {
            "astStart": 117,
            "idx": 7,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 6,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": true,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 13,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 8233,
                  "type": "lessOrEqual",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 8232,
                    "type": "moreOrEqual",
                  },
                  "type": "lastComparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue1": 10,
                  "comparisonValue2": 13,
                  "type": "equalOneOfTwo",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...@\\"]+)*)|(\\".+\\"))@((\\\\[[...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0019",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            10,
            13,
            8232,
            8233,
          ],
          "negate": true,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 55,
              "idx": 3,
            },
          },
          "posLine1": "...\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9...",
          "posLine2": "             ^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 34,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...s@\\"]+)*)|(\\".+\\"))@((\\\\[...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "fixedLength": 1,
            "followUp": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 34,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...]+)*)|(\\".+\\"))@((\\\\[[0-...",
                  "posLine2": "             ^",
                  "type": "charOrSet",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 55,
                      "idx": 3,
                    },
                  },
                  "posLine1": "...\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9...",
                  "posLine2": "             ^^^^^^",
                  "type": "groupEndMarker",
                },
              ],
              "followUp": Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 2,
                        "idx": 0,
                      },
                    },
                    "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
                    "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "groupEndMarker",
                  },
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 64,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...*)|(\\".+\\"))@((\\\\[[0-9]{...",
                    "posLine2": "             ^",
                    "type": "charOrSet",
                  },
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 63,
                        "idx": 4,
                      },
                    },
                    "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "groupStartMarker",
                  },
                  Object {
                    "data": Object {
                      "alternatives": Array [
                        Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 64,
                                  "idx": 5,
                                },
                              },
                              "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupStartMarker",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 91,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...(\\".+\\"))@((\\\\[[0-9]{1,3}...",
                              "posLine2": "             ^^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "maxCount": 3,
                                "maxOrMinCount": true,
                                "minCount": 1,
                                "wrappedHandler": Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 57,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 48,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
                                      "posLine2": "             ^^^^^",
                                      "type": "charOrSet",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0006",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [],
                                    "maxCharLength": 1,
                                    "minCharLength": 1,
                                  },
                                },
                              },
                              "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,...",
                              "posLine2": "             ^^^^^^^^^^",
                              "type": "nonBacktrackingQuantifier",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 46,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                              "posLine2": "             ^^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "maxCount": 3,
                                "maxOrMinCount": true,
                                "minCount": 1,
                                "wrappedHandler": Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 57,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 48,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                      "posLine2": "             ^^^^^",
                                      "type": "charOrSet",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0005",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [],
                                    "maxCharLength": 1,
                                    "minCharLength": 1,
                                  },
                                },
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                              "posLine2": "             ^^^^^^^^^^",
                              "type": "nonBacktrackingQuantifier",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 46,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                              "posLine2": "             ^^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "maxCount": 3,
                                "maxOrMinCount": true,
                                "minCount": 1,
                                "wrappedHandler": Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 57,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 48,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                      "posLine2": "             ^^^^^",
                                      "type": "charOrSet",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0004",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [],
                                    "maxCharLength": 1,
                                    "minCharLength": 1,
                                  },
                                },
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                              "posLine2": "             ^^^^^^^^^^",
                              "type": "nonBacktrackingQuantifier",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 46,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                              "posLine2": "             ^^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "maxCount": 3,
                                "maxOrMinCount": true,
                                "minCount": 1,
                                "wrappedHandler": Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 57,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 48,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
                                      "posLine2": "             ^^^^^",
                                      "type": "charOrSet",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0003",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [],
                                    "maxCharLength": 1,
                                    "minCharLength": 1,
                                  },
                                },
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA...",
                              "posLine2": "             ^^^^^^^^^^",
                              "type": "nonBacktrackingQuantifier",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 93,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...[0-9]{1,3}])|(([a-zA-...",
                              "posLine2": "             ^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 64,
                                  "idx": 5,
                                },
                              },
                              "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupEndMarker",
                            },
                          ],
                          "followUp": Object {
                            "atoms": Array [
                              Object {
                                "data": Object {
                                  "groupReference": Object {
                                    "astStart": 63,
                                    "idx": 4,
                                  },
                                },
                                "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                                "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                "type": "groupEndMarker",
                              },
                              Object {
                                "data": Object {},
                                "posLine1": "...A-Z]{2,}))$/",
                                "posLine2": "             ^",
                                "type": "endAnchor",
                              },
                            ],
                            "followUp": null,
                            "functionName": "fiber0001",
                            "lastAtomReturns": false,
                            "meta": Object {
                              "firstCharRange": Object {
                                "chars": Array [],
                                "negate": false,
                              },
                              "groups": Array [
                                Object {
                                  "astStart": 63,
                                  "idx": 4,
                                },
                              ],
                              "maxCharLength": 0,
                              "minCharLength": 0,
                            },
                          },
                          "functionName": "fiber0002",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                91,
                              ],
                              "negate": false,
                            },
                            "groups": Array [
                              Object {
                                "astStart": 63,
                                "idx": 4,
                              },
                              Object {
                                "astStart": 64,
                                "idx": 5,
                              },
                            ],
                            "maxCharLength": 17,
                            "minCharLength": 9,
                          },
                        },
                        Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 116,
                                  "idx": 6,
                                },
                              },
                              "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupStartMarker",
                            },
                            Object {
                              "data": Object {
                                "functionName": "greedyQuantifier0010",
                                "maxOrMinCount": true,
                                "quantifierCounterIndex": 0,
                              },
                              "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
                              "type": "quantifierStarter",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0012",
                          "lastAtomReturns": true,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                45,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                87,
                                88,
                                89,
                                90,
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108,
                                109,
                                110,
                                111,
                                112,
                                113,
                                114,
                                115,
                                116,
                                117,
                                118,
                                119,
                                120,
                                121,
                                122,
                              ],
                              "negate": false,
                            },
                            "groups": Array [
                              Object {
                                "astStart": 63,
                                "idx": 4,
                              },
                              Object {
                                "astStart": 116,
                                "idx": 6,
                              },
                              Object {
                                "astStart": 117,
                                "idx": 7,
                              },
                            ],
                            "maxCharLength": "Infinity",
                            "minCharLength": 4,
                          },
                        },
                      ],
                      "groupsToRestore": Array [
                        Object {
                          "astStart": 63,
                          "idx": 4,
                        },
                        Object {
                          "astStart": 64,
                          "idx": 5,
                        },
                        Object {
                          "astStart": 116,
                          "idx": 6,
                        },
                        Object {
                          "astStart": 117,
                          "idx": 7,
                        },
                      ],
                    },
                    "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "disjunction",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0013",
                "lastAtomReturns": true,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      64,
                    ],
                    "negate": false,
                  },
                  "groups": Array [
                    Object {
                      "astStart": 2,
                      "idx": 0,
                    },
                    Object {
                      "astStart": 63,
                      "idx": 4,
                    },
                    Object {
                      "astStart": 64,
                      "idx": 5,
                    },
                    Object {
                      "astStart": 116,
                      "idx": 6,
                    },
                    Object {
                      "astStart": 117,
                      "idx": 7,
                    },
                  ],
                  "maxCharLength": "Infinity",
                  "minCharLength": 5,
                },
              },
              "functionName": "fiber0018",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    34,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 2,
                    "idx": 0,
                  },
                  Object {
                    "astStart": 55,
                    "idx": 3,
                  },
                  Object {
                    "astStart": 63,
                    "idx": 4,
                  },
                  Object {
                    "astStart": 64,
                    "idx": 5,
                  },
                  Object {
                    "astStart": 116,
                    "idx": 6,
                  },
                  Object {
                    "astStart": 117,
                    "idx": 7,
                  },
                ],
                "maxCharLength": "Infinity",
                "minCharLength": 6,
              },
            },
            "maxOrMinCount": true,
            "minCount": 1,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": true,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 13,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 8233,
                          "type": "lessOrEqual",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 8232,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue1": 10,
                          "comparisonValue2": 13,
                          "type": "equalOneOfTwo",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...@\\"]+)*)|(\\".+\\"))@((\\\\[[...",
                  "posLine2": "             ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0019",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    10,
                    13,
                    8232,
                    8233,
                  ],
                  "negate": true,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...@\\"]+)*)|(\\".+\\"))@((\\\\[[0...",
          "posLine2": "             ^^",
          "type": "backtrackingFixedLengthQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0020",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            34,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 2,
            "idx": 0,
          },
          Object {
            "astStart": 55,
            "idx": 3,
          },
          Object {
            "astStart": 63,
            "idx": 4,
          },
          Object {
            "astStart": 64,
            "idx": 5,
          },
          Object {
            "astStart": 116,
            "idx": 6,
          },
          Object {
            "astStart": 117,
            "idx": 7,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 2,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {},
          "posLine1": "/^(([^<>()\\\\[...",
          "posLine2": " ^",
          "type": "startAnchor",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 2,
              "idx": 0,
            },
          },
          "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
          "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "alternatives": Array [
              Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 3,
                        "idx": 1,
                      },
                    },
                    "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@(...",
                    "posLine2": "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "groupStartMarker",
                  },
                  Object {
                    "data": Object {
                      "maxOrMinCount": true,
                      "minCount": 1,
                      "wrappedHandler": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "negate": true,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 64,
                                  "type": "lessOrEqual",
                                },
                                "comparisonFalse": Object {
                                  "comparison": Object {
                                    "comparisonValue": 8233,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 8287,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue1": 12288,
                                        "comparisonValue2": 65279,
                                        "type": "equalOneOfTwo",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue1": 8239,
                                        "comparisonValue2": 8287,
                                        "type": "equalOneOfTwo",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 5760,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 8202,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 8232,
                                          "type": "moreOrEqual",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 8192,
                                          "type": "moreOrEqual",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 160,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 5760,
                                          "type": "equal",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 93,
                                          "type": "lessOrEqual",
                                        },
                                        "comparisonFalse": Object {
                                          "comparison": Object {
                                            "comparisonValue": 160,
                                            "type": "equal",
                                          },
                                          "type": "lastComparison",
                                        },
                                        "comparisonTrue": Object {
                                          "comparison": Object {
                                            "comparisonValue": 91,
                                            "type": "moreOrEqual",
                                          },
                                          "type": "lastComparison",
                                        },
                                        "type": "comparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "type": "comparison",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 44,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 60,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue1": 62,
                                        "comparisonValue2": 64,
                                        "type": "equalOneOfTwo",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 46,
                                        "type": "equal",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 58,
                                          "type": "moreOrEqual",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "type": "true",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 34,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 41,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 44,
                                          "type": "equal",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 40,
                                          "type": "moreOrEqual",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 32,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 34,
                                          "type": "equal",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 13,
                                          "type": "lessOrEqual",
                                        },
                                        "comparisonFalse": Object {
                                          "comparison": Object {
                                            "comparisonValue": 32,
                                            "type": "equal",
                                          },
                                          "type": "lastComparison",
                                        },
                                        "comparisonTrue": Object {
                                          "comparison": Object {
                                            "comparisonValue": 9,
                                            "type": "moreOrEqual",
                                          },
                                          "type": "lastComparison",
                                        },
                                        "type": "comparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "type": "comparison",
                                },
                                "type": "comparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()...",
                            "posLine2": "    ^^^^^^^^^^^^^^^^^^^^^",
                            "type": "charOrSet",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0017",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              9,
                              10,
                              11,
                              12,
                              13,
                              32,
                              34,
                              40,
                              41,
                              44,
                              46,
                              58,
                              59,
                              60,
                              62,
                              64,
                              91,
                              92,
                              93,
                              160,
                              5760,
                              8192,
                              8193,
                              8194,
                              8195,
                              8196,
                              8197,
                              8198,
                              8199,
                              8200,
                              8201,
                              8202,
                              8232,
                              8233,
                              8239,
                              8287,
                              12288,
                              65279,
                            ],
                            "negate": true,
                          },
                          "groups": Array [],
                          "maxCharLength": 1,
                          "minCharLength": 1,
                        },
                      },
                    },
                    "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\...",
                    "posLine2": "    ^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "nonBacktrackingQuantifier",
                  },
                  Object {
                    "data": Object {
                      "maxOrMinCount": false,
                      "wrappedHandler": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "groupReference": Object {
                                "astStart": 26,
                                "idx": 2,
                              },
                            },
                            "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))...",
                            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                            "type": "groupStartMarker",
                          },
                          Object {
                            "data": Object {
                              "negate": false,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 46,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "...,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]...",
                            "posLine2": "             ^^",
                            "type": "charOrSet",
                          },
                          Object {
                            "data": Object {
                              "maxOrMinCount": true,
                              "minCount": 1,
                              "wrappedHandler": Object {
                                "atoms": Array [
                                  Object {
                                    "data": Object {
                                      "negate": true,
                                      "tree": Object {
                                        "comparison": Object {
                                          "comparisonValue": 64,
                                          "type": "lessOrEqual",
                                        },
                                        "comparisonFalse": Object {
                                          "comparison": Object {
                                            "comparisonValue": 8233,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 8287,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue1": 12288,
                                                "comparisonValue2": 65279,
                                                "type": "equalOneOfTwo",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue1": 8239,
                                                "comparisonValue2": 8287,
                                                "type": "equalOneOfTwo",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 5760,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 8202,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 8232,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 8192,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 160,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 5760,
                                                  "type": "equal",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 93,
                                                  "type": "lessOrEqual",
                                                },
                                                "comparisonFalse": Object {
                                                  "comparison": Object {
                                                    "comparisonValue": 160,
                                                    "type": "equal",
                                                  },
                                                  "type": "lastComparison",
                                                },
                                                "comparisonTrue": Object {
                                                  "comparison": Object {
                                                    "comparisonValue": 91,
                                                    "type": "moreOrEqual",
                                                  },
                                                  "type": "lastComparison",
                                                },
                                                "type": "comparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "comparisonTrue": Object {
                                          "comparison": Object {
                                            "comparisonValue": 44,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 60,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue1": 62,
                                                "comparisonValue2": 64,
                                                "type": "equalOneOfTwo",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 46,
                                                "type": "equal",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 58,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "type": "true",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 34,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 41,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 44,
                                                  "type": "equal",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 40,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 32,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 34,
                                                  "type": "equal",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 13,
                                                  "type": "lessOrEqual",
                                                },
                                                "comparisonFalse": Object {
                                                  "comparison": Object {
                                                    "comparisonValue": 32,
                                                    "type": "equal",
                                                  },
                                                  "type": "lastComparison",
                                                },
                                                "comparisonTrue": Object {
                                                  "comparison": Object {
                                                    "comparisonValue": 9,
                                                    "type": "moreOrEqual",
                                                  },
                                                  "type": "lastComparison",
                                                },
                                                "type": "comparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "type": "comparison",
                                      },
                                      "unicode": false,
                                    },
                                    "posLine1": "...:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"...",
                                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^",
                                    "type": "charOrSet",
                                  },
                                ],
                                "followUp": null,
                                "functionName": "fiber0016",
                                "lastAtomReturns": false,
                                "meta": Object {
                                  "firstCharRange": Object {
                                    "chars": Array [
                                      9,
                                      10,
                                      11,
                                      12,
                                      13,
                                      32,
                                      34,
                                      40,
                                      41,
                                      44,
                                      46,
                                      58,
                                      59,
                                      60,
                                      62,
                                      64,
                                      91,
                                      92,
                                      93,
                                      160,
                                      5760,
                                      8192,
                                      8193,
                                      8194,
                                      8195,
                                      8196,
                                      8197,
                                      8198,
                                      8199,
                                      8200,
                                      8201,
                                      8202,
                                      8232,
                                      8233,
                                      8239,
                                      8287,
                                      12288,
                                      65279,
                                    ],
                                    "negate": true,
                                  },
                                  "groups": Array [],
                                  "maxCharLength": 1,
                                  "minCharLength": 1,
                                },
                              },
                            },
                            "posLine1": "...:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\")...",
                            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^",
                            "type": "nonBacktrackingQuantifier",
                          },
                          Object {
                            "data": Object {
                              "groupReference": Object {
                                "astStart": 26,
                                "idx": 2,
                              },
                            },
                            "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))...",
                            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                            "type": "groupEndMarker",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0015",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              46,
                            ],
                            "negate": false,
                          },
                          "groups": Array [
                            Object {
                              "astStart": 26,
                              "idx": 2,
                            },
                          ],
                          "maxCharLength": "Infinity",
                          "minCharLength": 2,
                        },
                      },
                    },
                    "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@...",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "nonBacktrackingQuantifier",
                  },
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 3,
                        "idx": 1,
                      },
                    },
                    "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@(...",
                    "posLine2": "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "groupEndMarker",
                  },
                ],
                "followUp": Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "groupReference": Object {
                          "astStart": 2,
                          "idx": 0,
                        },
                      },
                      "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
                      "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "groupEndMarker",
                    },
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 64,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...*)|(\\".+\\"))@((\\\\[[0-9]{...",
                      "posLine2": "             ^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "groupReference": Object {
                          "astStart": 63,
                          "idx": 4,
                        },
                      },
                      "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "groupStartMarker",
                    },
                    Object {
                      "data": Object {
                        "alternatives": Array [
                          Object {
                            "atoms": Array [
                              Object {
                                "data": Object {
                                  "groupReference": Object {
                                    "astStart": 64,
                                    "idx": 5,
                                  },
                                },
                                "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                                "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                "type": "groupStartMarker",
                              },
                              Object {
                                "data": Object {
                                  "negate": false,
                                  "tree": Object {
                                    "comparison": Object {
                                      "comparisonValue": 91,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "unicode": false,
                                },
                                "posLine1": "...(\\".+\\"))@((\\\\[[0-9]{1,3}...",
                                "posLine2": "             ^^",
                                "type": "charOrSet",
                              },
                              Object {
                                "data": Object {
                                  "maxCount": 3,
                                  "maxOrMinCount": true,
                                  "minCount": 1,
                                  "wrappedHandler": Object {
                                    "atoms": Array [
                                      Object {
                                        "data": Object {
                                          "negate": false,
                                          "tree": Object {
                                            "comparison": Object {
                                              "comparisonValue": 57,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 48,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "unicode": false,
                                        },
                                        "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
                                        "posLine2": "             ^^^^^",
                                        "type": "charOrSet",
                                      },
                                    ],
                                    "followUp": null,
                                    "functionName": "fiber0006",
                                    "lastAtomReturns": false,
                                    "meta": Object {
                                      "firstCharRange": Object {
                                        "chars": Array [
                                          48,
                                          49,
                                          50,
                                          51,
                                          52,
                                          53,
                                          54,
                                          55,
                                          56,
                                          57,
                                        ],
                                        "negate": false,
                                      },
                                      "groups": Array [],
                                      "maxCharLength": 1,
                                      "minCharLength": 1,
                                    },
                                  },
                                },
                                "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,...",
                                "posLine2": "             ^^^^^^^^^^",
                                "type": "nonBacktrackingQuantifier",
                              },
                              Object {
                                "data": Object {
                                  "negate": false,
                                  "tree": Object {
                                    "comparison": Object {
                                      "comparisonValue": 46,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "unicode": false,
                                },
                                "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                                "posLine2": "             ^^",
                                "type": "charOrSet",
                              },
                              Object {
                                "data": Object {
                                  "maxCount": 3,
                                  "maxOrMinCount": true,
                                  "minCount": 1,
                                  "wrappedHandler": Object {
                                    "atoms": Array [
                                      Object {
                                        "data": Object {
                                          "negate": false,
                                          "tree": Object {
                                            "comparison": Object {
                                              "comparisonValue": 57,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 48,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "unicode": false,
                                        },
                                        "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                        "posLine2": "             ^^^^^",
                                        "type": "charOrSet",
                                      },
                                    ],
                                    "followUp": null,
                                    "functionName": "fiber0005",
                                    "lastAtomReturns": false,
                                    "meta": Object {
                                      "firstCharRange": Object {
                                        "chars": Array [
                                          48,
                                          49,
                                          50,
                                          51,
                                          52,
                                          53,
                                          54,
                                          55,
                                          56,
                                          57,
                                        ],
                                        "negate": false,
                                      },
                                      "groups": Array [],
                                      "maxCharLength": 1,
                                      "minCharLength": 1,
                                    },
                                  },
                                },
                                "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                                "posLine2": "             ^^^^^^^^^^",
                                "type": "nonBacktrackingQuantifier",
                              },
                              Object {
                                "data": Object {
                                  "negate": false,
                                  "tree": Object {
                                    "comparison": Object {
                                      "comparisonValue": 46,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "unicode": false,
                                },
                                "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                                "posLine2": "             ^^",
                                "type": "charOrSet",
                              },
                              Object {
                                "data": Object {
                                  "maxCount": 3,
                                  "maxOrMinCount": true,
                                  "minCount": 1,
                                  "wrappedHandler": Object {
                                    "atoms": Array [
                                      Object {
                                        "data": Object {
                                          "negate": false,
                                          "tree": Object {
                                            "comparison": Object {
                                              "comparisonValue": 57,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 48,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "unicode": false,
                                        },
                                        "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                        "posLine2": "             ^^^^^",
                                        "type": "charOrSet",
                                      },
                                    ],
                                    "followUp": null,
                                    "functionName": "fiber0004",
                                    "lastAtomReturns": false,
                                    "meta": Object {
                                      "firstCharRange": Object {
                                        "chars": Array [
                                          48,
                                          49,
                                          50,
                                          51,
                                          52,
                                          53,
                                          54,
                                          55,
                                          56,
                                          57,
                                        ],
                                        "negate": false,
                                      },
                                      "groups": Array [],
                                      "maxCharLength": 1,
                                      "minCharLength": 1,
                                    },
                                  },
                                },
                                "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                                "posLine2": "             ^^^^^^^^^^",
                                "type": "nonBacktrackingQuantifier",
                              },
                              Object {
                                "data": Object {
                                  "negate": false,
                                  "tree": Object {
                                    "comparison": Object {
                                      "comparisonValue": 46,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "unicode": false,
                                },
                                "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                                "posLine2": "             ^^",
                                "type": "charOrSet",
                              },
                              Object {
                                "data": Object {
                                  "maxCount": 3,
                                  "maxOrMinCount": true,
                                  "minCount": 1,
                                  "wrappedHandler": Object {
                                    "atoms": Array [
                                      Object {
                                        "data": Object {
                                          "negate": false,
                                          "tree": Object {
                                            "comparison": Object {
                                              "comparisonValue": 57,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 48,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "unicode": false,
                                        },
                                        "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
                                        "posLine2": "             ^^^^^",
                                        "type": "charOrSet",
                                      },
                                    ],
                                    "followUp": null,
                                    "functionName": "fiber0003",
                                    "lastAtomReturns": false,
                                    "meta": Object {
                                      "firstCharRange": Object {
                                        "chars": Array [
                                          48,
                                          49,
                                          50,
                                          51,
                                          52,
                                          53,
                                          54,
                                          55,
                                          56,
                                          57,
                                        ],
                                        "negate": false,
                                      },
                                      "groups": Array [],
                                      "maxCharLength": 1,
                                      "minCharLength": 1,
                                    },
                                  },
                                },
                                "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA...",
                                "posLine2": "             ^^^^^^^^^^",
                                "type": "nonBacktrackingQuantifier",
                              },
                              Object {
                                "data": Object {
                                  "negate": false,
                                  "tree": Object {
                                    "comparison": Object {
                                      "comparisonValue": 93,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "unicode": false,
                                },
                                "posLine1": "...[0-9]{1,3}])|(([a-zA-...",
                                "posLine2": "             ^",
                                "type": "charOrSet",
                              },
                              Object {
                                "data": Object {
                                  "groupReference": Object {
                                    "astStart": 64,
                                    "idx": 5,
                                  },
                                },
                                "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                                "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                "type": "groupEndMarker",
                              },
                            ],
                            "followUp": Object {
                              "atoms": Array [
                                Object {
                                  "data": Object {
                                    "groupReference": Object {
                                      "astStart": 63,
                                      "idx": 4,
                                    },
                                  },
                                  "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                  "type": "groupEndMarker",
                                },
                                Object {
                                  "data": Object {},
                                  "posLine1": "...A-Z]{2,}))$/",
                                  "posLine2": "             ^",
                                  "type": "endAnchor",
                                },
                              ],
                              "followUp": null,
                              "functionName": "fiber0001",
                              "lastAtomReturns": false,
                              "meta": Object {
                                "firstCharRange": Object {
                                  "chars": Array [],
                                  "negate": false,
                                },
                                "groups": Array [
                                  Object {
                                    "astStart": 63,
                                    "idx": 4,
                                  },
                                ],
                                "maxCharLength": 0,
                                "minCharLength": 0,
                              },
                            },
                            "functionName": "fiber0002",
                            "lastAtomReturns": false,
                            "meta": Object {
                              "firstCharRange": Object {
                                "chars": Array [
                                  91,
                                ],
                                "negate": false,
                              },
                              "groups": Array [
                                Object {
                                  "astStart": 63,
                                  "idx": 4,
                                },
                                Object {
                                  "astStart": 64,
                                  "idx": 5,
                                },
                              ],
                              "maxCharLength": 17,
                              "minCharLength": 9,
                            },
                          },
                          Object {
                            "atoms": Array [
                              Object {
                                "data": Object {
                                  "groupReference": Object {
                                    "astStart": 116,
                                    "idx": 6,
                                  },
                                },
                                "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                                "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                "type": "groupStartMarker",
                              },
                              Object {
                                "data": Object {
                                  "functionName": "greedyQuantifier0010",
                                  "maxOrMinCount": true,
                                  "quantifierCounterIndex": 0,
                                },
                                "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
                                "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
                                "type": "quantifierStarter",
                              },
                            ],
                            "followUp": null,
                            "functionName": "fiber0012",
                            "lastAtomReturns": true,
                            "meta": Object {
                              "firstCharRange": Object {
                                "chars": Array [
                                  45,
                                  48,
                                  49,
                                  50,
                                  51,
                                  52,
                                  53,
                                  54,
                                  55,
                                  56,
                                  57,
                                  65,
                                  66,
                                  67,
                                  68,
                                  69,
                                  70,
                                  71,
                                  72,
                                  73,
                                  74,
                                  75,
                                  76,
                                  77,
                                  78,
                                  79,
                                  80,
                                  81,
                                  82,
                                  83,
                                  84,
                                  85,
                                  86,
                                  87,
                                  88,
                                  89,
                                  90,
                                  97,
                                  98,
                                  99,
                                  100,
                                  101,
                                  102,
                                  103,
                                  104,
                                  105,
                                  106,
                                  107,
                                  108,
                                  109,
                                  110,
                                  111,
                                  112,
                                  113,
                                  114,
                                  115,
                                  116,
                                  117,
                                  118,
                                  119,
                                  120,
                                  121,
                                  122,
                                ],
                                "negate": false,
                              },
                              "groups": Array [
                                Object {
                                  "astStart": 63,
                                  "idx": 4,
                                },
                                Object {
                                  "astStart": 116,
                                  "idx": 6,
                                },
                                Object {
                                  "astStart": 117,
                                  "idx": 7,
                                },
                              ],
                              "maxCharLength": "Infinity",
                              "minCharLength": 4,
                            },
                          },
                        ],
                        "groupsToRestore": Array [
                          Object {
                            "astStart": 63,
                            "idx": 4,
                          },
                          Object {
                            "astStart": 64,
                            "idx": 5,
                          },
                          Object {
                            "astStart": 116,
                            "idx": 6,
                          },
                          Object {
                            "astStart": 117,
                            "idx": 7,
                          },
                        ],
                      },
                      "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "disjunction",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0013",
                  "lastAtomReturns": true,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        64,
                      ],
                      "negate": false,
                    },
                    "groups": Array [
                      Object {
                        "astStart": 2,
                        "idx": 0,
                      },
                      Object {
                        "astStart": 63,
                        "idx": 4,
                      },
                      Object {
                        "astStart": 64,
                        "idx": 5,
                      },
                      Object {
                        "astStart": 116,
                        "idx": 6,
                      },
                      Object {
                        "astStart": 117,
                        "idx": 7,
                      },
                    ],
                    "maxCharLength": "Infinity",
                    "minCharLength": 5,
                  },
                },
                "functionName": "fiber0014",
                "lastAtomReturns": false,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      9,
                      10,
                      11,
                      12,
                      13,
                      32,
                      34,
                      40,
                      41,
                      44,
                      46,
                      58,
                      59,
                      60,
                      62,
                      64,
                      91,
                      92,
                      93,
                      160,
                      5760,
                      8192,
                      8193,
                      8194,
                      8195,
                      8196,
                      8197,
                      8198,
                      8199,
                      8200,
                      8201,
                      8202,
                      8232,
                      8233,
                      8239,
                      8287,
                      12288,
                      65279,
                    ],
                    "negate": true,
                  },
                  "groups": Array [
                    Object {
                      "astStart": 2,
                      "idx": 0,
                    },
                    Object {
                      "astStart": 3,
                      "idx": 1,
                    },
                    Object {
                      "astStart": 63,
                      "idx": 4,
                    },
                    Object {
                      "astStart": 64,
                      "idx": 5,
                    },
                    Object {
                      "astStart": 116,
                      "idx": 6,
                    },
                    Object {
                      "astStart": 117,
                      "idx": 7,
                    },
                  ],
                  "maxCharLength": "Infinity",
                  "minCharLength": 6,
                },
              },
              Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 55,
                        "idx": 3,
                      },
                    },
                    "posLine1": "...\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9...",
                    "posLine2": "             ^^^^^^",
                    "type": "groupStartMarker",
                  },
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 34,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...s@\\"]+)*)|(\\".+\\"))@((\\\\[...",
                    "posLine2": "             ^",
                    "type": "charOrSet",
                  },
                  Object {
                    "data": Object {
                      "fixedLength": 1,
                      "followUp": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "negate": false,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 34,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "...]+)*)|(\\".+\\"))@((\\\\[[0-...",
                            "posLine2": "             ^",
                            "type": "charOrSet",
                          },
                          Object {
                            "data": Object {
                              "groupReference": Object {
                                "astStart": 55,
                                "idx": 3,
                              },
                            },
                            "posLine1": "...\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9...",
                            "posLine2": "             ^^^^^^",
                            "type": "groupEndMarker",
                          },
                        ],
                        "followUp": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 2,
                                  "idx": 0,
                                },
                              },
                              "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
                              "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupEndMarker",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 64,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...*)|(\\".+\\"))@((\\\\[[0-9]{...",
                              "posLine2": "             ^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 63,
                                  "idx": 4,
                                },
                              },
                              "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupStartMarker",
                            },
                            Object {
                              "data": Object {
                                "alternatives": Array [
                                  Object {
                                    "atoms": Array [
                                      Object {
                                        "data": Object {
                                          "groupReference": Object {
                                            "astStart": 64,
                                            "idx": 5,
                                          },
                                        },
                                        "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                                        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                        "type": "groupStartMarker",
                                      },
                                      Object {
                                        "data": Object {
                                          "negate": false,
                                          "tree": Object {
                                            "comparison": Object {
                                              "comparisonValue": 91,
                                              "type": "equal",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "unicode": false,
                                        },
                                        "posLine1": "...(\\".+\\"))@((\\\\[[0-9]{1,3}...",
                                        "posLine2": "             ^^",
                                        "type": "charOrSet",
                                      },
                                      Object {
                                        "data": Object {
                                          "maxCount": 3,
                                          "maxOrMinCount": true,
                                          "minCount": 1,
                                          "wrappedHandler": Object {
                                            "atoms": Array [
                                              Object {
                                                "data": Object {
                                                  "negate": false,
                                                  "tree": Object {
                                                    "comparison": Object {
                                                      "comparisonValue": 57,
                                                      "type": "lessOrEqual",
                                                    },
                                                    "comparisonTrue": Object {
                                                      "comparison": Object {
                                                        "comparisonValue": 48,
                                                        "type": "moreOrEqual",
                                                      },
                                                      "type": "lastComparison",
                                                    },
                                                    "type": "comparison",
                                                  },
                                                  "unicode": false,
                                                },
                                                "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
                                                "posLine2": "             ^^^^^",
                                                "type": "charOrSet",
                                              },
                                            ],
                                            "followUp": null,
                                            "functionName": "fiber0006",
                                            "lastAtomReturns": false,
                                            "meta": Object {
                                              "firstCharRange": Object {
                                                "chars": Array [
                                                  48,
                                                  49,
                                                  50,
                                                  51,
                                                  52,
                                                  53,
                                                  54,
                                                  55,
                                                  56,
                                                  57,
                                                ],
                                                "negate": false,
                                              },
                                              "groups": Array [],
                                              "maxCharLength": 1,
                                              "minCharLength": 1,
                                            },
                                          },
                                        },
                                        "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,...",
                                        "posLine2": "             ^^^^^^^^^^",
                                        "type": "nonBacktrackingQuantifier",
                                      },
                                      Object {
                                        "data": Object {
                                          "negate": false,
                                          "tree": Object {
                                            "comparison": Object {
                                              "comparisonValue": 46,
                                              "type": "equal",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "unicode": false,
                                        },
                                        "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                                        "posLine2": "             ^^",
                                        "type": "charOrSet",
                                      },
                                      Object {
                                        "data": Object {
                                          "maxCount": 3,
                                          "maxOrMinCount": true,
                                          "minCount": 1,
                                          "wrappedHandler": Object {
                                            "atoms": Array [
                                              Object {
                                                "data": Object {
                                                  "negate": false,
                                                  "tree": Object {
                                                    "comparison": Object {
                                                      "comparisonValue": 57,
                                                      "type": "lessOrEqual",
                                                    },
                                                    "comparisonTrue": Object {
                                                      "comparison": Object {
                                                        "comparisonValue": 48,
                                                        "type": "moreOrEqual",
                                                      },
                                                      "type": "lastComparison",
                                                    },
                                                    "type": "comparison",
                                                  },
                                                  "unicode": false,
                                                },
                                                "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                                "posLine2": "             ^^^^^",
                                                "type": "charOrSet",
                                              },
                                            ],
                                            "followUp": null,
                                            "functionName": "fiber0005",
                                            "lastAtomReturns": false,
                                            "meta": Object {
                                              "firstCharRange": Object {
                                                "chars": Array [
                                                  48,
                                                  49,
                                                  50,
                                                  51,
                                                  52,
                                                  53,
                                                  54,
                                                  55,
                                                  56,
                                                  57,
                                                ],
                                                "negate": false,
                                              },
                                              "groups": Array [],
                                              "maxCharLength": 1,
                                              "minCharLength": 1,
                                            },
                                          },
                                        },
                                        "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                                        "posLine2": "             ^^^^^^^^^^",
                                        "type": "nonBacktrackingQuantifier",
                                      },
                                      Object {
                                        "data": Object {
                                          "negate": false,
                                          "tree": Object {
                                            "comparison": Object {
                                              "comparisonValue": 46,
                                              "type": "equal",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "unicode": false,
                                        },
                                        "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                                        "posLine2": "             ^^",
                                        "type": "charOrSet",
                                      },
                                      Object {
                                        "data": Object {
                                          "maxCount": 3,
                                          "maxOrMinCount": true,
                                          "minCount": 1,
                                          "wrappedHandler": Object {
                                            "atoms": Array [
                                              Object {
                                                "data": Object {
                                                  "negate": false,
                                                  "tree": Object {
                                                    "comparison": Object {
                                                      "comparisonValue": 57,
                                                      "type": "lessOrEqual",
                                                    },
                                                    "comparisonTrue": Object {
                                                      "comparison": Object {
                                                        "comparisonValue": 48,
                                                        "type": "moreOrEqual",
                                                      },
                                                      "type": "lastComparison",
                                                    },
                                                    "type": "comparison",
                                                  },
                                                  "unicode": false,
                                                },
                                                "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                                "posLine2": "             ^^^^^",
                                                "type": "charOrSet",
                                              },
                                            ],
                                            "followUp": null,
                                            "functionName": "fiber0004",
                                            "lastAtomReturns": false,
                                            "meta": Object {
                                              "firstCharRange": Object {
                                                "chars": Array [
                                                  48,
                                                  49,
                                                  50,
                                                  51,
                                                  52,
                                                  53,
                                                  54,
                                                  55,
                                                  56,
                                                  57,
                                                ],
                                                "negate": false,
                                              },
                                              "groups": Array [],
                                              "maxCharLength": 1,
                                              "minCharLength": 1,
                                            },
                                          },
                                        },
                                        "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                                        "posLine2": "             ^^^^^^^^^^",
                                        "type": "nonBacktrackingQuantifier",
                                      },
                                      Object {
                                        "data": Object {
                                          "negate": false,
                                          "tree": Object {
                                            "comparison": Object {
                                              "comparisonValue": 46,
                                              "type": "equal",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "unicode": false,
                                        },
                                        "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                                        "posLine2": "             ^^",
                                        "type": "charOrSet",
                                      },
                                      Object {
                                        "data": Object {
                                          "maxCount": 3,
                                          "maxOrMinCount": true,
                                          "minCount": 1,
                                          "wrappedHandler": Object {
                                            "atoms": Array [
                                              Object {
                                                "data": Object {
                                                  "negate": false,
                                                  "tree": Object {
                                                    "comparison": Object {
                                                      "comparisonValue": 57,
                                                      "type": "lessOrEqual",
                                                    },
                                                    "comparisonTrue": Object {
                                                      "comparison": Object {
                                                        "comparisonValue": 48,
                                                        "type": "moreOrEqual",
                                                      },
                                                      "type": "lastComparison",
                                                    },
                                                    "type": "comparison",
                                                  },
                                                  "unicode": false,
                                                },
                                                "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
                                                "posLine2": "             ^^^^^",
                                                "type": "charOrSet",
                                              },
                                            ],
                                            "followUp": null,
                                            "functionName": "fiber0003",
                                            "lastAtomReturns": false,
                                            "meta": Object {
                                              "firstCharRange": Object {
                                                "chars": Array [
                                                  48,
                                                  49,
                                                  50,
                                                  51,
                                                  52,
                                                  53,
                                                  54,
                                                  55,
                                                  56,
                                                  57,
                                                ],
                                                "negate": false,
                                              },
                                              "groups": Array [],
                                              "maxCharLength": 1,
                                              "minCharLength": 1,
                                            },
                                          },
                                        },
                                        "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA...",
                                        "posLine2": "             ^^^^^^^^^^",
                                        "type": "nonBacktrackingQuantifier",
                                      },
                                      Object {
                                        "data": Object {
                                          "negate": false,
                                          "tree": Object {
                                            "comparison": Object {
                                              "comparisonValue": 93,
                                              "type": "equal",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "unicode": false,
                                        },
                                        "posLine1": "...[0-9]{1,3}])|(([a-zA-...",
                                        "posLine2": "             ^",
                                        "type": "charOrSet",
                                      },
                                      Object {
                                        "data": Object {
                                          "groupReference": Object {
                                            "astStart": 64,
                                            "idx": 5,
                                          },
                                        },
                                        "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                                        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                        "type": "groupEndMarker",
                                      },
                                    ],
                                    "followUp": Object {
                                      "atoms": Array [
                                        Object {
                                          "data": Object {
                                            "groupReference": Object {
                                              "astStart": 63,
                                              "idx": 4,
                                            },
                                          },
                                          "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                                          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                          "type": "groupEndMarker",
                                        },
                                        Object {
                                          "data": Object {},
                                          "posLine1": "...A-Z]{2,}))$/",
                                          "posLine2": "             ^",
                                          "type": "endAnchor",
                                        },
                                      ],
                                      "followUp": null,
                                      "functionName": "fiber0001",
                                      "lastAtomReturns": false,
                                      "meta": Object {
                                        "firstCharRange": Object {
                                          "chars": Array [],
                                          "negate": false,
                                        },
                                        "groups": Array [
                                          Object {
                                            "astStart": 63,
                                            "idx": 4,
                                          },
                                        ],
                                        "maxCharLength": 0,
                                        "minCharLength": 0,
                                      },
                                    },
                                    "functionName": "fiber0002",
                                    "lastAtomReturns": false,
                                    "meta": Object {
                                      "firstCharRange": Object {
                                        "chars": Array [
                                          91,
                                        ],
                                        "negate": false,
                                      },
                                      "groups": Array [
                                        Object {
                                          "astStart": 63,
                                          "idx": 4,
                                        },
                                        Object {
                                          "astStart": 64,
                                          "idx": 5,
                                        },
                                      ],
                                      "maxCharLength": 17,
                                      "minCharLength": 9,
                                    },
                                  },
                                  Object {
                                    "atoms": Array [
                                      Object {
                                        "data": Object {
                                          "groupReference": Object {
                                            "astStart": 116,
                                            "idx": 6,
                                          },
                                        },
                                        "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                                        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                        "type": "groupStartMarker",
                                      },
                                      Object {
                                        "data": Object {
                                          "functionName": "greedyQuantifier0010",
                                          "maxOrMinCount": true,
                                          "quantifierCounterIndex": 0,
                                        },
                                        "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
                                        "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
                                        "type": "quantifierStarter",
                                      },
                                    ],
                                    "followUp": null,
                                    "functionName": "fiber0012",
                                    "lastAtomReturns": true,
                                    "meta": Object {
                                      "firstCharRange": Object {
                                        "chars": Array [
                                          45,
                                          48,
                                          49,
                                          50,
                                          51,
                                          52,
                                          53,
                                          54,
                                          55,
                                          56,
                                          57,
                                          65,
                                          66,
                                          67,
                                          68,
                                          69,
                                          70,
                                          71,
                                          72,
                                          73,
                                          74,
                                          75,
                                          76,
                                          77,
                                          78,
                                          79,
                                          80,
                                          81,
                                          82,
                                          83,
                                          84,
                                          85,
                                          86,
                                          87,
                                          88,
                                          89,
                                          90,
                                          97,
                                          98,
                                          99,
                                          100,
                                          101,
                                          102,
                                          103,
                                          104,
                                          105,
                                          106,
                                          107,
                                          108,
                                          109,
                                          110,
                                          111,
                                          112,
                                          113,
                                          114,
                                          115,
                                          116,
                                          117,
                                          118,
                                          119,
                                          120,
                                          121,
                                          122,
                                        ],
                                        "negate": false,
                                      },
                                      "groups": Array [
                                        Object {
                                          "astStart": 63,
                                          "idx": 4,
                                        },
                                        Object {
                                          "astStart": 116,
                                          "idx": 6,
                                        },
                                        Object {
                                          "astStart": 117,
                                          "idx": 7,
                                        },
                                      ],
                                      "maxCharLength": "Infinity",
                                      "minCharLength": 4,
                                    },
                                  },
                                ],
                                "groupsToRestore": Array [
                                  Object {
                                    "astStart": 63,
                                    "idx": 4,
                                  },
                                  Object {
                                    "astStart": 64,
                                    "idx": 5,
                                  },
                                  Object {
                                    "astStart": 116,
                                    "idx": 6,
                                  },
                                  Object {
                                    "astStart": 117,
                                    "idx": 7,
                                  },
                                ],
                              },
                              "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "disjunction",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0013",
                          "lastAtomReturns": true,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                64,
                              ],
                              "negate": false,
                            },
                            "groups": Array [
                              Object {
                                "astStart": 2,
                                "idx": 0,
                              },
                              Object {
                                "astStart": 63,
                                "idx": 4,
                              },
                              Object {
                                "astStart": 64,
                                "idx": 5,
                              },
                              Object {
                                "astStart": 116,
                                "idx": 6,
                              },
                              Object {
                                "astStart": 117,
                                "idx": 7,
                              },
                            ],
                            "maxCharLength": "Infinity",
                            "minCharLength": 5,
                          },
                        },
                        "functionName": "fiber0018",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              34,
                            ],
                            "negate": false,
                          },
                          "groups": Array [
                            Object {
                              "astStart": 2,
                              "idx": 0,
                            },
                            Object {
                              "astStart": 55,
                              "idx": 3,
                            },
                            Object {
                              "astStart": 63,
                              "idx": 4,
                            },
                            Object {
                              "astStart": 64,
                              "idx": 5,
                            },
                            Object {
                              "astStart": 116,
                              "idx": 6,
                            },
                            Object {
                              "astStart": 117,
                              "idx": 7,
                            },
                          ],
                          "maxCharLength": "Infinity",
                          "minCharLength": 6,
                        },
                      },
                      "maxOrMinCount": true,
                      "minCount": 1,
                      "wrappedHandler": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "negate": true,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 13,
                                  "type": "lessOrEqual",
                                },
                                "comparisonFalse": Object {
                                  "comparison": Object {
                                    "comparisonValue": 8233,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 8232,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue1": 10,
                                    "comparisonValue2": 13,
                                    "type": "equalOneOfTwo",
                                  },
                                  "type": "lastComparison",
                                },
                                "type": "comparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "...@\\"]+)*)|(\\".+\\"))@((\\\\[[...",
                            "posLine2": "             ^",
                            "type": "charOrSet",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0019",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              10,
                              13,
                              8232,
                              8233,
                            ],
                            "negate": true,
                          },
                          "groups": Array [],
                          "maxCharLength": 1,
                          "minCharLength": 1,
                        },
                      },
                    },
                    "posLine1": "...@\\"]+)*)|(\\".+\\"))@((\\\\[[0...",
                    "posLine2": "             ^^",
                    "type": "backtrackingFixedLengthQuantifier",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0020",
                "lastAtomReturns": true,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      34,
                    ],
                    "negate": false,
                  },
                  "groups": Array [
                    Object {
                      "astStart": 2,
                      "idx": 0,
                    },
                    Object {
                      "astStart": 55,
                      "idx": 3,
                    },
                    Object {
                      "astStart": 63,
                      "idx": 4,
                    },
                    Object {
                      "astStart": 64,
                      "idx": 5,
                    },
                    Object {
                      "astStart": 116,
                      "idx": 6,
                    },
                    Object {
                      "astStart": 117,
                      "idx": 7,
                    },
                  ],
                  "maxCharLength": "Infinity",
                  "minCharLength": 2,
                },
              },
            ],
            "groupsToRestore": Array [
              Object {
                "astStart": 2,
                "idx": 0,
              },
              Object {
                "astStart": 3,
                "idx": 1,
              },
              Object {
                "astStart": 55,
                "idx": 3,
              },
              Object {
                "astStart": 63,
                "idx": 4,
              },
              Object {
                "astStart": 64,
                "idx": 5,
              },
              Object {
                "astStart": 116,
                "idx": 6,
              },
              Object {
                "astStart": 117,
                "idx": 7,
              },
            ],
          },
          "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
          "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "disjunction",
        },
      ],
      "followUp": null,
      "functionName": "fiber0021",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            9,
            10,
            11,
            12,
            13,
            32,
            40,
            41,
            44,
            46,
            58,
            59,
            60,
            62,
            64,
            91,
            92,
            93,
            160,
            5760,
            8192,
            8193,
            8194,
            8195,
            8196,
            8197,
            8198,
            8199,
            8200,
            8201,
            8202,
            8232,
            8233,
            8239,
            8287,
            12288,
            65279,
          ],
          "negate": true,
        },
        "groups": Array [
          Object {
            "astStart": 2,
            "idx": 0,
          },
          Object {
            "astStart": 3,
            "idx": 1,
          },
          Object {
            "astStart": 55,
            "idx": 3,
          },
          Object {
            "astStart": 63,
            "idx": 4,
          },
          Object {
            "astStart": 64,
            "idx": 5,
          },
          Object {
            "astStart": 116,
            "idx": 6,
          },
          Object {
            "astStart": 117,
            "idx": 7,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 2,
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "maxOrMinCount": true,
              "minCount": 2,
              "wrappedHandler": Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 90,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 122,
                            "type": "lessOrEqual",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 97,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 65,
                            "type": "moreOrEqual",
                          },
                          "type": "lastComparison",
                        },
                        "type": "comparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                    "posLine2": "             ^^^^^^^^",
                    "type": "charOrSet",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0008",
                "lastAtomReturns": false,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      65,
                      66,
                      67,
                      68,
                      69,
                      70,
                      71,
                      72,
                      73,
                      74,
                      75,
                      76,
                      77,
                      78,
                      79,
                      80,
                      81,
                      82,
                      83,
                      84,
                      85,
                      86,
                      87,
                      88,
                      89,
                      90,
                      97,
                      98,
                      99,
                      100,
                      101,
                      102,
                      103,
                      104,
                      105,
                      106,
                      107,
                      108,
                      109,
                      110,
                      111,
                      112,
                      113,
                      114,
                      115,
                      116,
                      117,
                      118,
                      119,
                      120,
                      121,
                      122,
                    ],
                    "negate": false,
                  },
                  "groups": Array [],
                  "maxCharLength": 1,
                  "minCharLength": 1,
                },
              },
            },
            "posLine1": "...-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
            "posLine2": "             ^^^^^^^^^^^^",
            "type": "nonBacktrackingQuantifier",
          },
          Object {
            "data": Object {
              "groupReference": Object {
                "astStart": 116,
                "idx": 6,
              },
            },
            "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "groupEndMarker",
          },
        ],
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "groupReference": Object {
                  "astStart": 63,
                  "idx": 4,
                },
              },
              "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
              "type": "groupEndMarker",
            },
            Object {
              "data": Object {},
              "posLine1": "...A-Z]{2,}))$/",
              "posLine2": "             ^",
              "type": "endAnchor",
            },
          ],
          "followUp": null,
          "functionName": "fiber0001",
          "lastAtomReturns": false,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 63,
                "idx": 4,
              },
            ],
            "maxCharLength": 0,
            "minCharLength": 0,
          },
        },
        "functionName": "fiber0007",
        "lastAtomReturns": false,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 63,
              "idx": 4,
            },
            Object {
              "astStart": 116,
              "idx": 6,
            },
          ],
          "maxCharLength": "Infinity",
          "minCharLength": 2,
        },
      },
      "functionName": "greedyQuantifier0010",
      "maxOrMinCount": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 63,
            "idx": 4,
          },
          Object {
            "astStart": 116,
            "idx": 6,
          },
          Object {
            "astStart": 117,
            "idx": 7,
          },
        ],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
      "minCount": 1,
      "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
      "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
      "quantifierCounterIndex": 0,
      "wrappedHandler": "[Circular]",
    },
  ],
  "groups": Array [
    Object {
      "astStart": 2,
      "idx": 0,
    },
    Object {
      "astStart": 3,
      "idx": 1,
    },
    Object {
      "astStart": 26,
      "idx": 2,
    },
    Object {
      "astStart": 55,
      "idx": 3,
    },
    Object {
      "astStart": 63,
      "idx": 4,
    },
    Object {
      "astStart": 64,
      "idx": 5,
    },
    Object {
      "astStart": 116,
      "idx": 6,
    },
    Object {
      "astStart": 117,
      "idx": 7,
    },
  ],
  "lazyQuantifierHandlers": Array [],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {},
        "posLine1": "/^(([^<>()\\\\[...",
        "posLine2": " ^",
        "type": "startAnchor",
      },
      Object {
        "data": Object {
          "groupReference": Object {
            "astStart": 2,
            "idx": 0,
          },
        },
        "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
        "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "type": "groupStartMarker",
      },
      Object {
        "data": Object {
          "alternatives": Array [
            Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 3,
                      "idx": 1,
                    },
                  },
                  "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@(...",
                  "posLine2": "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "maxOrMinCount": true,
                    "minCount": 1,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": true,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 64,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 8233,
                                  "type": "lessOrEqual",
                                },
                                "comparisonFalse": Object {
                                  "comparison": Object {
                                    "comparisonValue": 8287,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue1": 12288,
                                      "comparisonValue2": 65279,
                                      "type": "equalOneOfTwo",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue1": 8239,
                                      "comparisonValue2": 8287,
                                      "type": "equalOneOfTwo",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 5760,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 8202,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 8232,
                                        "type": "moreOrEqual",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 8192,
                                        "type": "moreOrEqual",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 160,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 5760,
                                        "type": "equal",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 93,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 160,
                                          "type": "equal",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 91,
                                          "type": "moreOrEqual",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "type": "comparison",
                                },
                                "type": "comparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 44,
                                  "type": "lessOrEqual",
                                },
                                "comparisonFalse": Object {
                                  "comparison": Object {
                                    "comparisonValue": 60,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue1": 62,
                                      "comparisonValue2": 64,
                                      "type": "equalOneOfTwo",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 46,
                                      "type": "equal",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 58,
                                        "type": "moreOrEqual",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "type": "true",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "type": "comparison",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 34,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 41,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 44,
                                        "type": "equal",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 40,
                                        "type": "moreOrEqual",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 32,
                                      "type": "lessOrEqual",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 34,
                                        "type": "equal",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "comparisonValue": 13,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 32,
                                          "type": "equal",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 9,
                                          "type": "moreOrEqual",
                                        },
                                        "type": "lastComparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "type": "comparison",
                                },
                                "type": "comparison",
                              },
                              "type": "comparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()...",
                          "posLine2": "    ^^^^^^^^^^^^^^^^^^^^^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0017",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            9,
                            10,
                            11,
                            12,
                            13,
                            32,
                            34,
                            40,
                            41,
                            44,
                            46,
                            58,
                            59,
                            60,
                            62,
                            64,
                            91,
                            92,
                            93,
                            160,
                            5760,
                            8192,
                            8193,
                            8194,
                            8195,
                            8196,
                            8197,
                            8198,
                            8199,
                            8200,
                            8201,
                            8202,
                            8232,
                            8233,
                            8239,
                            8287,
                            12288,
                            65279,
                          ],
                          "negate": true,
                        },
                        "groups": Array [],
                        "maxCharLength": 1,
                        "minCharLength": 1,
                      },
                    },
                  },
                  "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\...",
                  "posLine2": "    ^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "nonBacktrackingQuantifier",
                },
                Object {
                  "data": Object {
                    "maxOrMinCount": false,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "groupReference": Object {
                              "astStart": 26,
                              "idx": 2,
                            },
                          },
                          "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))...",
                          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                          "type": "groupStartMarker",
                        },
                        Object {
                          "data": Object {
                            "negate": false,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 46,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "...,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]...",
                          "posLine2": "             ^^",
                          "type": "charOrSet",
                        },
                        Object {
                          "data": Object {
                            "maxOrMinCount": true,
                            "minCount": 1,
                            "wrappedHandler": Object {
                              "atoms": Array [
                                Object {
                                  "data": Object {
                                    "negate": true,
                                    "tree": Object {
                                      "comparison": Object {
                                        "comparisonValue": 64,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 8233,
                                          "type": "lessOrEqual",
                                        },
                                        "comparisonFalse": Object {
                                          "comparison": Object {
                                            "comparisonValue": 8287,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue1": 12288,
                                              "comparisonValue2": 65279,
                                              "type": "equalOneOfTwo",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue1": 8239,
                                              "comparisonValue2": 8287,
                                              "type": "equalOneOfTwo",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "comparisonTrue": Object {
                                          "comparison": Object {
                                            "comparisonValue": 5760,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 8202,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 8232,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 8192,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 160,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 5760,
                                                "type": "equal",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 93,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 160,
                                                  "type": "equal",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 91,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "type": "comparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 44,
                                          "type": "lessOrEqual",
                                        },
                                        "comparisonFalse": Object {
                                          "comparison": Object {
                                            "comparisonValue": 60,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue1": 62,
                                              "comparisonValue2": 64,
                                              "type": "equalOneOfTwo",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 46,
                                              "type": "equal",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 58,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "type": "true",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "comparisonTrue": Object {
                                          "comparison": Object {
                                            "comparisonValue": 34,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 41,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 44,
                                                "type": "equal",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 40,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 32,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 34,
                                                "type": "equal",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 13,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 32,
                                                  "type": "equal",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 9,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "type": "comparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "unicode": false,
                                  },
                                  "posLine1": "...:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"...",
                                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^",
                                  "type": "charOrSet",
                                },
                              ],
                              "followUp": null,
                              "functionName": "fiber0016",
                              "lastAtomReturns": false,
                              "meta": Object {
                                "firstCharRange": Object {
                                  "chars": Array [
                                    9,
                                    10,
                                    11,
                                    12,
                                    13,
                                    32,
                                    34,
                                    40,
                                    41,
                                    44,
                                    46,
                                    58,
                                    59,
                                    60,
                                    62,
                                    64,
                                    91,
                                    92,
                                    93,
                                    160,
                                    5760,
                                    8192,
                                    8193,
                                    8194,
                                    8195,
                                    8196,
                                    8197,
                                    8198,
                                    8199,
                                    8200,
                                    8201,
                                    8202,
                                    8232,
                                    8233,
                                    8239,
                                    8287,
                                    12288,
                                    65279,
                                  ],
                                  "negate": true,
                                },
                                "groups": Array [],
                                "maxCharLength": 1,
                                "minCharLength": 1,
                              },
                            },
                          },
                          "posLine1": "...:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\")...",
                          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^",
                          "type": "nonBacktrackingQuantifier",
                        },
                        Object {
                          "data": Object {
                            "groupReference": Object {
                              "astStart": 26,
                              "idx": 2,
                            },
                          },
                          "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))...",
                          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                          "type": "groupEndMarker",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0015",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            46,
                          ],
                          "negate": false,
                        },
                        "groups": Array [
                          Object {
                            "astStart": 26,
                            "idx": 2,
                          },
                        ],
                        "maxCharLength": "Infinity",
                        "minCharLength": 2,
                      },
                    },
                  },
                  "posLine1": "....,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@...",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "nonBacktrackingQuantifier",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 3,
                      "idx": 1,
                    },
                  },
                  "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@(...",
                  "posLine2": "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "groupEndMarker",
                },
              ],
              "followUp": Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 2,
                        "idx": 0,
                      },
                    },
                    "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
                    "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "groupEndMarker",
                  },
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 64,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...*)|(\\".+\\"))@((\\\\[[0-9]{...",
                    "posLine2": "             ^",
                    "type": "charOrSet",
                  },
                  Object {
                    "data": Object {
                      "groupReference": Object {
                        "astStart": 63,
                        "idx": 4,
                      },
                    },
                    "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "groupStartMarker",
                  },
                  Object {
                    "data": Object {
                      "alternatives": Array [
                        Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 64,
                                  "idx": 5,
                                },
                              },
                              "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupStartMarker",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 91,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...(\\".+\\"))@((\\\\[[0-9]{1,3}...",
                              "posLine2": "             ^^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "maxCount": 3,
                                "maxOrMinCount": true,
                                "minCount": 1,
                                "wrappedHandler": Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 57,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 48,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
                                      "posLine2": "             ^^^^^",
                                      "type": "charOrSet",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0006",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [],
                                    "maxCharLength": 1,
                                    "minCharLength": 1,
                                  },
                                },
                              },
                              "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,...",
                              "posLine2": "             ^^^^^^^^^^",
                              "type": "nonBacktrackingQuantifier",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 46,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                              "posLine2": "             ^^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "maxCount": 3,
                                "maxOrMinCount": true,
                                "minCount": 1,
                                "wrappedHandler": Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 57,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 48,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                      "posLine2": "             ^^^^^",
                                      "type": "charOrSet",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0005",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [],
                                    "maxCharLength": 1,
                                    "minCharLength": 1,
                                  },
                                },
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                              "posLine2": "             ^^^^^^^^^^",
                              "type": "nonBacktrackingQuantifier",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 46,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                              "posLine2": "             ^^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "maxCount": 3,
                                "maxOrMinCount": true,
                                "minCount": 1,
                                "wrappedHandler": Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 57,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 48,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                      "posLine2": "             ^^^^^",
                                      "type": "charOrSet",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0004",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [],
                                    "maxCharLength": 1,
                                    "minCharLength": 1,
                                  },
                                },
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                              "posLine2": "             ^^^^^^^^^^",
                              "type": "nonBacktrackingQuantifier",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 46,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                              "posLine2": "             ^^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "maxCount": 3,
                                "maxOrMinCount": true,
                                "minCount": 1,
                                "wrappedHandler": Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 57,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 48,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
                                      "posLine2": "             ^^^^^",
                                      "type": "charOrSet",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0003",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [],
                                    "maxCharLength": 1,
                                    "minCharLength": 1,
                                  },
                                },
                              },
                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA...",
                              "posLine2": "             ^^^^^^^^^^",
                              "type": "nonBacktrackingQuantifier",
                            },
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 93,
                                    "type": "equal",
                                  },
                                  "type": "lastComparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...[0-9]{1,3}])|(([a-zA-...",
                              "posLine2": "             ^",
                              "type": "charOrSet",
                            },
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 64,
                                  "idx": 5,
                                },
                              },
                              "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupEndMarker",
                            },
                          ],
                          "followUp": Object {
                            "atoms": Array [
                              Object {
                                "data": Object {
                                  "groupReference": Object {
                                    "astStart": 63,
                                    "idx": 4,
                                  },
                                },
                                "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                                "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                "type": "groupEndMarker",
                              },
                              Object {
                                "data": Object {},
                                "posLine1": "...A-Z]{2,}))$/",
                                "posLine2": "             ^",
                                "type": "endAnchor",
                              },
                            ],
                            "followUp": null,
                            "functionName": "fiber0001",
                            "lastAtomReturns": false,
                            "meta": Object {
                              "firstCharRange": Object {
                                "chars": Array [],
                                "negate": false,
                              },
                              "groups": Array [
                                Object {
                                  "astStart": 63,
                                  "idx": 4,
                                },
                              ],
                              "maxCharLength": 0,
                              "minCharLength": 0,
                            },
                          },
                          "functionName": "fiber0002",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                91,
                              ],
                              "negate": false,
                            },
                            "groups": Array [
                              Object {
                                "astStart": 63,
                                "idx": 4,
                              },
                              Object {
                                "astStart": 64,
                                "idx": 5,
                              },
                            ],
                            "maxCharLength": 17,
                            "minCharLength": 9,
                          },
                        },
                        Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 116,
                                  "idx": 6,
                                },
                              },
                              "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupStartMarker",
                            },
                            Object {
                              "data": Object {
                                "functionName": "greedyQuantifier0010",
                                "maxOrMinCount": true,
                                "quantifierCounterIndex": 0,
                              },
                              "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
                              "type": "quantifierStarter",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0012",
                          "lastAtomReturns": true,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                45,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                87,
                                88,
                                89,
                                90,
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108,
                                109,
                                110,
                                111,
                                112,
                                113,
                                114,
                                115,
                                116,
                                117,
                                118,
                                119,
                                120,
                                121,
                                122,
                              ],
                              "negate": false,
                            },
                            "groups": Array [
                              Object {
                                "astStart": 63,
                                "idx": 4,
                              },
                              Object {
                                "astStart": 116,
                                "idx": 6,
                              },
                              Object {
                                "astStart": 117,
                                "idx": 7,
                              },
                            ],
                            "maxCharLength": "Infinity",
                            "minCharLength": 4,
                          },
                        },
                      ],
                      "groupsToRestore": Array [
                        Object {
                          "astStart": 63,
                          "idx": 4,
                        },
                        Object {
                          "astStart": 64,
                          "idx": 5,
                        },
                        Object {
                          "astStart": 116,
                          "idx": 6,
                        },
                        Object {
                          "astStart": 117,
                          "idx": 7,
                        },
                      ],
                    },
                    "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "disjunction",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0013",
                "lastAtomReturns": true,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      64,
                    ],
                    "negate": false,
                  },
                  "groups": Array [
                    Object {
                      "astStart": 2,
                      "idx": 0,
                    },
                    Object {
                      "astStart": 63,
                      "idx": 4,
                    },
                    Object {
                      "astStart": 64,
                      "idx": 5,
                    },
                    Object {
                      "astStart": 116,
                      "idx": 6,
                    },
                    Object {
                      "astStart": 117,
                      "idx": 7,
                    },
                  ],
                  "maxCharLength": "Infinity",
                  "minCharLength": 5,
                },
              },
              "functionName": "fiber0014",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    9,
                    10,
                    11,
                    12,
                    13,
                    32,
                    34,
                    40,
                    41,
                    44,
                    46,
                    58,
                    59,
                    60,
                    62,
                    64,
                    91,
                    92,
                    93,
                    160,
                    5760,
                    8192,
                    8193,
                    8194,
                    8195,
                    8196,
                    8197,
                    8198,
                    8199,
                    8200,
                    8201,
                    8202,
                    8232,
                    8233,
                    8239,
                    8287,
                    12288,
                    65279,
                  ],
                  "negate": true,
                },
                "groups": Array [
                  Object {
                    "astStart": 2,
                    "idx": 0,
                  },
                  Object {
                    "astStart": 3,
                    "idx": 1,
                  },
                  Object {
                    "astStart": 63,
                    "idx": 4,
                  },
                  Object {
                    "astStart": 64,
                    "idx": 5,
                  },
                  Object {
                    "astStart": 116,
                    "idx": 6,
                  },
                  Object {
                    "astStart": 117,
                    "idx": 7,
                  },
                ],
                "maxCharLength": "Infinity",
                "minCharLength": 6,
              },
            },
            Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 55,
                      "idx": 3,
                    },
                  },
                  "posLine1": "...\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9...",
                  "posLine2": "             ^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 34,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...s@\\"]+)*)|(\\".+\\"))@((\\\\[...",
                  "posLine2": "             ^",
                  "type": "charOrSet",
                },
                Object {
                  "data": Object {
                    "fixedLength": 1,
                    "followUp": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": false,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 34,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "...]+)*)|(\\".+\\"))@((\\\\[[0-...",
                          "posLine2": "             ^",
                          "type": "charOrSet",
                        },
                        Object {
                          "data": Object {
                            "groupReference": Object {
                              "astStart": 55,
                              "idx": 3,
                            },
                          },
                          "posLine1": "...\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9...",
                          "posLine2": "             ^^^^^^",
                          "type": "groupEndMarker",
                        },
                      ],
                      "followUp": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "groupReference": Object {
                                "astStart": 2,
                                "idx": 0,
                              },
                            },
                            "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
                            "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                            "type": "groupEndMarker",
                          },
                          Object {
                            "data": Object {
                              "negate": false,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 64,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "...*)|(\\".+\\"))@((\\\\[[0-9]{...",
                            "posLine2": "             ^",
                            "type": "charOrSet",
                          },
                          Object {
                            "data": Object {
                              "groupReference": Object {
                                "astStart": 63,
                                "idx": 4,
                              },
                            },
                            "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                            "type": "groupStartMarker",
                          },
                          Object {
                            "data": Object {
                              "alternatives": Array [
                                Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "groupReference": Object {
                                          "astStart": 64,
                                          "idx": 5,
                                        },
                                      },
                                      "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                      "type": "groupStartMarker",
                                    },
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 91,
                                            "type": "equal",
                                          },
                                          "type": "lastComparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...(\\".+\\"))@((\\\\[[0-9]{1,3}...",
                                      "posLine2": "             ^^",
                                      "type": "charOrSet",
                                    },
                                    Object {
                                      "data": Object {
                                        "maxCount": 3,
                                        "maxOrMinCount": true,
                                        "minCount": 1,
                                        "wrappedHandler": Object {
                                          "atoms": Array [
                                            Object {
                                              "data": Object {
                                                "negate": false,
                                                "tree": Object {
                                                  "comparison": Object {
                                                    "comparisonValue": 57,
                                                    "type": "lessOrEqual",
                                                  },
                                                  "comparisonTrue": Object {
                                                    "comparison": Object {
                                                      "comparisonValue": 48,
                                                      "type": "moreOrEqual",
                                                    },
                                                    "type": "lastComparison",
                                                  },
                                                  "type": "comparison",
                                                },
                                                "unicode": false,
                                              },
                                              "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-...",
                                              "posLine2": "             ^^^^^",
                                              "type": "charOrSet",
                                            },
                                          ],
                                          "followUp": null,
                                          "functionName": "fiber0006",
                                          "lastAtomReturns": false,
                                          "meta": Object {
                                            "firstCharRange": Object {
                                              "chars": Array [
                                                48,
                                                49,
                                                50,
                                                51,
                                                52,
                                                53,
                                                54,
                                                55,
                                                56,
                                                57,
                                              ],
                                              "negate": false,
                                            },
                                            "groups": Array [],
                                            "maxCharLength": 1,
                                            "minCharLength": 1,
                                          },
                                        },
                                      },
                                      "posLine1": "....+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,...",
                                      "posLine2": "             ^^^^^^^^^^",
                                      "type": "nonBacktrackingQuantifier",
                                    },
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 46,
                                            "type": "equal",
                                          },
                                          "type": "lastComparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                                      "posLine2": "             ^^",
                                      "type": "charOrSet",
                                    },
                                    Object {
                                      "data": Object {
                                        "maxCount": 3,
                                        "maxOrMinCount": true,
                                        "minCount": 1,
                                        "wrappedHandler": Object {
                                          "atoms": Array [
                                            Object {
                                              "data": Object {
                                                "negate": false,
                                                "tree": Object {
                                                  "comparison": Object {
                                                    "comparisonValue": 57,
                                                    "type": "lessOrEqual",
                                                  },
                                                  "comparisonTrue": Object {
                                                    "comparison": Object {
                                                      "comparisonValue": 48,
                                                      "type": "moreOrEqual",
                                                    },
                                                    "type": "lastComparison",
                                                  },
                                                  "type": "comparison",
                                                },
                                                "unicode": false,
                                              },
                                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                              "posLine2": "             ^^^^^",
                                              "type": "charOrSet",
                                            },
                                          ],
                                          "followUp": null,
                                          "functionName": "fiber0005",
                                          "lastAtomReturns": false,
                                          "meta": Object {
                                            "firstCharRange": Object {
                                              "chars": Array [
                                                48,
                                                49,
                                                50,
                                                51,
                                                52,
                                                53,
                                                54,
                                                55,
                                                56,
                                                57,
                                              ],
                                              "negate": false,
                                            },
                                            "groups": Array [],
                                            "maxCharLength": 1,
                                            "minCharLength": 1,
                                          },
                                        },
                                      },
                                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                                      "posLine2": "             ^^^^^^^^^^",
                                      "type": "nonBacktrackingQuantifier",
                                    },
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 46,
                                            "type": "equal",
                                          },
                                          "type": "lastComparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                                      "posLine2": "             ^^",
                                      "type": "charOrSet",
                                    },
                                    Object {
                                      "data": Object {
                                        "maxCount": 3,
                                        "maxOrMinCount": true,
                                        "minCount": 1,
                                        "wrappedHandler": Object {
                                          "atoms": Array [
                                            Object {
                                              "data": Object {
                                                "negate": false,
                                                "tree": Object {
                                                  "comparison": Object {
                                                    "comparisonValue": 57,
                                                    "type": "lessOrEqual",
                                                  },
                                                  "comparisonTrue": Object {
                                                    "comparison": Object {
                                                      "comparisonValue": 48,
                                                      "type": "moreOrEqual",
                                                    },
                                                    "type": "lastComparison",
                                                  },
                                                  "type": "comparison",
                                                },
                                                "unicode": false,
                                              },
                                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-...",
                                              "posLine2": "             ^^^^^",
                                              "type": "charOrSet",
                                            },
                                          ],
                                          "followUp": null,
                                          "functionName": "fiber0004",
                                          "lastAtomReturns": false,
                                          "meta": Object {
                                            "firstCharRange": Object {
                                              "chars": Array [
                                                48,
                                                49,
                                                50,
                                                51,
                                                52,
                                                53,
                                                54,
                                                55,
                                                56,
                                                57,
                                              ],
                                              "negate": false,
                                            },
                                            "groups": Array [],
                                            "maxCharLength": 1,
                                            "minCharLength": 1,
                                          },
                                        },
                                      },
                                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,...",
                                      "posLine2": "             ^^^^^^^^^^",
                                      "type": "nonBacktrackingQuantifier",
                                    },
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 46,
                                            "type": "equal",
                                          },
                                          "type": "lastComparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...[0-9]{1,3}\\\\.[0-9]{1,3}...",
                                      "posLine2": "             ^^",
                                      "type": "charOrSet",
                                    },
                                    Object {
                                      "data": Object {
                                        "maxCount": 3,
                                        "maxOrMinCount": true,
                                        "minCount": 1,
                                        "wrappedHandler": Object {
                                          "atoms": Array [
                                            Object {
                                              "data": Object {
                                                "negate": false,
                                                "tree": Object {
                                                  "comparison": Object {
                                                    "comparisonValue": 57,
                                                    "type": "lessOrEqual",
                                                  },
                                                  "comparisonTrue": Object {
                                                    "comparison": Object {
                                                      "comparisonValue": 48,
                                                      "type": "moreOrEqual",
                                                    },
                                                    "type": "lastComparison",
                                                  },
                                                  "type": "comparison",
                                                },
                                                "unicode": false,
                                              },
                                              "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|((...",
                                              "posLine2": "             ^^^^^",
                                              "type": "charOrSet",
                                            },
                                          ],
                                          "followUp": null,
                                          "functionName": "fiber0003",
                                          "lastAtomReturns": false,
                                          "meta": Object {
                                            "firstCharRange": Object {
                                              "chars": Array [
                                                48,
                                                49,
                                                50,
                                                51,
                                                52,
                                                53,
                                                54,
                                                55,
                                                56,
                                                57,
                                              ],
                                              "negate": false,
                                            },
                                            "groups": Array [],
                                            "maxCharLength": 1,
                                            "minCharLength": 1,
                                          },
                                        },
                                      },
                                      "posLine1": "...-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA...",
                                      "posLine2": "             ^^^^^^^^^^",
                                      "type": "nonBacktrackingQuantifier",
                                    },
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 93,
                                            "type": "equal",
                                          },
                                          "type": "lastComparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...[0-9]{1,3}])|(([a-zA-...",
                                      "posLine2": "             ^",
                                      "type": "charOrSet",
                                    },
                                    Object {
                                      "data": Object {
                                        "groupReference": Object {
                                          "astStart": 64,
                                          "idx": 5,
                                        },
                                      },
                                      "posLine1": "...|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z...",
                                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                      "type": "groupEndMarker",
                                    },
                                  ],
                                  "followUp": Object {
                                    "atoms": Array [
                                      Object {
                                        "data": Object {
                                          "groupReference": Object {
                                            "astStart": 63,
                                            "idx": 4,
                                          },
                                        },
                                        "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                                        "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                        "type": "groupEndMarker",
                                      },
                                      Object {
                                        "data": Object {},
                                        "posLine1": "...A-Z]{2,}))$/",
                                        "posLine2": "             ^",
                                        "type": "endAnchor",
                                      },
                                    ],
                                    "followUp": null,
                                    "functionName": "fiber0001",
                                    "lastAtomReturns": false,
                                    "meta": Object {
                                      "firstCharRange": Object {
                                        "chars": Array [],
                                        "negate": false,
                                      },
                                      "groups": Array [
                                        Object {
                                          "astStart": 63,
                                          "idx": 4,
                                        },
                                      ],
                                      "maxCharLength": 0,
                                      "minCharLength": 0,
                                    },
                                  },
                                  "functionName": "fiber0002",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        91,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [
                                      Object {
                                        "astStart": 63,
                                        "idx": 4,
                                      },
                                      Object {
                                        "astStart": 64,
                                        "idx": 5,
                                      },
                                    ],
                                    "maxCharLength": 17,
                                    "minCharLength": 9,
                                  },
                                },
                                Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "groupReference": Object {
                                          "astStart": 116,
                                          "idx": 6,
                                        },
                                      },
                                      "posLine1": "...9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                      "type": "groupStartMarker",
                                    },
                                    Object {
                                      "data": Object {
                                        "functionName": "greedyQuantifier0010",
                                        "maxOrMinCount": true,
                                        "quantifierCounterIndex": 0,
                                      },
                                      "posLine1": "...]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2...",
                                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^",
                                      "type": "quantifierStarter",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0012",
                                  "lastAtomReturns": true,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        45,
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                        65,
                                        66,
                                        67,
                                        68,
                                        69,
                                        70,
                                        71,
                                        72,
                                        73,
                                        74,
                                        75,
                                        76,
                                        77,
                                        78,
                                        79,
                                        80,
                                        81,
                                        82,
                                        83,
                                        84,
                                        85,
                                        86,
                                        87,
                                        88,
                                        89,
                                        90,
                                        97,
                                        98,
                                        99,
                                        100,
                                        101,
                                        102,
                                        103,
                                        104,
                                        105,
                                        106,
                                        107,
                                        108,
                                        109,
                                        110,
                                        111,
                                        112,
                                        113,
                                        114,
                                        115,
                                        116,
                                        117,
                                        118,
                                        119,
                                        120,
                                        121,
                                        122,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [
                                      Object {
                                        "astStart": 63,
                                        "idx": 4,
                                      },
                                      Object {
                                        "astStart": 116,
                                        "idx": 6,
                                      },
                                      Object {
                                        "astStart": 117,
                                        "idx": 7,
                                      },
                                    ],
                                    "maxCharLength": "Infinity",
                                    "minCharLength": 4,
                                  },
                                },
                              ],
                              "groupsToRestore": Array [
                                Object {
                                  "astStart": 63,
                                  "idx": 4,
                                },
                                Object {
                                  "astStart": 64,
                                  "idx": 5,
                                },
                                Object {
                                  "astStart": 116,
                                  "idx": 6,
                                },
                                Object {
                                  "astStart": 117,
                                  "idx": 7,
                                },
                              ],
                            },
                            "posLine1": "...)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
                            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                            "type": "disjunction",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0013",
                        "lastAtomReturns": true,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              64,
                            ],
                            "negate": false,
                          },
                          "groups": Array [
                            Object {
                              "astStart": 2,
                              "idx": 0,
                            },
                            Object {
                              "astStart": 63,
                              "idx": 4,
                            },
                            Object {
                              "astStart": 64,
                              "idx": 5,
                            },
                            Object {
                              "astStart": 116,
                              "idx": 6,
                            },
                            Object {
                              "astStart": 117,
                              "idx": 7,
                            },
                          ],
                          "maxCharLength": "Infinity",
                          "minCharLength": 5,
                        },
                      },
                      "functionName": "fiber0018",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            34,
                          ],
                          "negate": false,
                        },
                        "groups": Array [
                          Object {
                            "astStart": 2,
                            "idx": 0,
                          },
                          Object {
                            "astStart": 55,
                            "idx": 3,
                          },
                          Object {
                            "astStart": 63,
                            "idx": 4,
                          },
                          Object {
                            "astStart": 64,
                            "idx": 5,
                          },
                          Object {
                            "astStart": 116,
                            "idx": 6,
                          },
                          Object {
                            "astStart": 117,
                            "idx": 7,
                          },
                        ],
                        "maxCharLength": "Infinity",
                        "minCharLength": 6,
                      },
                    },
                    "maxOrMinCount": true,
                    "minCount": 1,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": true,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 13,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 8233,
                                  "type": "lessOrEqual",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 8232,
                                    "type": "moreOrEqual",
                                  },
                                  "type": "lastComparison",
                                },
                                "type": "comparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue1": 10,
                                  "comparisonValue2": 13,
                                  "type": "equalOneOfTwo",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "...@\\"]+)*)|(\\".+\\"))@((\\\\[[...",
                          "posLine2": "             ^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0019",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            10,
                            13,
                            8232,
                            8233,
                          ],
                          "negate": true,
                        },
                        "groups": Array [],
                        "maxCharLength": 1,
                        "minCharLength": 1,
                      },
                    },
                  },
                  "posLine1": "...@\\"]+)*)|(\\".+\\"))@((\\\\[[0...",
                  "posLine2": "             ^^",
                  "type": "backtrackingFixedLengthQuantifier",
                },
              ],
              "followUp": null,
              "functionName": "fiber0020",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    34,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 2,
                    "idx": 0,
                  },
                  Object {
                    "astStart": 55,
                    "idx": 3,
                  },
                  Object {
                    "astStart": 63,
                    "idx": 4,
                  },
                  Object {
                    "astStart": 64,
                    "idx": 5,
                  },
                  Object {
                    "astStart": 116,
                    "idx": 6,
                  },
                  Object {
                    "astStart": 117,
                    "idx": 7,
                  },
                ],
                "maxCharLength": "Infinity",
                "minCharLength": 2,
              },
            },
          ],
          "groupsToRestore": Array [
            Object {
              "astStart": 2,
              "idx": 0,
            },
            Object {
              "astStart": 3,
              "idx": 1,
            },
            Object {
              "astStart": 55,
              "idx": 3,
            },
            Object {
              "astStart": 63,
              "idx": 4,
            },
            Object {
              "astStart": 64,
              "idx": 5,
            },
            Object {
              "astStart": 116,
              "idx": 6,
            },
            Object {
              "astStart": 117,
              "idx": 7,
            },
          ],
        },
        "posLine1": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]...",
        "posLine2": "  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "type": "disjunction",
      },
    ],
    "followUp": null,
    "functionName": "fiber0021",
    "lastAtomReturns": true,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          9,
          10,
          11,
          12,
          13,
          32,
          40,
          41,
          44,
          46,
          58,
          59,
          60,
          62,
          64,
          91,
          92,
          93,
          160,
          5760,
          8192,
          8193,
          8194,
          8195,
          8196,
          8197,
          8198,
          8199,
          8200,
          8201,
          8202,
          8232,
          8233,
          8239,
          8287,
          12288,
          65279,
        ],
        "negate": true,
      },
      "groups": Array [
        Object {
          "astStart": 2,
          "idx": 0,
        },
        Object {
          "astStart": 3,
          "idx": 1,
        },
        Object {
          "astStart": 55,
          "idx": 3,
        },
        Object {
          "astStart": 63,
          "idx": 4,
        },
        Object {
          "astStart": 64,
          "idx": 5,
        },
        Object {
          "astStart": 116,
          "idx": 6,
        },
        Object {
          "astStart": 117,
          "idx": 7,
        },
      ],
      "maxCharLength": "Infinity",
      "minCharLength": 2,
    },
  },
  "quantifierCountersLength": 1,
  "regexStr": "/^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\"]+)*)|(\\".+\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/",
}
`;
