// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common_regex/url_protocol_optional template values are as expected 1`] = `
Object {
  "fiberHandlers": Array [
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
          },
          "posLine1": "...[a-z]{2,6}\\\\b([-a-zA-Z0...",
          "posLine2": "             ^^",
          "type": "wordBoundary",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 66,
              "idx": 2,
            },
          },
          "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "maxOrMinCount": false,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 61,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 95,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 122,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 126,
                              "type": "equal",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 97,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 90,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 95,
                              "type": "equal",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 63,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 43,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 58,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 61,
                              "type": "equal",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 45,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 38,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 43,
                              "type": "equal",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 35,
                              "type": "equal",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 37,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "type": "true",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0002",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    35,
                    37,
                    38,
                    43,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    61,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    95,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                    126,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 66,
              "idx": 2,
            },
          },
          "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": null,
      "functionName": "fiber0001",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            35,
            37,
            38,
            43,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            61,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            126,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 66,
            "idx": 2,
          },
        ],
        "maxCharLength": "Infinity",
        "minCharLength": 0,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 61,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 95,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 126,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 90,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 95,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 63,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 43,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 58,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 61,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 45,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 38,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 43,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 35,
                      "type": "equal",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 37,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "type": "true",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0002",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            35,
            37,
            38,
            43,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            61,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            126,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 122,
                "type": "lessOrEqual",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 97,
                  "type": "moreOrEqual",
                },
                "type": "lastComparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...]{2,256}\\\\.[a-z]{2,6}\\\\b([-...",
          "posLine2": "             ^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0003",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...#=]{2,256}\\\\.[a-z]{2,6}...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "fixedLength": 1,
            "followUp": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                  },
                  "posLine1": "...[a-z]{2,6}\\\\b([-a-zA-Z0...",
                  "posLine2": "             ^^",
                  "type": "wordBoundary",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 66,
                      "idx": 2,
                    },
                  },
                  "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "groupStartMarker",
                },
                Object {
                  "data": Object {
                    "maxOrMinCount": false,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": false,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 61,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 95,
                                  "type": "lessOrEqual",
                                },
                                "comparisonFalse": Object {
                                  "comparison": Object {
                                    "comparisonValue": 122,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 126,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 97,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 90,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 95,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 63,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "type": "comparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 43,
                                  "type": "lessOrEqual",
                                },
                                "comparisonFalse": Object {
                                  "comparison": Object {
                                    "comparisonValue": 58,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 61,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 45,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 38,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonFalse": Object {
                                    "comparison": Object {
                                      "comparisonValue": 43,
                                      "type": "equal",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 35,
                                      "type": "equal",
                                    },
                                    "comparisonFalse": Object {
                                      "comparison": Object {
                                        "comparisonValue": 37,
                                        "type": "moreOrEqual",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "comparisonTrue": Object {
                                      "comparison": Object {
                                        "type": "true",
                                      },
                                      "type": "lastComparison",
                                    },
                                    "type": "comparison",
                                  },
                                  "type": "comparison",
                                },
                                "type": "comparison",
                              },
                              "type": "comparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0002",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            35,
                            37,
                            38,
                            43,
                            45,
                            46,
                            47,
                            48,
                            49,
                            50,
                            51,
                            52,
                            53,
                            54,
                            55,
                            56,
                            57,
                            58,
                            61,
                            63,
                            64,
                            65,
                            66,
                            67,
                            68,
                            69,
                            70,
                            71,
                            72,
                            73,
                            74,
                            75,
                            76,
                            77,
                            78,
                            79,
                            80,
                            81,
                            82,
                            83,
                            84,
                            85,
                            86,
                            87,
                            88,
                            89,
                            90,
                            95,
                            97,
                            98,
                            99,
                            100,
                            101,
                            102,
                            103,
                            104,
                            105,
                            106,
                            107,
                            108,
                            109,
                            110,
                            111,
                            112,
                            113,
                            114,
                            115,
                            116,
                            117,
                            118,
                            119,
                            120,
                            121,
                            122,
                            126,
                          ],
                          "negate": false,
                        },
                        "groups": Array [],
                        "maxCharLength": 1,
                        "minCharLength": 1,
                      },
                    },
                  },
                  "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "nonBacktrackingQuantifier",
                },
                Object {
                  "data": Object {
                    "groupReference": Object {
                      "astStart": 66,
                      "idx": 2,
                    },
                  },
                  "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "groupEndMarker",
                },
              ],
              "followUp": null,
              "functionName": "fiber0001",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    35,
                    37,
                    38,
                    43,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    61,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    95,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                    126,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 66,
                    "idx": 2,
                  },
                ],
                "maxCharLength": "Infinity",
                "minCharLength": 0,
              },
            },
            "maxCount": 6,
            "maxOrMinCount": true,
            "minCount": 2,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 122,
                        "type": "lessOrEqual",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 97,
                          "type": "moreOrEqual",
                        },
                        "type": "lastComparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...]{2,256}\\\\.[a-z]{2,6}\\\\b([-...",
                  "posLine2": "             ^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0003",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-...",
          "posLine2": "             ^^^^^^^^^^",
          "type": "backtrackingFixedLengthQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0004",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            46,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 66,
            "idx": 2,
          },
        ],
        "maxCharLength": 7,
        "minCharLength": 3,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 58,
                "type": "lessOrEqual",
              },
              "comparisonFalse": Object {
                "comparison": Object {
                  "comparisonValue": 95,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 122,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 126,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 97,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 90,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 95,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 61,
                      "type": "equal",
                    },
                    "comparisonFalse": Object {
                      "comparison": Object {
                        "comparisonValue": 64,
                        "type": "moreOrEqual",
                      },
                      "type": "lastComparison",
                    },
                    "comparisonTrue": Object {
                      "comparison": Object {
                        "type": "true",
                      },
                      "type": "lastComparison",
                    },
                    "type": "comparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "comparisonTrue": Object {
                "comparison": Object {
                  "comparisonValue": 43,
                  "type": "lessOrEqual",
                },
                "comparisonFalse": Object {
                  "comparison": Object {
                    "comparisonValue": 46,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 48,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue": 45,
                      "type": "moreOrEqual",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "comparisonTrue": Object {
                  "comparison": Object {
                    "comparisonValue": 37,
                    "type": "lessOrEqual",
                  },
                  "comparisonFalse": Object {
                    "comparison": Object {
                      "comparisonValue": 43,
                      "type": "equal",
                    },
                    "type": "lastComparison",
                  },
                  "comparisonTrue": Object {
                    "comparison": Object {
                      "comparisonValue1": 35,
                      "comparisonValue2": 37,
                      "type": "equalOneOfTwo",
                    },
                    "type": "lastComparison",
                  },
                  "type": "comparison",
                },
                "type": "comparison",
              },
              "type": "comparison",
            },
            "unicode": false,
          },
          "posLine1": "...)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0005",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            35,
            37,
            43,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            61,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            126,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "fixedLength": 1,
            "followUp": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 46,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...#=]{2,256}\\\\.[a-z]{2,6}...",
                  "posLine2": "             ^^",
                  "type": "charOrSet",
                },
                Object {
                  "data": Object {
                    "fixedLength": 1,
                    "followUp": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": false,
                          },
                          "posLine1": "...[a-z]{2,6}\\\\b([-a-zA-Z0...",
                          "posLine2": "             ^^",
                          "type": "wordBoundary",
                        },
                        Object {
                          "data": Object {
                            "groupReference": Object {
                              "astStart": 66,
                              "idx": 2,
                            },
                          },
                          "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                          "type": "groupStartMarker",
                        },
                        Object {
                          "data": Object {
                            "maxOrMinCount": false,
                            "wrappedHandler": Object {
                              "atoms": Array [
                                Object {
                                  "data": Object {
                                    "negate": false,
                                    "tree": Object {
                                      "comparison": Object {
                                        "comparisonValue": 61,
                                        "type": "lessOrEqual",
                                      },
                                      "comparisonFalse": Object {
                                        "comparison": Object {
                                          "comparisonValue": 95,
                                          "type": "lessOrEqual",
                                        },
                                        "comparisonFalse": Object {
                                          "comparison": Object {
                                            "comparisonValue": 122,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 126,
                                              "type": "equal",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 97,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "comparisonTrue": Object {
                                          "comparison": Object {
                                            "comparisonValue": 90,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 95,
                                              "type": "equal",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 63,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "type": "comparison",
                                      },
                                      "comparisonTrue": Object {
                                        "comparison": Object {
                                          "comparisonValue": 43,
                                          "type": "lessOrEqual",
                                        },
                                        "comparisonFalse": Object {
                                          "comparison": Object {
                                            "comparisonValue": 58,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 61,
                                              "type": "equal",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 45,
                                              "type": "moreOrEqual",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "comparisonTrue": Object {
                                          "comparison": Object {
                                            "comparisonValue": 38,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 43,
                                              "type": "equal",
                                            },
                                            "type": "lastComparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 35,
                                              "type": "equal",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 37,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "type": "true",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "type": "comparison",
                                      },
                                      "type": "comparison",
                                    },
                                    "unicode": false,
                                  },
                                  "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                  "type": "charOrSet",
                                },
                              ],
                              "followUp": null,
                              "functionName": "fiber0002",
                              "lastAtomReturns": false,
                              "meta": Object {
                                "firstCharRange": Object {
                                  "chars": Array [
                                    35,
                                    37,
                                    38,
                                    43,
                                    45,
                                    46,
                                    47,
                                    48,
                                    49,
                                    50,
                                    51,
                                    52,
                                    53,
                                    54,
                                    55,
                                    56,
                                    57,
                                    58,
                                    61,
                                    63,
                                    64,
                                    65,
                                    66,
                                    67,
                                    68,
                                    69,
                                    70,
                                    71,
                                    72,
                                    73,
                                    74,
                                    75,
                                    76,
                                    77,
                                    78,
                                    79,
                                    80,
                                    81,
                                    82,
                                    83,
                                    84,
                                    85,
                                    86,
                                    87,
                                    88,
                                    89,
                                    90,
                                    95,
                                    97,
                                    98,
                                    99,
                                    100,
                                    101,
                                    102,
                                    103,
                                    104,
                                    105,
                                    106,
                                    107,
                                    108,
                                    109,
                                    110,
                                    111,
                                    112,
                                    113,
                                    114,
                                    115,
                                    116,
                                    117,
                                    118,
                                    119,
                                    120,
                                    121,
                                    122,
                                    126,
                                  ],
                                  "negate": false,
                                },
                                "groups": Array [],
                                "maxCharLength": 1,
                                "minCharLength": 1,
                              },
                            },
                          },
                          "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                          "type": "nonBacktrackingQuantifier",
                        },
                        Object {
                          "data": Object {
                            "groupReference": Object {
                              "astStart": 66,
                              "idx": 2,
                            },
                          },
                          "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                          "type": "groupEndMarker",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0001",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            35,
                            37,
                            38,
                            43,
                            45,
                            46,
                            47,
                            48,
                            49,
                            50,
                            51,
                            52,
                            53,
                            54,
                            55,
                            56,
                            57,
                            58,
                            61,
                            63,
                            64,
                            65,
                            66,
                            67,
                            68,
                            69,
                            70,
                            71,
                            72,
                            73,
                            74,
                            75,
                            76,
                            77,
                            78,
                            79,
                            80,
                            81,
                            82,
                            83,
                            84,
                            85,
                            86,
                            87,
                            88,
                            89,
                            90,
                            95,
                            97,
                            98,
                            99,
                            100,
                            101,
                            102,
                            103,
                            104,
                            105,
                            106,
                            107,
                            108,
                            109,
                            110,
                            111,
                            112,
                            113,
                            114,
                            115,
                            116,
                            117,
                            118,
                            119,
                            120,
                            121,
                            122,
                            126,
                          ],
                          "negate": false,
                        },
                        "groups": Array [
                          Object {
                            "astStart": 66,
                            "idx": 2,
                          },
                        ],
                        "maxCharLength": "Infinity",
                        "minCharLength": 0,
                      },
                    },
                    "maxCount": 6,
                    "maxOrMinCount": true,
                    "minCount": 2,
                    "wrappedHandler": Object {
                      "atoms": Array [
                        Object {
                          "data": Object {
                            "negate": false,
                            "tree": Object {
                              "comparison": Object {
                                "comparisonValue": 122,
                                "type": "lessOrEqual",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 97,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "unicode": false,
                          },
                          "posLine1": "...]{2,256}\\\\.[a-z]{2,6}\\\\b([-...",
                          "posLine2": "             ^^^^^",
                          "type": "charOrSet",
                        },
                      ],
                      "followUp": null,
                      "functionName": "fiber0003",
                      "lastAtomReturns": false,
                      "meta": Object {
                        "firstCharRange": Object {
                          "chars": Array [
                            97,
                            98,
                            99,
                            100,
                            101,
                            102,
                            103,
                            104,
                            105,
                            106,
                            107,
                            108,
                            109,
                            110,
                            111,
                            112,
                            113,
                            114,
                            115,
                            116,
                            117,
                            118,
                            119,
                            120,
                            121,
                            122,
                          ],
                          "negate": false,
                        },
                        "groups": Array [],
                        "maxCharLength": 1,
                        "minCharLength": 1,
                      },
                    },
                  },
                  "posLine1": "...]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-...",
                  "posLine2": "             ^^^^^^^^^^",
                  "type": "backtrackingFixedLengthQuantifier",
                },
              ],
              "followUp": null,
              "functionName": "fiber0004",
              "lastAtomReturns": true,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    46,
                  ],
                  "negate": false,
                },
                "groups": Array [
                  Object {
                    "astStart": 66,
                    "idx": 2,
                  },
                ],
                "maxCharLength": 7,
                "minCharLength": 3,
              },
            },
            "maxCount": 256,
            "maxOrMinCount": true,
            "minCount": 2,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 58,
                        "type": "lessOrEqual",
                      },
                      "comparisonFalse": Object {
                        "comparison": Object {
                          "comparisonValue": 95,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 122,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 126,
                              "type": "equal",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 97,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 90,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 95,
                              "type": "equal",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 61,
                              "type": "equal",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 64,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "type": "true",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "comparisonTrue": Object {
                        "comparison": Object {
                          "comparisonValue": 43,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 46,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 48,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 45,
                              "type": "moreOrEqual",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 37,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 43,
                              "type": "equal",
                            },
                            "type": "lastComparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue1": 35,
                              "comparisonValue2": 37,
                              "type": "equalOneOfTwo",
                            },
                            "type": "lastComparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "type": "comparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "...)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[...",
                  "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0005",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    35,
                    37,
                    43,
                    45,
                    46,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    61,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    95,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                    126,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "...)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,...",
          "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "type": "backtrackingFixedLengthQuantifier",
        },
      ],
      "followUp": null,
      "functionName": "fiber0006",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            35,
            37,
            43,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            61,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            126,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 66,
            "idx": 2,
          },
        ],
        "maxCharLength": 256,
        "minCharLength": 2,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 15,
              "idx": 1,
            },
          },
          "posLine1": "...ps?:\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z0...",
          "posLine2": "             ^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 119,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...s?:\\\\/\\\\/)?(www\\\\.)?[-a-...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 119,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...?:\\\\/\\\\/)?(www\\\\.)?[-a-z...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 119,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...:\\\\/\\\\/)?(www\\\\.)?[-a-zA...",
          "posLine2": "             ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 46,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "...\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z...",
          "posLine2": "             ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 15,
              "idx": 1,
            },
          },
          "posLine1": "...ps?:\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z0...",
          "posLine2": "             ^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "fixedLength": 1,
                "followUp": Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 46,
                            "type": "equal",
                          },
                          "type": "lastComparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...#=]{2,256}\\\\.[a-z]{2,6}...",
                      "posLine2": "             ^^",
                      "type": "charOrSet",
                    },
                    Object {
                      "data": Object {
                        "fixedLength": 1,
                        "followUp": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                              },
                              "posLine1": "...[a-z]{2,6}\\\\b([-a-zA-Z0...",
                              "posLine2": "             ^^",
                              "type": "wordBoundary",
                            },
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 66,
                                  "idx": 2,
                                },
                              },
                              "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupStartMarker",
                            },
                            Object {
                              "data": Object {
                                "maxOrMinCount": false,
                                "wrappedHandler": Object {
                                  "atoms": Array [
                                    Object {
                                      "data": Object {
                                        "negate": false,
                                        "tree": Object {
                                          "comparison": Object {
                                            "comparisonValue": 61,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 95,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 122,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 126,
                                                  "type": "equal",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 97,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 90,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 95,
                                                  "type": "equal",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 63,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 43,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 58,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 61,
                                                  "type": "equal",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 45,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 38,
                                                "type": "lessOrEqual",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 43,
                                                  "type": "equal",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 35,
                                                  "type": "equal",
                                                },
                                                "comparisonFalse": Object {
                                                  "comparison": Object {
                                                    "comparisonValue": 37,
                                                    "type": "moreOrEqual",
                                                  },
                                                  "type": "lastComparison",
                                                },
                                                "comparisonTrue": Object {
                                                  "comparison": Object {
                                                    "type": "true",
                                                  },
                                                  "type": "lastComparison",
                                                },
                                                "type": "comparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "unicode": false,
                                      },
                                      "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                      "type": "charOrSet",
                                    },
                                  ],
                                  "followUp": null,
                                  "functionName": "fiber0002",
                                  "lastAtomReturns": false,
                                  "meta": Object {
                                    "firstCharRange": Object {
                                      "chars": Array [
                                        35,
                                        37,
                                        38,
                                        43,
                                        45,
                                        46,
                                        47,
                                        48,
                                        49,
                                        50,
                                        51,
                                        52,
                                        53,
                                        54,
                                        55,
                                        56,
                                        57,
                                        58,
                                        61,
                                        63,
                                        64,
                                        65,
                                        66,
                                        67,
                                        68,
                                        69,
                                        70,
                                        71,
                                        72,
                                        73,
                                        74,
                                        75,
                                        76,
                                        77,
                                        78,
                                        79,
                                        80,
                                        81,
                                        82,
                                        83,
                                        84,
                                        85,
                                        86,
                                        87,
                                        88,
                                        89,
                                        90,
                                        95,
                                        97,
                                        98,
                                        99,
                                        100,
                                        101,
                                        102,
                                        103,
                                        104,
                                        105,
                                        106,
                                        107,
                                        108,
                                        109,
                                        110,
                                        111,
                                        112,
                                        113,
                                        114,
                                        115,
                                        116,
                                        117,
                                        118,
                                        119,
                                        120,
                                        121,
                                        122,
                                        126,
                                      ],
                                      "negate": false,
                                    },
                                    "groups": Array [],
                                    "maxCharLength": 1,
                                    "minCharLength": 1,
                                  },
                                },
                              },
                              "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "nonBacktrackingQuantifier",
                            },
                            Object {
                              "data": Object {
                                "groupReference": Object {
                                  "astStart": 66,
                                  "idx": 2,
                                },
                              },
                              "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                              "type": "groupEndMarker",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0001",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                35,
                                37,
                                38,
                                43,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                61,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                87,
                                88,
                                89,
                                90,
                                95,
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108,
                                109,
                                110,
                                111,
                                112,
                                113,
                                114,
                                115,
                                116,
                                117,
                                118,
                                119,
                                120,
                                121,
                                122,
                                126,
                              ],
                              "negate": false,
                            },
                            "groups": Array [
                              Object {
                                "astStart": 66,
                                "idx": 2,
                              },
                            ],
                            "maxCharLength": "Infinity",
                            "minCharLength": 0,
                          },
                        },
                        "maxCount": 6,
                        "maxOrMinCount": true,
                        "minCount": 2,
                        "wrappedHandler": Object {
                          "atoms": Array [
                            Object {
                              "data": Object {
                                "negate": false,
                                "tree": Object {
                                  "comparison": Object {
                                    "comparisonValue": 122,
                                    "type": "lessOrEqual",
                                  },
                                  "comparisonTrue": Object {
                                    "comparison": Object {
                                      "comparisonValue": 97,
                                      "type": "moreOrEqual",
                                    },
                                    "type": "lastComparison",
                                  },
                                  "type": "comparison",
                                },
                                "unicode": false,
                              },
                              "posLine1": "...]{2,256}\\\\.[a-z]{2,6}\\\\b([-...",
                              "posLine2": "             ^^^^^",
                              "type": "charOrSet",
                            },
                          ],
                          "followUp": null,
                          "functionName": "fiber0003",
                          "lastAtomReturns": false,
                          "meta": Object {
                            "firstCharRange": Object {
                              "chars": Array [
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108,
                                109,
                                110,
                                111,
                                112,
                                113,
                                114,
                                115,
                                116,
                                117,
                                118,
                                119,
                                120,
                                121,
                                122,
                              ],
                              "negate": false,
                            },
                            "groups": Array [],
                            "maxCharLength": 1,
                            "minCharLength": 1,
                          },
                        },
                      },
                      "posLine1": "...]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-...",
                      "posLine2": "             ^^^^^^^^^^",
                      "type": "backtrackingFixedLengthQuantifier",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0004",
                  "lastAtomReturns": true,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        46,
                      ],
                      "negate": false,
                    },
                    "groups": Array [
                      Object {
                        "astStart": 66,
                        "idx": 2,
                      },
                    ],
                    "maxCharLength": 7,
                    "minCharLength": 3,
                  },
                },
                "maxCount": 256,
                "maxOrMinCount": true,
                "minCount": 2,
                "wrappedHandler": Object {
                  "atoms": Array [
                    Object {
                      "data": Object {
                        "negate": false,
                        "tree": Object {
                          "comparison": Object {
                            "comparisonValue": 58,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 95,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 122,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 126,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 97,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 90,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 95,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 61,
                                  "type": "equal",
                                },
                                "comparisonFalse": Object {
                                  "comparison": Object {
                                    "comparisonValue": 64,
                                    "type": "moreOrEqual",
                                  },
                                  "type": "lastComparison",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "type": "true",
                                  },
                                  "type": "lastComparison",
                                },
                                "type": "comparison",
                              },
                              "type": "comparison",
                            },
                            "type": "comparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 43,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 46,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 48,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue": 45,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 37,
                                "type": "lessOrEqual",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 43,
                                  "type": "equal",
                                },
                                "type": "lastComparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "comparisonValue1": 35,
                                  "comparisonValue2": 37,
                                  "type": "equalOneOfTwo",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "unicode": false,
                      },
                      "posLine1": "...)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[...",
                      "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^",
                      "type": "charOrSet",
                    },
                  ],
                  "followUp": null,
                  "functionName": "fiber0005",
                  "lastAtomReturns": false,
                  "meta": Object {
                    "firstCharRange": Object {
                      "chars": Array [
                        35,
                        37,
                        43,
                        45,
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        61,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        95,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        126,
                      ],
                      "negate": false,
                    },
                    "groups": Array [],
                    "maxCharLength": 1,
                    "minCharLength": 1,
                  },
                },
              },
              "posLine1": "...)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,...",
              "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
              "type": "backtrackingFixedLengthQuantifier",
            },
          ],
          "followUp": null,
          "functionName": "fiber0006",
          "lastAtomReturns": true,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                35,
                37,
                43,
                45,
                46,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                61,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                95,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                126,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 66,
                "idx": 2,
              },
            ],
            "maxCharLength": 256,
            "minCharLength": 2,
          },
        },
        "functionName": "greedyQuantifier0008",
        "maxCount": 1,
        "maxOrMinCount": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 15,
              "idx": 1,
            },
            Object {
              "astStart": 66,
              "idx": 2,
            },
          ],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
        "posLine1": "...ps?:\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z0-...",
        "posLine2": "             ^^^^^^^^",
        "quantifierCounterIndex": 0,
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0007",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            119,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 15,
            "idx": 1,
          },
        ],
        "maxCharLength": 4,
        "minCharLength": 4,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0008",
            "maxOrMinCount": true,
            "quantifierCounterIndex": 0,
          },
          "posLine1": "...ps?:\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z0-...",
          "posLine2": "             ^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0009",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            35,
            37,
            43,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            61,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            126,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 15,
            "idx": 1,
          },
          Object {
            "astStart": 66,
            "idx": 2,
          },
        ],
        "maxCharLength": 260,
        "minCharLength": 2,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(https?:\\\\/\\\\/)?(www\\\\.)?[...",
          "posLine2": " ^^^^^^^^^^^^^",
          "type": "groupStartMarker",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 104,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(https?:\\\\/\\\\/...",
          "posLine2": "  ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 116,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(https?:\\\\/\\\\/)...",
          "posLine2": "   ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 116,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(https?:\\\\/\\\\/)?...",
          "posLine2": "    ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 112,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(https?:\\\\/\\\\/)?(...",
          "posLine2": "     ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "maxCount": 1,
            "maxOrMinCount": true,
            "wrappedHandler": Object {
              "atoms": Array [
                Object {
                  "data": Object {
                    "negate": false,
                    "tree": Object {
                      "comparison": Object {
                        "comparisonValue": 115,
                        "type": "equal",
                      },
                      "type": "lastComparison",
                    },
                    "unicode": false,
                  },
                  "posLine1": "/(https?:\\\\/\\\\/)?(w...",
                  "posLine2": "      ^",
                  "type": "charOrSet",
                },
              ],
              "followUp": null,
              "functionName": "fiber0012",
              "lastAtomReturns": false,
              "meta": Object {
                "firstCharRange": Object {
                  "chars": Array [
                    115,
                  ],
                  "negate": false,
                },
                "groups": Array [],
                "maxCharLength": 1,
                "minCharLength": 1,
              },
            },
          },
          "posLine1": "/(https?:\\\\/\\\\/)?(ww...",
          "posLine2": "      ^^",
          "type": "nonBacktrackingQuantifier",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 58,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(https?:\\\\/\\\\/)?(www...",
          "posLine2": "        ^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 47,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(https?:\\\\/\\\\/)?(www\\\\....",
          "posLine2": "         ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 47,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(https?:\\\\/\\\\/)?(www\\\\.)?...",
          "posLine2": "           ^^",
          "type": "charOrSet",
        },
        Object {
          "data": Object {
            "groupReference": Object {
              "astStart": 1,
              "idx": 0,
            },
          },
          "posLine1": "/(https?:\\\\/\\\\/)?(www\\\\.)?[...",
          "posLine2": " ^^^^^^^^^^^^^",
          "type": "groupEndMarker",
        },
      ],
      "followUp": Object {
        "followUp": Object {
          "atoms": Array [
            Object {
              "data": Object {
                "functionName": "greedyQuantifier0008",
                "maxOrMinCount": true,
                "quantifierCounterIndex": 0,
              },
              "posLine1": "...ps?:\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z0-...",
              "posLine2": "             ^^^^^^^^",
              "type": "quantifierStarter",
            },
          ],
          "followUp": null,
          "functionName": "fiber0009",
          "lastAtomReturns": true,
          "meta": Object {
            "firstCharRange": Object {
              "chars": Array [
                35,
                37,
                43,
                45,
                46,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                61,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                95,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                126,
              ],
              "negate": false,
            },
            "groups": Array [
              Object {
                "astStart": 15,
                "idx": 1,
              },
              Object {
                "astStart": 66,
                "idx": 2,
              },
            ],
            "maxCharLength": 260,
            "minCharLength": 2,
          },
        },
        "functionName": "greedyQuantifier0011",
        "maxCount": 1,
        "maxOrMinCount": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 1,
              "idx": 0,
            },
            Object {
              "astStart": 15,
              "idx": 1,
            },
            Object {
              "astStart": 66,
              "idx": 2,
            },
          ],
          "maxCharLength": 0,
          "minCharLength": 0,
        },
        "posLine1": "/(https?:\\\\/\\\\/)?(www\\\\.)?[-...",
        "posLine2": " ^^^^^^^^^^^^^^",
        "quantifierCounterIndex": 1,
        "wrappedHandler": "[Circular]",
      },
      "functionName": "fiber0010",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            104,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
        ],
        "maxCharLength": 8,
        "minCharLength": 7,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "negate": false,
            "tree": Object {
              "comparison": Object {
                "comparisonValue": 115,
                "type": "equal",
              },
              "type": "lastComparison",
            },
            "unicode": false,
          },
          "posLine1": "/(https?:\\\\/\\\\/)?(w...",
          "posLine2": "      ^",
          "type": "charOrSet",
        },
      ],
      "followUp": null,
      "functionName": "fiber0012",
      "lastAtomReturns": false,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            115,
          ],
          "negate": false,
        },
        "groups": Array [],
        "maxCharLength": 1,
        "minCharLength": 1,
      },
    },
    Object {
      "atoms": Array [
        Object {
          "data": Object {
            "functionName": "greedyQuantifier0011",
            "maxOrMinCount": true,
            "quantifierCounterIndex": 1,
          },
          "posLine1": "/(https?:\\\\/\\\\/)?(www\\\\.)?[-...",
          "posLine2": " ^^^^^^^^^^^^^^",
          "type": "quantifierStarter",
        },
      ],
      "followUp": null,
      "functionName": "fiber0013",
      "lastAtomReturns": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [
            35,
            37,
            43,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            61,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            126,
          ],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
          Object {
            "astStart": 15,
            "idx": 1,
          },
          Object {
            "astStart": 66,
            "idx": 2,
          },
        ],
        "maxCharLength": 268,
        "minCharLength": 2,
      },
    },
  ],
  "greedyQuantifierHandlers": Array [
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "fixedLength": 1,
              "followUp": Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 46,
                          "type": "equal",
                        },
                        "type": "lastComparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...#=]{2,256}\\\\.[a-z]{2,6}...",
                    "posLine2": "             ^^",
                    "type": "charOrSet",
                  },
                  Object {
                    "data": Object {
                      "fixedLength": 1,
                      "followUp": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "negate": false,
                            },
                            "posLine1": "...[a-z]{2,6}\\\\b([-a-zA-Z0...",
                            "posLine2": "             ^^",
                            "type": "wordBoundary",
                          },
                          Object {
                            "data": Object {
                              "groupReference": Object {
                                "astStart": 66,
                                "idx": 2,
                              },
                            },
                            "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                            "type": "groupStartMarker",
                          },
                          Object {
                            "data": Object {
                              "maxOrMinCount": false,
                              "wrappedHandler": Object {
                                "atoms": Array [
                                  Object {
                                    "data": Object {
                                      "negate": false,
                                      "tree": Object {
                                        "comparison": Object {
                                          "comparisonValue": 61,
                                          "type": "lessOrEqual",
                                        },
                                        "comparisonFalse": Object {
                                          "comparison": Object {
                                            "comparisonValue": 95,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 122,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 126,
                                                "type": "equal",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 97,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 90,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 95,
                                                "type": "equal",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 63,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "comparisonTrue": Object {
                                          "comparison": Object {
                                            "comparisonValue": 43,
                                            "type": "lessOrEqual",
                                          },
                                          "comparisonFalse": Object {
                                            "comparison": Object {
                                              "comparisonValue": 58,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 61,
                                                "type": "equal",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 45,
                                                "type": "moreOrEqual",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "comparisonTrue": Object {
                                            "comparison": Object {
                                              "comparisonValue": 38,
                                              "type": "lessOrEqual",
                                            },
                                            "comparisonFalse": Object {
                                              "comparison": Object {
                                                "comparisonValue": 43,
                                                "type": "equal",
                                              },
                                              "type": "lastComparison",
                                            },
                                            "comparisonTrue": Object {
                                              "comparison": Object {
                                                "comparisonValue": 35,
                                                "type": "equal",
                                              },
                                              "comparisonFalse": Object {
                                                "comparison": Object {
                                                  "comparisonValue": 37,
                                                  "type": "moreOrEqual",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "comparisonTrue": Object {
                                                "comparison": Object {
                                                  "type": "true",
                                                },
                                                "type": "lastComparison",
                                              },
                                              "type": "comparison",
                                            },
                                            "type": "comparison",
                                          },
                                          "type": "comparison",
                                        },
                                        "type": "comparison",
                                      },
                                      "unicode": false,
                                    },
                                    "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^",
                                    "type": "charOrSet",
                                  },
                                ],
                                "followUp": null,
                                "functionName": "fiber0002",
                                "lastAtomReturns": false,
                                "meta": Object {
                                  "firstCharRange": Object {
                                    "chars": Array [
                                      35,
                                      37,
                                      38,
                                      43,
                                      45,
                                      46,
                                      47,
                                      48,
                                      49,
                                      50,
                                      51,
                                      52,
                                      53,
                                      54,
                                      55,
                                      56,
                                      57,
                                      58,
                                      61,
                                      63,
                                      64,
                                      65,
                                      66,
                                      67,
                                      68,
                                      69,
                                      70,
                                      71,
                                      72,
                                      73,
                                      74,
                                      75,
                                      76,
                                      77,
                                      78,
                                      79,
                                      80,
                                      81,
                                      82,
                                      83,
                                      84,
                                      85,
                                      86,
                                      87,
                                      88,
                                      89,
                                      90,
                                      95,
                                      97,
                                      98,
                                      99,
                                      100,
                                      101,
                                      102,
                                      103,
                                      104,
                                      105,
                                      106,
                                      107,
                                      108,
                                      109,
                                      110,
                                      111,
                                      112,
                                      113,
                                      114,
                                      115,
                                      116,
                                      117,
                                      118,
                                      119,
                                      120,
                                      121,
                                      122,
                                      126,
                                    ],
                                    "negate": false,
                                  },
                                  "groups": Array [],
                                  "maxCharLength": 1,
                                  "minCharLength": 1,
                                },
                              },
                            },
                            "posLine1": "...z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                            "type": "nonBacktrackingQuantifier",
                          },
                          Object {
                            "data": Object {
                              "groupReference": Object {
                                "astStart": 66,
                                "idx": 2,
                              },
                            },
                            "posLine1": "...-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
                            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                            "type": "groupEndMarker",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0001",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              35,
                              37,
                              38,
                              43,
                              45,
                              46,
                              47,
                              48,
                              49,
                              50,
                              51,
                              52,
                              53,
                              54,
                              55,
                              56,
                              57,
                              58,
                              61,
                              63,
                              64,
                              65,
                              66,
                              67,
                              68,
                              69,
                              70,
                              71,
                              72,
                              73,
                              74,
                              75,
                              76,
                              77,
                              78,
                              79,
                              80,
                              81,
                              82,
                              83,
                              84,
                              85,
                              86,
                              87,
                              88,
                              89,
                              90,
                              95,
                              97,
                              98,
                              99,
                              100,
                              101,
                              102,
                              103,
                              104,
                              105,
                              106,
                              107,
                              108,
                              109,
                              110,
                              111,
                              112,
                              113,
                              114,
                              115,
                              116,
                              117,
                              118,
                              119,
                              120,
                              121,
                              122,
                              126,
                            ],
                            "negate": false,
                          },
                          "groups": Array [
                            Object {
                              "astStart": 66,
                              "idx": 2,
                            },
                          ],
                          "maxCharLength": "Infinity",
                          "minCharLength": 0,
                        },
                      },
                      "maxCount": 6,
                      "maxOrMinCount": true,
                      "minCount": 2,
                      "wrappedHandler": Object {
                        "atoms": Array [
                          Object {
                            "data": Object {
                              "negate": false,
                              "tree": Object {
                                "comparison": Object {
                                  "comparisonValue": 122,
                                  "type": "lessOrEqual",
                                },
                                "comparisonTrue": Object {
                                  "comparison": Object {
                                    "comparisonValue": 97,
                                    "type": "moreOrEqual",
                                  },
                                  "type": "lastComparison",
                                },
                                "type": "comparison",
                              },
                              "unicode": false,
                            },
                            "posLine1": "...]{2,256}\\\\.[a-z]{2,6}\\\\b([-...",
                            "posLine2": "             ^^^^^",
                            "type": "charOrSet",
                          },
                        ],
                        "followUp": null,
                        "functionName": "fiber0003",
                        "lastAtomReturns": false,
                        "meta": Object {
                          "firstCharRange": Object {
                            "chars": Array [
                              97,
                              98,
                              99,
                              100,
                              101,
                              102,
                              103,
                              104,
                              105,
                              106,
                              107,
                              108,
                              109,
                              110,
                              111,
                              112,
                              113,
                              114,
                              115,
                              116,
                              117,
                              118,
                              119,
                              120,
                              121,
                              122,
                            ],
                            "negate": false,
                          },
                          "groups": Array [],
                          "maxCharLength": 1,
                          "minCharLength": 1,
                        },
                      },
                    },
                    "posLine1": "...]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-...",
                    "posLine2": "             ^^^^^^^^^^",
                    "type": "backtrackingFixedLengthQuantifier",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0004",
                "lastAtomReturns": true,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      46,
                    ],
                    "negate": false,
                  },
                  "groups": Array [
                    Object {
                      "astStart": 66,
                      "idx": 2,
                    },
                  ],
                  "maxCharLength": 7,
                  "minCharLength": 3,
                },
              },
              "maxCount": 256,
              "maxOrMinCount": true,
              "minCount": 2,
              "wrappedHandler": Object {
                "atoms": Array [
                  Object {
                    "data": Object {
                      "negate": false,
                      "tree": Object {
                        "comparison": Object {
                          "comparisonValue": 58,
                          "type": "lessOrEqual",
                        },
                        "comparisonFalse": Object {
                          "comparison": Object {
                            "comparisonValue": 95,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 122,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 126,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 97,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 90,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 95,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 61,
                                "type": "equal",
                              },
                              "comparisonFalse": Object {
                                "comparison": Object {
                                  "comparisonValue": 64,
                                  "type": "moreOrEqual",
                                },
                                "type": "lastComparison",
                              },
                              "comparisonTrue": Object {
                                "comparison": Object {
                                  "type": "true",
                                },
                                "type": "lastComparison",
                              },
                              "type": "comparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "comparisonTrue": Object {
                          "comparison": Object {
                            "comparisonValue": 43,
                            "type": "lessOrEqual",
                          },
                          "comparisonFalse": Object {
                            "comparison": Object {
                              "comparisonValue": 46,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 48,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue": 45,
                                "type": "moreOrEqual",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "comparisonTrue": Object {
                            "comparison": Object {
                              "comparisonValue": 37,
                              "type": "lessOrEqual",
                            },
                            "comparisonFalse": Object {
                              "comparison": Object {
                                "comparisonValue": 43,
                                "type": "equal",
                              },
                              "type": "lastComparison",
                            },
                            "comparisonTrue": Object {
                              "comparison": Object {
                                "comparisonValue1": 35,
                                "comparisonValue2": 37,
                                "type": "equalOneOfTwo",
                              },
                              "type": "lastComparison",
                            },
                            "type": "comparison",
                          },
                          "type": "comparison",
                        },
                        "type": "comparison",
                      },
                      "unicode": false,
                    },
                    "posLine1": "...)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[...",
                    "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^",
                    "type": "charOrSet",
                  },
                ],
                "followUp": null,
                "functionName": "fiber0005",
                "lastAtomReturns": false,
                "meta": Object {
                  "firstCharRange": Object {
                    "chars": Array [
                      35,
                      37,
                      43,
                      45,
                      46,
                      48,
                      49,
                      50,
                      51,
                      52,
                      53,
                      54,
                      55,
                      56,
                      57,
                      58,
                      61,
                      64,
                      65,
                      66,
                      67,
                      68,
                      69,
                      70,
                      71,
                      72,
                      73,
                      74,
                      75,
                      76,
                      77,
                      78,
                      79,
                      80,
                      81,
                      82,
                      83,
                      84,
                      85,
                      86,
                      87,
                      88,
                      89,
                      90,
                      95,
                      97,
                      98,
                      99,
                      100,
                      101,
                      102,
                      103,
                      104,
                      105,
                      106,
                      107,
                      108,
                      109,
                      110,
                      111,
                      112,
                      113,
                      114,
                      115,
                      116,
                      117,
                      118,
                      119,
                      120,
                      121,
                      122,
                      126,
                    ],
                    "negate": false,
                  },
                  "groups": Array [],
                  "maxCharLength": 1,
                  "minCharLength": 1,
                },
              },
            },
            "posLine1": "...)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,...",
            "posLine2": "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "type": "backtrackingFixedLengthQuantifier",
          },
        ],
        "followUp": null,
        "functionName": "fiber0006",
        "lastAtomReturns": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              35,
              37,
              43,
              45,
              46,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              61,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              95,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              126,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 66,
              "idx": 2,
            },
          ],
          "maxCharLength": 256,
          "minCharLength": 2,
        },
      },
      "functionName": "greedyQuantifier0008",
      "maxCount": 1,
      "maxOrMinCount": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 15,
            "idx": 1,
          },
          Object {
            "astStart": 66,
            "idx": 2,
          },
        ],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
      "posLine1": "...ps?:\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z0-...",
      "posLine2": "             ^^^^^^^^",
      "quantifierCounterIndex": 0,
      "wrappedHandler": "[Circular]",
    },
    Object {
      "followUp": Object {
        "atoms": Array [
          Object {
            "data": Object {
              "functionName": "greedyQuantifier0008",
              "maxOrMinCount": true,
              "quantifierCounterIndex": 0,
            },
            "posLine1": "...ps?:\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z0-...",
            "posLine2": "             ^^^^^^^^",
            "type": "quantifierStarter",
          },
        ],
        "followUp": null,
        "functionName": "fiber0009",
        "lastAtomReturns": true,
        "meta": Object {
          "firstCharRange": Object {
            "chars": Array [
              35,
              37,
              43,
              45,
              46,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              61,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              95,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              126,
            ],
            "negate": false,
          },
          "groups": Array [
            Object {
              "astStart": 15,
              "idx": 1,
            },
            Object {
              "astStart": 66,
              "idx": 2,
            },
          ],
          "maxCharLength": 260,
          "minCharLength": 2,
        },
      },
      "functionName": "greedyQuantifier0011",
      "maxCount": 1,
      "maxOrMinCount": true,
      "meta": Object {
        "firstCharRange": Object {
          "chars": Array [],
          "negate": false,
        },
        "groups": Array [
          Object {
            "astStart": 1,
            "idx": 0,
          },
          Object {
            "astStart": 15,
            "idx": 1,
          },
          Object {
            "astStart": 66,
            "idx": 2,
          },
        ],
        "maxCharLength": 0,
        "minCharLength": 0,
      },
      "posLine1": "/(https?:\\\\/\\\\/)?(www\\\\.)?[-...",
      "posLine2": " ^^^^^^^^^^^^^^",
      "quantifierCounterIndex": 1,
      "wrappedHandler": "[Circular]",
    },
  ],
  "groups": Array [
    Object {
      "astStart": 1,
      "idx": 0,
    },
    Object {
      "astStart": 15,
      "idx": 1,
    },
    Object {
      "astStart": 66,
      "idx": 2,
    },
  ],
  "lazyQuantifierHandlers": Array [],
  "mainHandler": Object {
    "atoms": Array [
      Object {
        "data": Object {
          "functionName": "greedyQuantifier0011",
          "maxOrMinCount": true,
          "quantifierCounterIndex": 1,
        },
        "posLine1": "/(https?:\\\\/\\\\/)?(www\\\\.)?[-...",
        "posLine2": " ^^^^^^^^^^^^^^",
        "type": "quantifierStarter",
      },
    ],
    "followUp": null,
    "functionName": "fiber0013",
    "lastAtomReturns": true,
    "meta": Object {
      "firstCharRange": Object {
        "chars": Array [
          35,
          37,
          43,
          45,
          46,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          61,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          95,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          126,
        ],
        "negate": false,
      },
      "groups": Array [
        Object {
          "astStart": 1,
          "idx": 0,
        },
        Object {
          "astStart": 15,
          "idx": 1,
        },
        Object {
          "astStart": 66,
          "idx": 2,
        },
      ],
      "maxCharLength": 268,
      "minCharLength": 2,
    },
  },
  "quantifierCountersLength": 2,
  "regexStr": "/(https?:\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/",
}
`;
